<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Adam Cook</title>
        <link>https://adamcook.io/</link>
        <description>Recent content on Adam Cook</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Sun, 18 Sep 2022 10:22:56 +0100</lastBuildDate><atom:link href="https://adamcook.io/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Patching Snowflakes with ConfigMgr and PowerShell</title>
        <link>https://adamcook.io/p/patching-snowflakes-with-configmgr-and-powershell/</link>
        <pubDate>Sun, 18 Sep 2022 10:22:56 +0100</pubDate>
        
        <guid>https://adamcook.io/p/patching-snowflakes-with-configmgr-and-powershell/</guid>
        <description>&lt;img src="https://adamcook.io/p/patching-snowflakes-with-configmgr-and-powershell/images/cover.jpg" alt="Featured image of post Patching Snowflakes with ConfigMgr and PowerShell" /&gt;&lt;ul&gt;
&lt;li&gt;Do you have servers in your environment that require special or manual patching?&lt;/li&gt;
&lt;li&gt;Do you have non-redundant application servers that must have a co-ordinated patching routine? Wish you used ConfigMgr for these but haven&amp;rsquo;t figured out a way?&lt;/li&gt;
&lt;li&gt;Do you have spaghetti or unfinished code that attempts to orchestrate complicated patching cycles?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By &amp;ldquo;special patching,&amp;rdquo; I mean the customer or application owners are terrified of the word &amp;ldquo;patching&amp;rdquo;, and they demand it be performed manually on a handful of finicky application servers out of fear of downtime. &lt;em&gt;(yeah, because hitting &amp;lsquo;check for updates&amp;rsquo; manually reduces risk&lt;/em&gt; üòí &lt;em&gt;)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This leaves you feeling frustrated in having to perform tedious manual labour. Login, point, click, sit, wait etc.. You&amp;rsquo;re also annoyed the business has invested in a behemoth like ConfigMgr, and aren&amp;rsquo;t using it to its full potential just for these handful of special &amp;ldquo;snowflake&amp;rdquo; servers.&lt;/p&gt;
&lt;p&gt;This is where I tell you I wrote a PowerShell module that automates this! Which is funny because you apparently shouldn&amp;rsquo;t automate it! You must do it manually! üòÜ but hang on let me explain..&lt;/p&gt;
&lt;p&gt;Quick shout out to &lt;a class=&#34;link&#34; href=&#34;https://twitter.com/CodyMathis123&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Cody Mathis&lt;/a&gt; who helped me soundboard a fair bit and provide some support on this üëç&lt;/p&gt;
&lt;h2 id=&#34;pscmsnowflakepatching&#34;&gt;PSCMSnowflakePatching&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/codaamok/PSCMSnowflakePatching&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PSCMSnowflakePatching&lt;/a&gt; is a PowerShell module which contains a few functions but the primary interest is in &lt;a class=&#34;link&#34; href=&#34;https://github.com/codaamok/PSCMSnowflakePatching/blob/main/docs/Invoke-CMSoftwareUpdateInstall.md&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;code&gt;Invoke-CMSnowflakePatching&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this post I want to show you why I think this function will help you patch these snowflake systems without needing to sacrifice the use of ConfigMgr. It can streamline your manual labour, or your existing automation process, or hopefully inspire you to automate a complex patching routine with it.&lt;/p&gt;
&lt;p&gt;Using &lt;code&gt;Invoke-CMSnowflakePatching&lt;/code&gt;, you can either:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a) give it one or more hostnames via the &lt;code&gt;-ComputerName&lt;/code&gt; parameter&lt;/li&gt;
&lt;li&gt;b) give it a ConfigMgr device collection ID via the &lt;code&gt;-CollectionId&lt;/code&gt; parameter&lt;/li&gt;
&lt;li&gt;c) use the &lt;code&gt;-ChooseCollection&lt;/code&gt; parameter and select a device collection from your environment&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For each host, it will remotely start the software update installation for all updates deployed to it.&lt;/p&gt;
&lt;p&gt;By default it doesn&amp;rsquo;t reboot or make any retry attempts, but there are parameters for this if you need it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-AllowReboot&lt;/code&gt; switch will reboot the system(s) if any updates require a restart&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-Attempts&lt;/code&gt; parameter will let you indicate the maximum number of retries you would like the function to install updates if there was a failure in the previous attempt&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All hosts are processed in parallel, and you will get a live progress update from each host as it has finished patching with a break down of what updates were installed, success or failure.&lt;/p&gt;
&lt;p&gt;If you use the either the &lt;code&gt;-ComputerName&lt;/code&gt; or &lt;code&gt;-CollectionId&lt;/code&gt; parameters, an output object is returned at the end with the result of patching for each host. This is great because if you want to orchestrate a complex patching routine with tools such as System Center Orchestrator or Azure Automation, you can absolutely do this with the feedback from the function.&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/patching-snowflakes-with-configmgr-and-powershell/images/1-1.png&#34; data-size=&#34;1353x471&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/patching-snowflakes-with-configmgr-and-powershell/images/1-1_hued2ad1d1ad75bdb6235311e959cac6eb_173747_480x0_resize_box_3.png 480w, https://adamcook.io/p/patching-snowflakes-with-configmgr-and-powershell/images/1-1_hued2ad1d1ad75bdb6235311e959cac6eb_173747_1024x0_resize_box_3.png 1024w&#34;
				src=&#34;https://adamcook.io/p/patching-snowflakes-with-configmgr-and-powershell/images/1-1.png&#34; width=&#34;1353&#34; height=&#34;471&#34; loading=&#34;lazy&#34;
				alt=&#34;Live progress written to console&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Live progress written to console&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;In the above screenshot, you can see we&amp;rsquo;re calling &lt;code&gt;Invoke-CMSnowflakePatching&lt;/code&gt; and giving it a ConfigMgr device collection ID. We&amp;rsquo;re capturing the output of the command by assigning it to the &lt;code&gt;$result&lt;/code&gt; variable.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s worth calling out the two time columns seen on all lines: the first column is the time when that line was written, and the second column is the elapsed time since the start of execution.&lt;/p&gt;
&lt;p&gt;Beyond the first few lines revolving around startup, you can see essential information as the jobs finish patching each host. We can see the list of updates that successfully installed, and a yellow text warning indicating one of the updates put the system in a pending reboot state.&lt;/p&gt;
&lt;p&gt;If you were running this ad-hoc and interactively, I suspect you might find this realtime information helpful. This output likely can&amp;rsquo;t easily be captured by most automation tools as it&amp;rsquo;s just &lt;code&gt;Write-Host&lt;/code&gt;. However, this is why an output object is returned instead (see below) - this output can be captured and used however you please.&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/patching-snowflakes-with-configmgr-and-powershell/images/1-2.png&#34; data-size=&#34;1363x487&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/patching-snowflakes-with-configmgr-and-powershell/images/1-2_hu05a6692c2cb31f334affe228a3b178d2_314016_480x0_resize_box_3.png 480w, https://adamcook.io/p/patching-snowflakes-with-configmgr-and-powershell/images/1-2_hu05a6692c2cb31f334affe228a3b178d2_314016_1024x0_resize_box_3.png 1024w&#34;
				src=&#34;https://adamcook.io/p/patching-snowflakes-with-configmgr-and-powershell/images/1-2.png&#34; width=&#34;1363&#34; height=&#34;487&#34; loading=&#34;lazy&#34;
				alt=&#34;Output object in the $result variable&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Output object in the $result variable&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Looking at the above screenshot, this is where more automation possibilities become available for you.&lt;/p&gt;
&lt;p&gt;The function returned a summary of the patch jobs for each host as output objects, and we captured this in the &lt;code&gt;$result&lt;/code&gt; variable from the last screenshot. Here we can see valuable information that might help feed as input to other automation things.&lt;/p&gt;
&lt;p&gt;Here is another example, if I ran the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;PS C:\&amp;gt; $result = Invoke-CMSnowflakePatching -ComputerName &#39;VEEAM&#39; -AllowReboot -Attempts 3
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This time we&amp;rsquo;re just targetting the one server, permitting the server to reboot if an update returned a hard/soft pending reboot, and allow a maximum of 3 retries if there were any installation failures.&lt;/p&gt;
&lt;p&gt;At the end of the process, you will receive an output object similar to the below in the &lt;code&gt;$result&lt;/code&gt; variable:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;PS C:\&amp;gt; $result

ComputerName     : VEEAM
Result           : Failure
Updates          : {@{Name=7-Zip 22.01 (MSI-x64); ArticleID=PMPC-2022-07-18; EvaluationState=Error;
                   ErrorCode=2147944003}, @{Name=2022-08 Security Update for Microsoft server operating system version 21H2 for x64-based Systems
                   (KB5012170); ArticleID=5012170; EvaluationState=InstallComplete; ErrorCode=0}, @{Name=2022-08 Cumulative Update for .NET Framework 3.5 and 4.8 for
                   Microsoft server operating system version 21H2 for x64 (KB5015733); ArticleID=5015733; EvaluationState=InstallComplete; ErrorCode=0},
                   @{Name=Microsoft Edge 105.0.1343.33 (x64); ArticleID=PMPC-2022-09-09; EvaluationState=InstallComplete; ErrorCode=0}}
IsPendingReboot  : False
NumberOfReboots  : 1
NumberOfAttempts : 3
RunspaceId       : af37488e-dad9-4d56-b72a-5aa642e589e4
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;From the output above you can see the overall result from patching my Veeam server; the list of updates that were installed, whether there is a pending reboot, how many times the server was rebooted during patching, and how many times it retried.&lt;/p&gt;
&lt;p&gt;We can see &lt;code&gt;NumberOfRetries&lt;/code&gt; is 3, and that &lt;code&gt;7-Zip 22.01 (MSI-x64)&lt;/code&gt; finished in a state of &lt;code&gt;Error&lt;/code&gt; - it failed to install the update despite 3 attempts.&lt;/p&gt;
&lt;p&gt;It looks like it installed all updates, and likely one of the Windows updates returned a pending reboot so the server rebooted. As the 7-Zip update failed in the previous attempt, it was retried. It retried for a maximum of 3 attempts before returning.&lt;/p&gt;
&lt;p&gt;Here is the full content of the &lt;code&gt;Updates&lt;/code&gt; property from the output object in list view:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;PS C:\&amp;gt; $result.Updates | fl

Name            : 7-Zip 22.01 (MSI-x64) - (Republished on 2022-09-15 at 17:52)
ArticleID       : PMPC-2022-07-18
EvaluationState : Error
ErrorCode       : 2147944003

Name            : 2022-08 Security Update for Microsoft server operating system version 21H2 for x64-based Systems (KB5012170)
ArticleID       : KB5012170
EvaluationState : InstallComplete
ErrorCode       : 0

Name            : 2022-08 Cumulative Update for .NET Framework 3.5 and 4.8 for Microsoft server operating system version 21H2 for x64 (KB5015733)
ArticleID       : KB5015733
EvaluationState : InstallComplete
ErrorCode       : 0

Name            : Microsoft Edge 105.0.1343.33 (x64)
ArticleID       : PMPC-2022-09-09
EvaluationState : InstallComplete
ErrorCode       : 0
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;With this output, you have a lot of opportunities. For example, you could feed this output to other scripts to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Send an email as a report with the result (&lt;a class=&#34;link&#34; href=&#34;https://github.com/codaamok/PSCMSnowflakePatching/blob/main/examples/SendMail.ps1&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;see this example here&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Invoke some other custom remedial actions on the server or application it hosts&lt;/li&gt;
&lt;li&gt;Send the data to a ticketing system using some web API, or raise an alert somewhere&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Another benefit here is that you are using what you&amp;rsquo;ve paid for - ConfigMgr! With this approach, there will be no need to abandon usual deployment, content delivery, and reporting capabilities. The function is installing the software updates deployed to the client by ConfigMgr.&lt;/p&gt;
&lt;p&gt;Here are a couple more example screenshots:&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/patching-snowflakes-with-configmgr-and-powershell/images/2.png&#34; data-size=&#34;1460x824&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/patching-snowflakes-with-configmgr-and-powershell/images/2_hu1b5c773921c451cbc7f4baed43cb1b48_352975_480x0_resize_box_3.png 480w, https://adamcook.io/p/patching-snowflakes-with-configmgr-and-powershell/images/2_hu1b5c773921c451cbc7f4baed43cb1b48_352975_1024x0_resize_box_3.png 1024w&#34;
				src=&#34;https://adamcook.io/p/patching-snowflakes-with-configmgr-and-powershell/images/2.png&#34; width=&#34;1460&#34; height=&#34;824&#34; loading=&#34;lazy&#34;
				alt=&#34;Successful installation without any pending reboots&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Successful installation without any pending reboots&lt;/figcaption&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/patching-snowflakes-with-configmgr-and-powershell/images/3.png&#34; data-size=&#34;1460x929&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/patching-snowflakes-with-configmgr-and-powershell/images/3_hu474dfd00101a303316becadf49821752_470678_480x0_resize_box_3.png 480w, https://adamcook.io/p/patching-snowflakes-with-configmgr-and-powershell/images/3_hu474dfd00101a303316becadf49821752_470678_1024x0_resize_box_3.png 1024w&#34;
				src=&#34;https://adamcook.io/p/patching-snowflakes-with-configmgr-and-powershell/images/3.png&#34; width=&#34;1460&#34; height=&#34;929&#34; loading=&#34;lazy&#34;
				alt=&#34;Failed installation and pending reboots&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Failed installation and pending reboots&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;interactively-use-pscmsnowflakepatching-with-the--choosecollection-parameter&#34;&gt;Interactively use PSCMSnowflakePatching with the &lt;code&gt;-ChooseCollection&lt;/code&gt; Parameter&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;-ChooseCollection&lt;/code&gt; is the only parameter that you can&amp;rsquo;t use in an automated fashion. This is because it produces a pop-up &lt;code&gt;Out-GridView&lt;/code&gt; window prompting you to choose a ConfigMgr device collection.&lt;/p&gt;
&lt;p&gt;This is just demonstrating that you can still use &lt;code&gt;Invoke-CMSnowflakePatching&lt;/code&gt; to &amp;lsquo;manually&amp;rsquo; patch systems if you wish to, just without the hassle of login, point, click, etc.&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/patching-snowflakes-with-configmgr-and-powershell/images/4.gif&#34; data-size=&#34;1571x1105&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/patching-snowflakes-with-configmgr-and-powershell/images/4_hu6866cb3f5a1f46a6b95d1f2ca98fd465_487272_480x0_resize_box.gif 480w, https://adamcook.io/p/patching-snowflakes-with-configmgr-and-powershell/images/4_hu6866cb3f5a1f46a6b95d1f2ca98fd465_487272_1024x0_resize_box.gif 1024w&#34;
				src=&#34;https://adamcook.io/p/patching-snowflakes-with-configmgr-and-powershell/images/4.gif&#34; width=&#34;1571&#34; height=&#34;1105&#34; loading=&#34;lazy&#34;
				alt=&#34;Animated gif to show the -ChooseCollection parameter&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Animated gif to show the -ChooseCollection parameter&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;why-a-module-why-not-just-a-script&#34;&gt;Why a module? Why not just a script?&lt;/h2&gt;
&lt;p&gt;This could just be my subconscious self playing games in my mind, but I feel the need to justify why this ended up being a module and not a single script file. An irrational pressure builds in my mind when I publish code online - &amp;ldquo;it must be perfect and justified!&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Jobs are used to process multiple hosts at once for patching, and I found I was re-using code to account for things like loop waiting, timeouts, and retries. You can&amp;rsquo;t easily use nor pass functions to jobs, so instead, for better management and readability, I opted for a module and for each job, I leverage the module for reusing code.&lt;/p&gt;
&lt;h2 id=&#34;why-not-use-a-task-sequence&#34;&gt;Why not use a task sequence?&lt;/h2&gt;
&lt;p&gt;I guess there could be an argument made to use a task sequence if you needed to orchestrate complex patching routines. I wouldn&amp;rsquo;t disagree with the idea, whatever floats your boat. For me personally, code offers more flexibility.&lt;/p&gt;
&lt;p&gt;For instance, in a task sequence I don&amp;rsquo;t think it&amp;rsquo;s trivial to perform actions in a loop on a timer until it eventually succeeds. This sort of logic is littered within &lt;code&gt;Invoke-CMSnowflakePatching&lt;/code&gt;, with thanks to &lt;a class=&#34;link&#34; href=&#34;http://twitter.com/codymathis123&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Cody Mathis&lt;/a&gt; and &lt;a class=&#34;link&#34; href=&#34;https://github.com/CodyMathis123/CM-Ramblings/blob/master/New-LoopAction.ps1&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;code&gt;New-LoopAction&lt;/code&gt;&lt;/a&gt; ‚ù§Ô∏è&lt;/p&gt;
&lt;h2 id=&#34;why&#34;&gt;Why?&lt;/h2&gt;

&lt;iframe src=&#34;https://giphy.com/embed/3cXmze4Y8igXdnkc3U&#34; width=&#34;480&#34; height=&#34;360&#34; frameBorder=&#34;0&#34; class=&#34;giphy-embed&#34; allowFullScreen style=&#34;display: block; margin: 0 auto;&#34;&gt;&lt;/iframe&gt;

&lt;p&gt;Andrew Porter pinged me asking if I would help making one. He found a few scripts online here and there which collectively sort of did what he wanted but not quite.&lt;/p&gt;
&lt;p&gt;These are the scripts which he found:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Only installs updates, doesn‚Äôt reboot or cycle through
&lt;a class=&#34;link&#34; href=&#34;https://timmyit.com/2016/08/01/sccm-and-powershell-force-install-of-software-updates-thats-available-on-client-through-wmi/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://timmyit.com/2016/08/01/sccm-and-powershell-force-install-of-software-updates-thats-available-on-client-through-wmi/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Triggers up0dates remotely and reboots but doesn‚Äôt cycle through again or notify results
&lt;a class=&#34;link&#34; href=&#34;https://eskonr.com/2021/05/using-scripts-to-trigger-software-updates-remotely-from-the-sccm-console/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://eskonr.com/2021/05/using-scripts-to-trigger-software-updates-remotely-from-the-sccm-console/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install updates, reboot and loops to install further updates ‚Äì not completely working
&lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/answers/questions/642405/powershell-loop-install-of-available-software-upda.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://docs.microsoft.com/en-us/answers/questions/642405/powershell-loop-install-of-available-software-upda.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Installs updates on all servers in a collection, reboots and loops to install further updates
&lt;a class=&#34;link&#34; href=&#34;https://www.itreliable.com/wp/powershell-script-to-install-software-updates-deployed-by-sccm-and-reboot-the-computer-remotely/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.itreliable.com/wp/powershell-script-to-install-software-updates-deployed-by-sccm-and-reboot-the-computer-remotely/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Method 4 seem ideal as its code was more or less complete. I personally wasn&amp;rsquo;t a fan of the style of code, so I decided to rewrite it.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Remote Desktop Gateway Woes and NPS Logging</title>
        <link>https://adamcook.io/p/remote-desktop-gateway-woes-and-nps-logging/</link>
        <pubDate>Thu, 13 Jan 2022 12:57:21 +0000</pubDate>
        
        <guid>https://adamcook.io/p/remote-desktop-gateway-woes-and-nps-logging/</guid>
        <description>&lt;img src="https://adamcook.io/p/remote-desktop-gateway-woes-and-nps-logging/images/cover.jpg" alt="Featured image of post Remote Desktop Gateway Woes and NPS Logging" /&gt;&lt;p&gt;I recently set up a new lab at home and was installing Remote Desktop Gateway on Windows Server 2022.&lt;/p&gt;
&lt;p&gt;While setting it up, and also configuring RAS as a virtual router, I was very confused as to why I kept getting moaned at while attempting to RDP to a system using the gateway:&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/remote-desktop-gateway-woes-and-nps-logging/images/rdperror.png&#34; data-size=&#34;558x246&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/remote-desktop-gateway-woes-and-nps-logging/images/rdperror_hu16c32773696d49455c40809e08debcb1_53896_480x0_resize_box_3.png 480w, https://adamcook.io/p/remote-desktop-gateway-woes-and-nps-logging/images/rdperror_hu16c32773696d49455c40809e08debcb1_53896_1024x0_resize_box_3.png 1024w&#34;
				src=&#34;https://adamcook.io/p/remote-desktop-gateway-woes-and-nps-logging/images/rdperror.png&#34; width=&#34;558&#34; height=&#34;246&#34; loading=&#34;lazy&#34;
				alt=&#34;Remote Desktop can&amp;rsquo;t connect to the remote computer for one of these reasons&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Remote Desktop can‚Äôt connect to the remote computer for one of these reasons&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;I was absolutely confident everything was configured correctly:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DNS, routing, and firewall was fine&lt;/li&gt;
&lt;li&gt;My RAP and CAP policies in RD Gateway Manager also had the correct things set: the user account I was connected with was in the correct groups, and so were the systems I was trying to connect to.&lt;/li&gt;
&lt;li&gt;I had password authentication enabled, and not smartcard&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I spent hours scouring &amp;ldquo;the Google&amp;rdquo; for ideas and discussions etc. All &amp;ldquo;answers&amp;rdquo; revolved around the simple misconfig of missing user/computer objects in groups of the RAP/CAP stuff.&lt;/p&gt;
&lt;p&gt;The event viewer log for TerminalServices-Gateway was leading me up the garden path:&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/remote-desktop-gateway-woes-and-nps-logging/images/terminalservicesgatewaylog.png&#34; data-size=&#34;2612x1243&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/remote-desktop-gateway-woes-and-nps-logging/images/terminalservicesgatewaylog_hucfb754fe708174484b169a86af98e2e1_284770_480x0_resize_box_3.png 480w, https://adamcook.io/p/remote-desktop-gateway-woes-and-nps-logging/images/terminalservicesgatewaylog_hucfb754fe708174484b169a86af98e2e1_284770_1024x0_resize_box_3.png 1024w&#34;
				src=&#34;https://adamcook.io/p/remote-desktop-gateway-woes-and-nps-logging/images/terminalservicesgatewaylog.png&#34; width=&#34;2612&#34; height=&#34;1243&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The user &amp;ldquo;CODAAMOK\acc&amp;rdquo;, on client computer &amp;ldquo;192.168.0.50&amp;rdquo;, did not meet connection authorization policy requirements and was therefore not authorized to access the RD Gateway server. The authentication method used was: &amp;ldquo;NTLM&amp;rdquo; and connection protocol used: &amp;ldquo;HTTP&amp;rdquo;. The following error occurred: &amp;ldquo;23003&amp;rdquo;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Long story short, I noticed this snippet in the System event viewer log which definitely was not useless:&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/remote-desktop-gateway-woes-and-nps-logging/images/systemlog.png&#34; data-size=&#34;2612x1243&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/remote-desktop-gateway-woes-and-nps-logging/images/systemlog_hucfb754fe708174484b169a86af98e2e1_254504_480x0_resize_box_3.png 480w, https://adamcook.io/p/remote-desktop-gateway-woes-and-nps-logging/images/systemlog_hucfb754fe708174484b169a86af98e2e1_254504_1024x0_resize_box_3.png 1024w&#34;
				src=&#34;https://adamcook.io/p/remote-desktop-gateway-woes-and-nps-logging/images/systemlog.png&#34; width=&#34;2612&#34; height=&#34;1243&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;NPS cannot log accounting information in the primary data store (C:\Windows\system32\LogFiles\IN2201.log). Due to this logging failure, NPS will discard all connection requests. Error information: 22.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This little nugget left me to finding the Network Policy Server snap-in (my RD Gateway is configured to use the local NPS service, which is the default). At this point I didn&amp;rsquo;t care for why it couldn&amp;rsquo;t log, I just wanted to use the gateway. Under &lt;code&gt;Accounting&lt;/code&gt;, select &lt;code&gt;Change Log File Properties&lt;/code&gt; and you can bypass the option to abort connection if failed to log:&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/remote-desktop-gateway-woes-and-nps-logging/images/npschangelogfileproperties.png&#34; data-size=&#34;2278x1119&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/remote-desktop-gateway-woes-and-nps-logging/images/npschangelogfileproperties_hufd4faa43a5a2ba4d522f6bd72001ab91_125891_480x0_resize_box_3.png 480w, https://adamcook.io/p/remote-desktop-gateway-woes-and-nps-logging/images/npschangelogfileproperties_hufd4faa43a5a2ba4d522f6bd72001ab91_125891_1024x0_resize_box_3.png 1024w&#34;
				src=&#34;https://adamcook.io/p/remote-desktop-gateway-woes-and-nps-logging/images/npschangelogfileproperties.png&#34; width=&#34;2278&#34; height=&#34;1119&#34; loading=&#34;lazy&#34;
				alt=&#34;Change Log File Properties - Network Policy Server&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Change Log File Properties - Network Policy Server&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;After making this change, I could use my new shiny RD Gateway!&lt;/p&gt;
&lt;p&gt;This might not be the solution for you, perhaps your issue is simply DNS/routing/firewall, or maybe you haven&amp;rsquo;t correctly added your user account or server/computer you&amp;rsquo;re trying to access to your RAP/CAP config. However, if you were like me, and had everything setup correctly, except this oddity, then I hope this workaround is suitable for you.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>PowerShell vs. CSharp Azure Functions Cold Starts</title>
        <link>https://adamcook.io/p/powershell-vs.-csharp-azure-functions-cold-starts/</link>
        <pubDate>Sat, 07 Aug 2021 18:29:18 +0100</pubDate>
        
        <guid>https://adamcook.io/p/powershell-vs.-csharp-azure-functions-cold-starts/</guid>
        <description>&lt;img src="https://adamcook.io/p/powershell-vs.-csharp-azure-functions-cold-starts/images/cover.jpg" alt="Featured image of post PowerShell vs. CSharp Azure Functions Cold Starts" /&gt;&lt;p&gt;It has been a while since I&amp;rsquo;ve written a post. I&amp;rsquo;ve been pretty committed to a new job I started at the start of the year. I need to find more positive outlets and return to doing the things I enjoy in my down-time. I hope to do more tinkering on side projects and giving back to the community.&lt;/p&gt;
&lt;p&gt;The cover image for this post if for our pup, Alfie! He&amp;rsquo;s a beagle and we will be bringing him home in a couple of weeks.&lt;/p&gt;
&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;
&lt;p&gt;In this post I want to show you how PowerShell and C# stack up against each other with their cold start times in Azure Functions.&lt;/p&gt;
&lt;p&gt;A quick recap of Azure Functions if you&amp;rsquo;re unsure:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Serverless computing (&amp;ldquo;less servers&amp;rdquo; ¬© &lt;a class=&#34;link&#34; href=&#34;https://twitter.com/jeffhollan&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Jeff Hollan&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Scalable cloud resources where you can execute given code to perform a task on a schedule or trigger, e.g.:
&lt;ul&gt;
&lt;li&gt;A website backend API that interacts with internal resources or third party APIs&lt;/li&gt;
&lt;li&gt;Trigger a script to run when a new VM is created in Azure&lt;/li&gt;
&lt;li&gt;Send an email or Teams notification with a given message fed via HTTP POST request&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;If you want to learn with more examples, check out these resources:
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=499iCgNLDDE&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Build serverless APIs with Azure Functions | Azure Friday&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/azure/azure-functions/functions-overview&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Introduction to Azure Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=zIfxkub7CLY&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Intro to Azure Functions - What they are and how to create and deploy them&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://millerb.co.uk/2019/11/27/Getting-Started-Pwsh-Az-Functions-Part-1.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PowerShell &amp;amp; Azure Functions - Part 1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;What is a cold start? A cold start is the process of a function starting up and completing the task. The painful fact here is that if your function is left idle for some period of time, e.g. 15 or 20 minutes, the process of the function is stopped until it is called again. The latency the user experiences calling your function again after it has stopped is high. If the user calls your function again within the idle period, before it is stopped, the latency is low because the function is still running.&lt;/p&gt;
&lt;p&gt;You can mitigate cold starts in Azure with &lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/azure/azure-functions/functions-premium-plan?tabs=portal#eliminate-cold-starts&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Premium Plan&lt;/a&gt; features and a &lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/azure/azure-functions/dedicated-plan&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;App Service&lt;/a&gt; plan.&lt;/p&gt;
&lt;h1 id=&#34;the-test&#34;&gt;The test&lt;/h1&gt;
&lt;p&gt;For me to show you how PowerShell and C# perform against each other in Azure Function Apps, I have two HTTP-trigger functions: &lt;a class=&#34;link&#34; href=&#34;https://github.com/codaamok/PoSH/tree/master/Azure/AzureFunctions/GraphAPI-Mail-PS&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GraphAPI-Mail-PS&lt;/a&gt; and &lt;a class=&#34;link&#34; href=&#34;https://github.com/codaamok/PoSH/tree/master/Azure/AzureFunctions/GraphAPI-Mail-CSharp&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GraphAPI-Mail-CSharp&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When I send a simple HTTP request to either one, they send an email to me, from myself, using Microsoft&amp;rsquo;s Graph API, e.g.:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Calls the C# Function App&lt;/span&gt;
Invoke-RestMethod -Uri &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://graphapi-mail-csharp.azurewebsites.net/api/GraphAPI_Mail&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Calls the PowerShell Function App&lt;/span&gt;
Invoke-RestMethod -Uri &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://graphapi-mail-ps.azurewebsites.net/api/GraphAPI-Mail&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I intend to run the above, a hundred times for each while recycling the Function App in-between each time to force a cold start, and see what the numbers are. This is what I intend to use to carry out the test: &lt;a class=&#34;link&#34; href=&#34;https://github.com/codaamok/PoSH/blob/master/Azure/AzureFunctions/Compare-PSCSharpGraphAPIMail.ps1&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Compare-PSCSharpGraphAPIMail.ps1&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id=&#34;the-results&#34;&gt;The results&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Function App&lt;/th&gt;
&lt;th&gt;Average (s)&lt;/th&gt;
&lt;th&gt;Minimum (s)&lt;/th&gt;
&lt;th&gt;Maximum (s)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;GraphAPI-Mail-CSharp&lt;/td&gt;
&lt;td&gt;1.564564157&lt;/td&gt;
&lt;td&gt;0.418345&lt;/td&gt;
&lt;td&gt;3.5649865&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GraphAPI-Mail-PS&lt;/td&gt;
&lt;td&gt;18.533579388&lt;/td&gt;
&lt;td&gt;13.5226983&lt;/td&gt;
&lt;td&gt;47.0977745&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;discussion&#34;&gt;Discussion&lt;/h1&gt;
&lt;p&gt;If you&amp;rsquo;ve been on the fence about trying C# and you consider yourself handy with PowerShell, hopefully this post has given you some motivation to at least give C# some serious thought.&lt;/p&gt;
&lt;p&gt;I have to be honest though, writing code with C# is not as easy as PowerShell. I guess this applies to all new things but I felt a fair bit of frustration while learning C# and trying to apply it. Thankfully I work with some great people that helped me, mainly &lt;a class=&#34;link&#34; href=&#34;https://twitter.com/CodyMathis123&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Cody&lt;/a&gt; and a bit of &lt;a class=&#34;link&#34; href=&#34;https://twitter.com/powers_hell&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Ben&lt;/a&gt; too!&lt;/p&gt;
&lt;p&gt;I immediately sense that there is a lot of &amp;lsquo;scaffolding&amp;rsquo; involved to write in C# compared to PowerShell, however doing this test has given me a good insight and understanding. For an example of an Azure Function App, C# fits in well because it can ran what you want significantly quicker so if you have anything that involve some user experience, it is for sure superior.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Using PowerShell to Manage Shlink With PSShlink</title>
        <link>https://adamcook.io/p/using-powershell-to-manage-shlink-with-psshlink/</link>
        <pubDate>Mon, 21 Dec 2020 00:00:00 +0000</pubDate>
        
        <guid>https://adamcook.io/p/using-powershell-to-manage-shlink-with-psshlink/</guid>
        <description>&lt;img src="https://adamcook.io/p/using-powershell-to-manage-shlink-with-psshlink/images/cover.jpg" alt="Featured image of post Using PowerShell to Manage Shlink With PSShlink" /&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://shlink.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Shlink&lt;/a&gt; is an open-source self-hosted and PHP-based URL shortener application. I wrote &lt;a class=&#34;link&#34; href=&#34;https://github.com/codaamok/psshlink&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PSShlink&lt;/a&gt; which will help you manage all of your short codes using PowerShell!&lt;/p&gt;
&lt;p&gt;Shlink helped me tremendously when I moved my domain and blog CMS from cookadam.co.uk to adamcook.io. Some of my posts rank modestly in search results for some keywords and I felt unhappy about letting that go. I also did not want people&amp;rsquo;s bookmarks for posts using my old domain to result in an incomplete redirect to its new URL.&lt;/p&gt;
&lt;p&gt;Google also help you secure your position in search results if you tell them your new domain. There were a couple of prerequisites to make this happen and one of them was to ensure all posts (discovered by my sitemap.xml) provided a 301 to a valid URL, usign my new domain. This is where Shlink stepped in.&lt;/p&gt;
&lt;p&gt;Anyway, I wholeheartedly consumed Shlink which enabled me to migrate my blog to a new domain and I loved it. I moved from WordPress to using Hugo (see &lt;a class=&#34;link&#34; href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Deploying Hugo Websites in Azure for Pennies or Free on GitHub Pages&lt;/a&gt;). Thankfully I didn&amp;rsquo;t have too many posts to carry over. However there was enough to make me want to use a tool to convert WordPress post XML to Markdown: &lt;a class=&#34;link&#34; href=&#34;https://github.com/lonekorean/wordpress-export-to-markdown&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;lonekorean/wordpress-export-to-markdown&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There was also enough to make my hands hurt with a lot of careful copying and pasting trying to create all the short links in Shlink for both domains &lt;code&gt;cookadam.co.uk&lt;/code&gt; and &lt;code&gt;www.cookadam.co.uk&lt;/code&gt;. I looked to see if there was a Shlink module in PowerShell gallery, and there wasn&amp;rsquo;t. Like many other PowerShell enthusiasts, I jumped on the opportunity and wrote &lt;a class=&#34;link&#34; href=&#34;https://github.com/codaamok/PSShlink&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PSShlink&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;installing-psshlink&#34;&gt;Installing PSShlink&lt;/h2&gt;
&lt;p&gt;Install the module from the PowerShell Gallery:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;Install-Module PSShlink -Scope CurrentUser
Import-Module PSShlink
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Check out all of the available functions:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;Get-Command -Module PSShlink
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/using-powershell-to-manage-shlink-with-psshlink/images/1.jpg&#34; data-size=&#34;1113x508&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/using-powershell-to-manage-shlink-with-psshlink/images/1_hu56414c8df0d48db30f3ff9ac1aca37cd_34017_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/using-powershell-to-manage-shlink-with-psshlink/images/1_hu56414c8df0d48db30f3ff9ac1aca37cd_34017_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/using-powershell-to-manage-shlink-with-psshlink/images/1.jpg&#34; width=&#34;1113&#34; height=&#34;508&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;authentication&#34;&gt;Authentication&lt;/h2&gt;
&lt;p&gt;Each function will have two parameters for authentication to your Shlink instance:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;-ShlinkServer&lt;/code&gt;: a string value of the Shlink server address e.g. &lt;a class=&#34;link&#34; href=&#34;https://example.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://example.com&lt;/a&gt;
&lt;code&gt;-ShlinkApiKey&lt;/code&gt;: a SecureString value for the Shlink server&amp;rsquo;s API key&lt;/p&gt;
&lt;p&gt;After using any function of PSShlink for the first time after importing the module - which have both parameters &lt;code&gt;-ShlinkServer&lt;/code&gt; and &lt;code&gt;-ShlinkApiKey&lt;/code&gt; * - it is not necessary to use the parameters again in subsequent uses for other functions of PSShlink. These values are held in memory for as long as the PowerShell session exists.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Some functions do not require both &lt;code&gt;-ShlinkServer&lt;/code&gt; and &lt;code&gt;-ShlinkApiKey&lt;/code&gt;, e.g. Get&lt;code&gt;-ShlinkServer&lt;/code&gt;. Therefore if the first function you use after importing PSShlink accepts only &lt;code&gt;-ShlinkServer&lt;/code&gt;, you will not be asked again for this value by other functions of PSShlink. You will however be prompted for the API key. Again, subsequent uses of other functions will no longer require &lt;code&gt;-ShlinkServer&lt;/code&gt; and &lt;code&gt;-ShlinkApiKey&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If the first function you use after importing PSShlink requires &lt;code&gt;-ShlinkServer&lt;/code&gt; and/or &lt;code&gt;-ShlinkApiKey&lt;/code&gt; and you have not passed the parameter(s), you will be prompted for them.&lt;/p&gt;
&lt;h2 id=&#34;using-psshlink&#34;&gt;Using PSShlink&lt;/h2&gt;
&lt;p&gt;As previously mentioned, &lt;code&gt;-ShlinkApiKey&lt;/code&gt; only accepts a SecureString value for simplicity we&amp;rsquo;ll create a SecureString value now for our API key.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;$ApiKey = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ba6c52ed-flk5-4e84-9fc7-9c7e34825da0&amp;#34;&lt;/span&gt; | ConvertTo-SecureString -AsPlainText -Force
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Using the newly created SecureString API key for our Shlink instance, let&amp;rsquo;s query all of our short codes:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;Get-ShlinkUrl -ShlinkServer &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://myshlinkserver.com&amp;#34;&lt;/span&gt; -ShlinkApiKey $ApiKey
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The great thing about PSShlink is that the Shlink server name and API key are held in memory for as long as the PowerShell lives. They&amp;rsquo;re not accessible as variables to use outside of the &lt;a class=&#34;link&#34; href=&#34;https://mikefrobbins.com/2017/06/08/what-is-this-module-scope-in-powershell-that-you-speak-of/#:~:text=%E2%80%9CThe%20privacy%20of%20a%20module,do%20have%20their%20own%20scope.%E2%80%9D&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&amp;ldquo;module&amp;rsquo;s scope&amp;rdquo;&lt;/a&gt; though.&lt;/p&gt;
&lt;p&gt;This means you do not have to repeatedly supply the &lt;code&gt;-ShlinkServer&lt;/code&gt; or &lt;code&gt;-ShlinkApiKey&lt;/code&gt; parameters for subsequent function calls of PSShlink, so long as the first one was successful.&lt;/p&gt;
&lt;p&gt;For example, let&amp;rsquo;s save QR code images for all of our short codes:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;Get-ShlinkUrl | Save-ShlinkUrlQrCode
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;All files will be saved as png and 300x300 in size. All files by default are saved in your Downloads directory using the naming convention: &lt;code&gt;ShlinkQRCode_&amp;lt;shortCode&amp;gt;_&amp;lt;domain&amp;gt;_&amp;lt;size&amp;gt;.&amp;lt;format&amp;gt;&lt;/code&gt;. e.g. &lt;code&gt;ShlinkQRCode_asFk2_example-com_300.png&lt;/code&gt;. As promised, you can clearly see we did not supply the Server address or API keys and it still worked!&lt;/p&gt;
&lt;h2 id=&#34;getting-help&#34;&gt;Getting help&lt;/h2&gt;
&lt;p&gt;All functions come with complete comment based help, so it is possible to find examples for each function using &lt;code&gt;Get-Help&lt;/code&gt;. For example, use the following to see detailed help including examples for &lt;code&gt;Save-ShlinkUrlQrCode&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;Get-Help Save-ShlinkUrlQrCode
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Failing that, feel free to raise an issue on the &lt;a class=&#34;link&#34; href=&#34;https://github.com/codaamok/PSShlink&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub repo&lt;/a&gt;!&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Hosting and Protecting Your Own NuGet Feed with ProGet</title>
        <link>https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/</link>
        <pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate>
        
        <guid>https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/</guid>
        <description>&lt;img src="https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/cover.jpg" alt="Featured image of post Hosting and Protecting Your Own NuGet Feed with ProGet" /&gt;&lt;p&gt;In this post I will share with you how to install &lt;a class=&#34;link&#34; href=&#34;https://inedo.com/proget&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Inedo&amp;rsquo;s ProGet&lt;/a&gt; to host your own NuGet feed (effectively your own PowerShell Gallery). This will let you share PowerShell modules and scripts amongst other systems and colleagues from an internal resource, using cmdlets from the PowerShellGet module e.g. &lt;code&gt;Install-Module&lt;/code&gt;, &lt;code&gt;Install-Script&lt;/code&gt;, &lt;code&gt;Find-Module&lt;/code&gt;, &lt;code&gt;Find-Script&lt;/code&gt; etc.&lt;/p&gt;
&lt;p&gt;Why might you want to do this? Remember when PowerShell Gallery went down for a while in October? That&amp;rsquo;s a pretty good reason. Another reason might be if you like or need the use of the PowerShellGet cmdlets when interacting with the PowerShell Gallery, but do not want to store your code publicly.&lt;/p&gt;
&lt;p&gt;By hosting your own, you can be in full control of its availability (&lt;a class=&#34;link&#34; href=&#34;https://docs.inedo.com/docs/proget/administration/license&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ProGet Enterprise&lt;/a&gt; offers high-availability and load balancing features). Perhaps instead maybe you could treat it as a secondary source in the event of PowerShell Gallery going down.&lt;/p&gt;
&lt;p&gt;What I wanted to do differently in this post, compared to others which I&amp;rsquo;ve seen cover installing ProGet, is that I wanted to add an authentication layer when trying to pull packages. In other words, I needed my NuGet feed to be widely open in terms of network access and because of that I wanted to protect it by requiring the &lt;code&gt;-Credential&lt;/code&gt; parameter with cmdlets like &lt;code&gt;Install-Module&lt;/code&gt;, &lt;code&gt;Find-Module&lt;/code&gt; etc.&lt;/p&gt;
&lt;p&gt;Here is what I will be covering in this post:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#what-is-nuget&#34; &gt;What is NuGet?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#proget&#34; &gt;ProGet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#installing-proget&#34; &gt;Installing ProGet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#create-api-key-for-publishing&#34; &gt;Create API key for publishing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#create-user-for-downloading-modules-or-scripts&#34; &gt;Create user for downloading modules or scripts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#create-the-powershell-feed&#34; &gt;Create the PowerShell feed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#configure-proget-to-use-https&#34; &gt;Configure ProGet to use HTTPS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#registering-the-feed-on-a-system-and-publishing-a-test-module&#34; &gt;Registering the feed on a system and publishing a test module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#installing-modules-or-scripts-from-the-feed&#34; &gt;Installing modules or scripts from the feed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#basic-authentication&#34; &gt;Basic authentication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#endpoint-dependency-requirements&#34; &gt;Endpoint dependency requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#conclusion&#34; &gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#additional-resources&#34; &gt;Additional resources&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;what-is-nuget&#34;&gt;What is NuGet?&lt;/h2&gt;
&lt;p&gt;Here I&amp;rsquo;ll quickly breakdown why &amp;ldquo;NuGet&amp;rdquo; is a thing. It should give you an insight when trying to understand how or why it is relevant to PowerShell, especially in this context of trying to host our own PowerShell Gallery.&lt;/p&gt;
&lt;p&gt;NuGet is a package management protocol developed by Microsoft. It was intended for .NET packages on &lt;a class=&#34;link&#34; href=&#34;https://nuget.org&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;NuGet.org&lt;/a&gt;. Developers for .NET use NuGet to pull their project&amp;rsquo;s package dependencies from NuGet.org. This is very much like how PowerShell users use &lt;code&gt;Install-Module&lt;/code&gt; from the PowerShell Gallery for their scripts, or dependencies for other PowerShell workflows.&lt;/p&gt;
&lt;p&gt;NuGet is the binary which is behind the scenes of the PowerShellGet module to make commands like &lt;code&gt;Install-Module&lt;/code&gt;, &lt;code&gt;Install-Script&lt;/code&gt;, &lt;code&gt;Find-Module&lt;/code&gt;, &lt;code&gt;Find-Script&lt;/code&gt; etc pull content from the PowerShell Gallery, or other NuGet feeds e.g. your self-hosted one with products like ProGet.&lt;/p&gt;
&lt;p&gt;It makes sense that Microsoft leveraged the existing NuGet protocol for PowerShell&amp;rsquo;s package management (scripts and modules). Doing so means they did not have to reinvent the wheel by producing and maintaining another package management system.&lt;/p&gt;
&lt;p&gt;I found the below 5 video YouTube series very insightful as it explains how and why it is used for .NET developers. Don&amp;rsquo;t worry if you don&amp;rsquo;t know .NET, it&amp;rsquo;s still useful. All 5 videos will take about ~30 mins of your time. &lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=WW3bO1lNDmo&amp;amp;list=PLdo4fOcmZ0oVLvfkFk8O9h6v2Dcdh2bh_&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Here is the playlist link&lt;/a&gt;.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe loading=&#34;lazy&#34; src=&#34;https://www.youtube.com/embed/WW3bO1lNDmo&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&#34;proget&#34;&gt;ProGet&lt;/h2&gt;
&lt;p&gt;ProGet is a proprietary product of &lt;a class=&#34;link&#34; href=&#34;https://inedo.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Inedo&lt;/a&gt;. You can &lt;a class=&#34;link&#34; href=&#34;https://inedo.com/open/source-code-request&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;request to view their source code&lt;/a&gt; if you want to.&lt;/p&gt;
&lt;p&gt;They offer three support tiers of ProGet: &lt;a class=&#34;link&#34; href=&#34;https://docs.inedo.com/docs/proget/administration/license&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;free, basic and enterprise&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s worth mentioning that it can host a lot more than just NuGet feeds.&lt;/p&gt;
&lt;p&gt;I chose ProGet after fumbling around with &lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/nuget/hosting-packages/nuget-server&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;NuGet.Server&lt;/a&gt; and expressing a little frustration about in the &lt;a class=&#34;link&#34; href=&#34;https://winadmins.io&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;WinAdmins Discord&lt;/a&gt;. &lt;a class=&#34;link&#34; href=&#34;https://twitter.com/BrettMiller_IT&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Brett Miller&lt;/a&gt; suggested to me he uses ProGet, and well, here we are. After much playing and reading, I found the free tier met my needs nicely. It&amp;rsquo;s absolutely worth pointing out there are &lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/nuget/hosting-packages/overview&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;many other alternatives&lt;/a&gt; available.&lt;/p&gt;
&lt;h2 id=&#34;installing-proget&#34;&gt;Installing ProGet&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s jump straight in and start installing ProGet. If at any point you get stuck on installing ProGet, &lt;a class=&#34;link&#34; href=&#34;https://docs.inedo.com/docs/proget/installation/installation-guide&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;they do offer some docs&lt;/a&gt; of their own.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Head over to the &lt;a class=&#34;link&#34; href=&#34;https://inedo.com/proget/download&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Downloads&lt;/a&gt; page and click &lt;strong&gt;Download Inedo Hub&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This is its web installer and it also installs a separate &lt;strong&gt;Inedo Hub&lt;/strong&gt; application where you can launch, reinstall, reconfigure or upgrade ProGet. It&amp;rsquo;s reasonably lightweight, so it&amp;rsquo;s not offensive by any means. It&amp;rsquo;s actually really helpful. They do offer an &lt;a class=&#34;link&#34; href=&#34;https://my.inedo.com/downloads?_ga=2.17971129.1219962463.1607855304-1273722551.1607855304&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;offline installer&lt;/a&gt; but its &lt;a class=&#34;link&#34; href=&#34;https://inedo.com/support/documentation/proget/installation/installation-guide/traditional-installer&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;installation instructions&lt;/a&gt; are different, so bear that in mind.&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Launch the installer. Once the downloading and prerequisites scanning is complete:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Choosing &lt;strong&gt;Specify instance&amp;hellip;&lt;/strong&gt; gave me the &amp;ldquo;localhost&amp;rdquo; option. On this VM I have SQL Server installed. If you don&amp;rsquo;t have SQL Server installed locally and do not want to use a remote database, choose &amp;ldquo;Install Inedo Instance&amp;rdquo; and it installs SQL Express instead for you.&lt;/p&gt;
&lt;p&gt;Optionally change the &lt;strong&gt;Database Name&lt;/strong&gt; if you want to.&lt;/p&gt;
&lt;p&gt;I chose &lt;strong&gt;IIS&lt;/strong&gt; as the web server, instead of the &lt;strong&gt;Integrated Web Server&lt;/strong&gt;. You can later switch from the integrated web server to IIS if you &lt;a class=&#34;link&#34; href=&#34;https://docs.inedo.com/docs/various/iis/switching-to-iis&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;following this doc&lt;/a&gt;. Although it seems they recommend IIS for load-balancing / HA config and also for configuring HTTPS. Later on in this doc we will be configuring the feed to use HTTPS with a web certificate so I recommend you do this too.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;‚ö†Ô∏è Some API endpoints for ProGet use HTTP methods PUT and DELETE. If WebDAV is installed on IIS, it is recommended to disable it. See &lt;a class=&#34;link&#34; href=&#34;https://docs.inedo.com/docs/various/iis/disabling-webdav&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Disabling WebDAV in IIS&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-01a.jpg&#34; data-size=&#34;785x576&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu20513fddfbf73efd3ed3965836384b22_47563_5b6d29f2d1352a217a7291d925654d59.jpg 480w, https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu20513fddfbf73efd3ed3965836384b22_47563_35937a9fb32af07aa1dd1f7af514dd62.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-01a.jpg&#34; width=&#34;785&#34; height=&#34;576&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-01b.jpg&#34; data-size=&#34;783x574&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu03908e51900057a01171d48f876abd94_47970_a5930f4d1ce9b66ab9cf335696e6d5b1.jpg 480w, https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu03908e51900057a01171d48f876abd94_47970_9fb5742bd3e47fb3bf493c1300ac4c89.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-01b.jpg&#34; width=&#34;783&#34; height=&#34;574&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-01c.jpg&#34; data-size=&#34;785x576&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu20513fddfbf73efd3ed3965836384b22_49968_8123df0f11371cb7e52d8ad5c9aed24b.jpg 480w, https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu20513fddfbf73efd3ed3965836384b22_49968_b647d14f3f40cbdfc949964e6ae0d54a.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-01c.jpg&#34; width=&#34;785&#34; height=&#34;576&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;
&lt;p&gt;Click &lt;strong&gt;Install&lt;/strong&gt; to get rolling. You&amp;rsquo;ll be prompted to provide name and email address to sign up, even for a free license. You will then be emailed a license key.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once install completes, I recommend either rebooting or just bouncing the &lt;strong&gt;ProGet Service&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Close and re-open the Inedo Hub and click &lt;strong&gt;Launch&lt;/strong&gt;. You will be taken to the Web UI:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-01d.jpg&#34; data-size=&#34;785x576&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu20513fddfbf73efd3ed3965836384b22_47509_04601b7f7724184a8de65f1e25a5ab6f.jpg 480w, https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu20513fddfbf73efd3ed3965836384b22_47509_6cce03d1e6c9ba44c88e425b4db39269.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-01d.jpg&#34; width=&#34;785&#34; height=&#34;576&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-01e.jpg&#34; data-size=&#34;1325x768&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70ab8b913f607837a7f637cdf80fde60_150004_86ad29a822d4f6e01404c4d35abfbe1b.jpg 480w, https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70ab8b913f607837a7f637cdf80fde60_150004_c65352aa5cf41f908dc1776095440815.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-01e.jpg&#34; width=&#34;1325&#34; height=&#34;768&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;After you&amp;rsquo;ve successfully installed ProGet and can see the web UI successfully load (default credentials are &lt;strong&gt;Admin&lt;/strong&gt;/&lt;strong&gt;Admin&lt;/strong&gt;, by the way), we need to lock it down a little bit. We will change the default credentials and remove the built-it Anonymous identity object access to all feeds.&lt;/p&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;Click the settings cog at the top right to access the settings and choose &lt;strong&gt;Users &amp;amp; Tasks&lt;/strong&gt; under &lt;strong&gt;Security &amp;amp; Authentication&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Click the &lt;strong&gt;Admin&lt;/strong&gt; user and change the password to be something complex&lt;/li&gt;
&lt;li&gt;Go to the &lt;strong&gt;Tasks&lt;/strong&gt; tab and remove &lt;strong&gt;Anonymous&lt;/strong&gt; from the task &lt;strong&gt;Administer&lt;/strong&gt; and &lt;strong&gt;View &amp;amp; Download Packages&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;‚ö†Ô∏è After removing the &lt;strong&gt;Anonymous&lt;/strong&gt; identity from the &lt;strong&gt;Administer&lt;/strong&gt; task, you will likely be prompted to log in using your new Admin credential.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-02a.jpg&#34; data-size=&#34;1325x768&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70ab8b913f607837a7f637cdf80fde60_114595_ef5830cc28b765d275fb494610069749.jpg 480w, https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70ab8b913f607837a7f637cdf80fde60_114595_5eb64374fca6b4f948016ba2a60d3b5e.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-02a.jpg&#34; width=&#34;1325&#34; height=&#34;768&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-02b.jpg&#34; data-size=&#34;1325x586&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70ab8b913f607837a7f637cdf80fde60_69057_3ba0a3d39d24c92797319ecec93d13d0.jpg 480w, https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70ab8b913f607837a7f637cdf80fde60_69057_281ff7bb1e973858a6be6ba07f9bd3b7.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-02b.jpg&#34; width=&#34;1325&#34; height=&#34;586&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-02c.jpg&#34; data-size=&#34;1325x848&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70ab8b913f607837a7f637cdf80fde60_82686_4ab66c11fd8a4f637bc3d0c923cb89bd.jpg 480w, https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70ab8b913f607837a7f637cdf80fde60_82686_a292ba9192ad26856fcdbd31c58f87ed.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-02c.jpg&#34; width=&#34;1325&#34; height=&#34;848&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-02d.jpg&#34; data-size=&#34;1325x848&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70ab8b913f607837a7f637cdf80fde60_144027_990b923610a6bb8356e6f8c52312e38f.jpg 480w, https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70ab8b913f607837a7f637cdf80fde60_144027_1dba34f1e5e1b7c26580975f47b26215.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-02d.jpg&#34; width=&#34;1325&#34; height=&#34;848&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-02e.jpg&#34; data-size=&#34;1325x848&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70ab8b913f607837a7f637cdf80fde60_107401_d5bbf1311315871b47b51e5527112610.jpg 480w, https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70ab8b913f607837a7f637cdf80fde60_107401_34e49bf566f47fcd3be5fe1ced44c8af.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-02e.jpg&#34; width=&#34;1325&#34; height=&#34;848&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;create-api-key-for-publishing&#34;&gt;Create API key for publishing&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s create an API key. This key will be needed for when we publish modules or scripts using either of the &lt;code&gt;Publish-Module&lt;/code&gt; or &lt;code&gt;Publish-Script&lt;/code&gt; cmdlets.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Go back to the settings via the cog at the top right, under &lt;strong&gt;Integration &amp;amp; Extensibility&lt;/strong&gt; select &lt;strong&gt;API Keys&lt;/strong&gt; and click &lt;strong&gt;Create API Key&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Check the box which reads &lt;strong&gt;Grant access to Feed API&lt;/strong&gt; and click &lt;strong&gt;Save API Key&lt;/strong&gt;. The key will display in clear text in the UI. Make note of this as we will need it later on.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-03a.jpg&#34; data-size=&#34;1325x848&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70ab8b913f607837a7f637cdf80fde60_125112_b217b0a5c3c56c8b8ab6b8ff9442e8e6.jpg 480w, https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70ab8b913f607837a7f637cdf80fde60_125112_33f5a4b6334e54ca7abaded8f883b5e2.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-03a.jpg&#34; width=&#34;1325&#34; height=&#34;848&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-03b.jpg&#34; data-size=&#34;1325x848&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70ab8b913f607837a7f637cdf80fde60_72030_4cb03eda6273ef0e408f832d4ca7c6a7.jpg 480w, https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70ab8b913f607837a7f637cdf80fde60_72030_fcc875103a9e66bfc946a9fb19741670.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-03b.jpg&#34; width=&#34;1325&#34; height=&#34;848&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-03c.jpg&#34; data-size=&#34;1325x890&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70ab8b913f607837a7f637cdf80fde60_117849_a15f5d4ed8b7591ef97c73b9797a50e8.jpg 480w, https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70ab8b913f607837a7f637cdf80fde60_117849_95c990fdd29b66ab9c358cf5a38e7b34.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-03c.jpg&#34; width=&#34;1325&#34; height=&#34;890&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-03d.jpg&#34; data-size=&#34;1325x621&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70ab8b913f607837a7f637cdf80fde60_62967_4ff1a86207f3a55f2680bec9a8e7ab16.jpg 480w, https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70ab8b913f607837a7f637cdf80fde60_62967_5232274780f3e365b4610bac1861e9e5.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-03d.jpg&#34; width=&#34;1325&#34; height=&#34;621&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;create-user-for-downloading-modules-or-scripts&#34;&gt;Create user for downloading modules or scripts&lt;/h2&gt;
&lt;p&gt;Now we will create a user which will be used for basic authentication in the &lt;code&gt;-Credential&lt;/code&gt; parameter of cmdlets like &lt;code&gt;Find-Module&lt;/code&gt;, &lt;code&gt;Find-Script&lt;/code&gt;, &lt;code&gt;Install-Module&lt;/code&gt; and &lt;code&gt;Install-Script&lt;/code&gt; etc.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Again, work your way back to settings. This time click &lt;strong&gt;Users &amp;amp; Tasks&lt;/strong&gt; and click &lt;strong&gt;Create User&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Set a username and password and click &lt;strong&gt;Save&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Change to the &lt;strong&gt;Tasks&lt;/strong&gt; tab and we will give the newly created user access to only &lt;strong&gt;View &amp;amp; Download Packages&lt;/strong&gt; by clicking on &lt;strong&gt;Add Restriction&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Enter the user name created in step 2 in the &lt;strong&gt;Principles&lt;/strong&gt; field and enter &lt;strong&gt;View &amp;amp; Download Packages&lt;/strong&gt; in the &lt;strong&gt;Tasks&lt;/strong&gt; field - don&amp;rsquo;t forget to click &lt;strong&gt;Save Privilege&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-04a.jpg&#34; data-size=&#34;1325x810&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70ab8b913f607837a7f637cdf80fde60_120287_d0f9c74be7ca4d4f6208c6e870bcd7fc.jpg 480w, https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70ab8b913f607837a7f637cdf80fde60_120287_b134d77da600def47d40a4de160a34b8.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-04a.jpg&#34; width=&#34;1325&#34; height=&#34;810&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-04b.jpg&#34; data-size=&#34;1325x810&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70ab8b913f607837a7f637cdf80fde60_72887_94ab1f5c5ef1353d908c83b4896eb66d.jpg 480w, https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70ab8b913f607837a7f637cdf80fde60_72887_3eceb63e879b01ef1f07cecc678ec3dd.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-04b.jpg&#34; width=&#34;1325&#34; height=&#34;810&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-04c.jpg&#34; data-size=&#34;1325x810&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70ab8b913f607837a7f637cdf80fde60_75815_76d02f6aad809a6165776000a9cd8930.jpg 480w, https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70ab8b913f607837a7f637cdf80fde60_75815_a8faf840440ac2f772b676d6234ca5d7.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-04c.jpg&#34; width=&#34;1325&#34; height=&#34;810&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-04d.jpg&#34; data-size=&#34;1325x810&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70ab8b913f607837a7f637cdf80fde60_112584_c48ffceb1722ab4e7f54a58642364350.jpg 480w, https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70ab8b913f607837a7f637cdf80fde60_112584_7b22f8be8c85004a7bc60ac07d2e07bd.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-04d.jpg&#34; width=&#34;1325&#34; height=&#34;810&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-04e.jpg&#34; data-size=&#34;1325x810&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70ab8b913f607837a7f637cdf80fde60_87193_d5a016bea37a38e5d981a66cae76c403.jpg 480w, https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70ab8b913f607837a7f637cdf80fde60_87193_eadda5542509f774fdc4f0f997c98541.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-04e.jpg&#34; width=&#34;1325&#34; height=&#34;810&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-04f.jpg&#34; data-size=&#34;1325x810&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70ab8b913f607837a7f637cdf80fde60_103730_470344aec014258e9170271ac5d93171.jpg 480w, https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70ab8b913f607837a7f637cdf80fde60_103730_0eb8d98b99c36b3386c984a798099127.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-04f.jpg&#34; width=&#34;1325&#34; height=&#34;810&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;create-the-powershell-feed&#34;&gt;Create the PowerShell feed&lt;/h2&gt;
&lt;p&gt;Good stuff, next we will create a new PowerShell feed which will contain our published modules and scripts.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Navigate to &lt;strong&gt;Feeds&lt;/strong&gt; from the top navigation bar and click &lt;strong&gt;Create New Feed&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Scroll down and choose &lt;strong&gt;PowerShell Modules&lt;/strong&gt; as the feed type&lt;/li&gt;
&lt;li&gt;Give your feed a name and select the radio button which reads &lt;strong&gt;Private/Internal packages&lt;/strong&gt;, click &lt;strong&gt;Create New Feed&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-05a.jpg&#34; data-size=&#34;1325x810&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70ab8b913f607837a7f637cdf80fde60_72712_15f11510bf85e2f70aafa596412a1043.jpg 480w, https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70ab8b913f607837a7f637cdf80fde60_72712_5bd94f955ab4f214f297a75ca8435385.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-05a.jpg&#34; width=&#34;1325&#34; height=&#34;810&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-05b.jpg&#34; data-size=&#34;1325x730&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hufec9f8a447cd7da5a47b8d2ab7bfe6ca_165729_b819e0cb018007ee2c18a255e3e60b41.jpg 480w, https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hufec9f8a447cd7da5a47b8d2ab7bfe6ca_165729_4e2335fba5d392f9ff9cb911060b58e1.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-05b.jpg&#34; width=&#34;1325&#34; height=&#34;730&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-05c.jpg&#34; data-size=&#34;1325x810&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70ab8b913f607837a7f637cdf80fde60_151971_c531a4bdc67de7378245cd8763335e3a.jpg 480w, https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70ab8b913f607837a7f637cdf80fde60_151971_77495f1f6cdd066e7339227778bacf59.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-05c.jpg&#34; width=&#34;1325&#34; height=&#34;810&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;configure-proget-to-use-https&#34;&gt;Configure ProGet to use HTTPS&lt;/h2&gt;
&lt;p&gt;Now we will configure ProGet to listen on an additional alternative port with a web certificate. This is optional for you; perhaps you&amp;rsquo;re running this internally and you are OK with non-encrypted traffic. However in any case I still think it&amp;rsquo;s a good idea to use TLS.&lt;/p&gt;
&lt;p&gt;You will need a web certificate which we will configure in IIS to use. As this is in my lab, things are like the wild west around here so I&amp;rsquo;m just going to yolo it with a LetsEncrypt certificate using the &lt;a class=&#34;link&#34; href=&#34;https://github.com/rmbolger/Posh-ACME&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Posh-ACME module&lt;/a&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Generate or obtain web certificate. Here I&amp;rsquo;ll quickly demo how I do this with the Posh-ACME module.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;Install-Module &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Posh-ACME&amp;#34;&lt;/span&gt;
Import-Module &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Posh-ACME&amp;#34;&lt;/span&gt;
$Params = @{
    Domain = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;nuget.adamcook.io&amp;#34;&lt;/span&gt;
    Contact = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;myemail@address.com&amp;#34;&lt;/span&gt;
    DnsPlugin = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Cloudflare&amp;#34;&lt;/span&gt;
    PluginArgs = @{
        CFToken = ConvertTo-SecureString &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MySuperSecretCloudflareAPIKey&amp;#34;&lt;/span&gt; -AsPlainText -Force
    }
}
New-PACertificate @Params
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;Create a DNS record to point to your ProGet server&amp;rsquo;s IP&lt;/li&gt;
&lt;li&gt;Load the certificate in to the Local System&amp;rsquo;s Personal or Web Hosting certificate store.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you used Posh-ACME, you will find the &lt;code&gt;.pfx&lt;/code&gt; in &lt;strong&gt;%LOCALAPPDATA%\Posh-ACME&lt;/strong&gt;. Simply right click, choose &lt;strong&gt;Install PFX&lt;/strong&gt; and complete the wizard. The default password protecting the certificate is &lt;code&gt;poshacme&lt;/code&gt;.&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Open IIS and navigate through: &lt;strong&gt;Sites&lt;/strong&gt; &amp;gt; &lt;strong&gt;ProGet&lt;/strong&gt; &amp;gt; &lt;strong&gt;Bindings&lt;/strong&gt; &amp;gt; &lt;strong&gt;Add&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Change &lt;strong&gt;Type&lt;/strong&gt; to &lt;strong&gt;https&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;By default the port is 443. If you have another site or service bound to this port on the host you&amp;rsquo;re currently configuring, choose a different port. For this demo I chose port &lt;strong&gt;8625&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;In the drop down for &lt;strong&gt;SSL certificate&lt;/strong&gt; you should see our certificate&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-06a.jpg&#34; data-size=&#34;1551x920&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hufca7a2d6ed4f54385eb596b0a0e69556_170620_effea731422337e880461363c93fcc2d.jpg 480w, https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hufca7a2d6ed4f54385eb596b0a0e69556_170620_4af2120356c9ccdd9b87f7c1c01c2018.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-06a.jpg&#34; width=&#34;1551&#34; height=&#34;920&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;Click OK!&lt;/li&gt;
&lt;li&gt;Go to Settings of ProGet and under &lt;strong&gt;System Configuration&lt;/strong&gt; choose &lt;strong&gt;Advanced Settings&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Scroll down to &lt;code&gt;Web.BaseUrl&lt;/code&gt; and populate the field with your full root URL. For example, for me I have set it to &lt;code&gt;https://nuget.adamcook.io:8625&lt;/code&gt;. This part is important if you are serving ProGet under a different path in the URL or port, e.g. I could have used &lt;code&gt;https://adamcook.io:8625/nuget&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;Save Changes&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;At this point you will need to make sure DNS is correctly configured for whatever domain you used for your certificate. All should be well once you can browse to the domain and not receive any certificate errors. For example:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-06b.jpg&#34; data-size=&#34;1325x1081&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70ab8b913f607837a7f637cdf80fde60_144590_0df349828562b1962df31cbe919ecadc.jpg 480w, https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70ab8b913f607837a7f637cdf80fde60_144590_b3031146a835f0fe45a2a188a1a36ac7.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-06b.jpg&#34; width=&#34;1325&#34; height=&#34;1081&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-06c.jpg&#34; data-size=&#34;1325x889&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70ab8b913f607837a7f637cdf80fde60_169862_750f2b31f978bb9cc87e40feaa1fd211.jpg 480w, https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70ab8b913f607837a7f637cdf80fde60_169862_2db36b4841827281238b16222484cb64.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-06c.jpg&#34; width=&#34;1325&#34; height=&#34;889&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-06d.jpg&#34; data-size=&#34;1321x759&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu57fdc17b95c1b78d4473f161c236c275_93368_4e0a71a6da6c45f224315fc37004c12f.jpg 480w, https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu57fdc17b95c1b78d4473f161c236c275_93368_054fa572007d58bce3cb9050cd0933f2.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-06d.jpg&#34; width=&#34;1321&#34; height=&#34;759&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;registering-the-feed-on-a-system-and-publishing-a-test-module&#34;&gt;Registering the feed on a system and publishing a test module&lt;/h2&gt;
&lt;p&gt;At this point, you are good to go to start publishing scripts or modules to this feed. As an example, let&amp;rsquo;s save a module from the PowerShell Gallery and publish it to our newly created NuGet feed.&lt;/p&gt;
&lt;p&gt;For a laugh we&amp;rsquo;ll demo with the &lt;code&gt;Az&lt;/code&gt; module, which has 62 other dependent modules. As a result we will be downloading 63 modules from the PowerShell Gallery and publishing them all to our new self-hosted NuGet feed.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Register the NuGet feed on your system using the below. This can be from your desktop or even the server running ProGet itself.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I&amp;rsquo;ll be honest.. I have no idea why we need to configure a package source before we can register the repository, but I couldn&amp;rsquo;t get it to work otherwise. &lt;a class=&#34;link&#34; href=&#34;https://github.com/OneGet/oneget/issues/403&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;More info here on that&lt;/a&gt;!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Set the URL to match your config from the section &amp;#39;Configure ProGet to use HTTPS&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# i.e. https/http, domain and port&lt;/span&gt;
$URL = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://nuget.adamcook.io:8625/nuget/MyPrivateRepo&amp;#34;&lt;/span&gt; 
&lt;span style=&#34;color:#75715e&#34;&gt;# Enter the username and password created from the section &lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# &amp;#39;Create user for downloading modules or scripts&amp;#39;&lt;/span&gt;
$Cred = Get-Credential

$Params = @{
	Name = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MyPrivateRepo&amp;#34;&lt;/span&gt;
	Location = $URL
	ProviderName = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NuGet&amp;#34;&lt;/span&gt;
	Credential = $Cred
	Trusted = $true
	SkipValidate = $true
}
Register-PackageSource @Params

$Params = @{
	Name = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MyPrivateRepo&amp;#34;&lt;/span&gt;
	SourceLocation = $URL
    PublishLocation = $URL
    ScriptSourceLocation = $URL
    ScriptPublishLocation = $URL
    PackageManagementProvider = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NuGet&amp;#34;&lt;/span&gt;
	Credential = $Cred
    InstallationPolicy = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Trusted&amp;#34;&lt;/span&gt;
}
Register-PSRepository @Params
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You will notice that if you now run &lt;code&gt;Get-PackageSource&lt;/code&gt; and &lt;code&gt;Get-PSRepository&lt;/code&gt;, you will see our new NuGet repository. It is important to note that this is not a system-wide config, it is per-user. In other words, if you intend to register the package source and repository, and you want another security context on the same system the leverage this registration, you will need to register them in that context. &lt;a class=&#34;link&#34; href=&#34;https://github.com/PowerShell/PowerShellGet/issues/84&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Here&amp;rsquo;s a GitHub issue requesting this to change&lt;/a&gt;.&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Issue the following command to grab all of the modules and save them to &lt;code&gt;C:\temp\Az&lt;/code&gt; locally&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;Save-Module -Name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Az&amp;#34;&lt;/span&gt; -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C:\temp\Az&amp;#34;&lt;/span&gt; -Repository PSGallery
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;‚ö†Ô∏è If you receive an error along the lines of:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Failed to generate the compressed file for module &#39;C:\Program Files\dotnet\dotnet.exe failed to pack
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Run the below. Close and re-open the console, then try again. &lt;a class=&#34;link&#34; href=&#34;https://github.com/PowerShell/PowerShellGetv2/issues/303&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Credit&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;Invoke-WebRequest -Uri &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://dist.nuget.org/win-x86-commandline/latest/nuget.exe&amp;#34;&lt;/span&gt; -OutFile &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$env:LOCALAPPDATA\Microsoft\Windows\PowerShell\PowerShellGet\NuGet.exe&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;‚ö†Ô∏è Also note that we are now explicitly specifying to use the &lt;strong&gt;PSGallery&lt;/strong&gt; registered repository using the &lt;code&gt;-Repository&lt;/code&gt; parameter, because we now have multiple registered repositories (or at least you should, the PowerShell Gallery is configured by default on most systems).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-07a.jpg&#34; data-size=&#34;1113x1002&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70286569983e3e8203d16b8e44059fad_122719_a39a873154e1987e83c0bc0a6eb01882.jpg 480w, https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70286569983e3e8203d16b8e44059fad_122719_8f1dda6375631143a2e1e3087198c883.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-07a.jpg&#34; width=&#34;1113&#34; height=&#34;1002&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-07b.jpg&#34; data-size=&#34;1113x1002&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70286569983e3e8203d16b8e44059fad_121003_28a2ab325a795e4805b9829e8321165c.jpg 480w, https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70286569983e3e8203d16b8e44059fad_121003_24a897b25b0f02ae770d3f1e368cc3c8.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-07b.jpg&#34; width=&#34;1113&#34; height=&#34;1002&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Using the API key we gathered from the section &lt;a class=&#34;link&#34; href=&#34;#create-api-key-for-publishing&#34; &gt;Create API key for publishing&lt;/a&gt;, we can now publish all the modules which are in the &lt;code&gt;C:\temp\Az&lt;/code&gt; directory:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;Get-ChildItem -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C:\temp\Az&amp;#34;&lt;/span&gt; | ForEach-Object {
    Publish-Module -Path $_.FullName -NuGetApiKey &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MySuperSecretAPIKey&amp;#34;&lt;/span&gt; -Repository &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MyPrivateRepo&amp;#34;&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;After a couple of minutes, all of the modules will finish publishing. The web UI of ProGet will reflect this and we can also see this with &lt;code&gt;Find-Module&lt;/code&gt; too. Don&amp;rsquo;t forget, you will also need to use the &lt;code&gt;-Credential&lt;/code&gt; parameter with &lt;code&gt;Find-Module&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;Forgot what credential to use? It&amp;rsquo;s the one we set from the section &lt;a class=&#34;link&#34; href=&#34;#create-user-for-downloading-modules-or-scripts&#34; &gt;Create user for downloading modules or scripts&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-07c.jpg&#34; data-size=&#34;1113x508&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70286569983e3e8203d16b8e44059fad_150603_1894a0e7e04631e2828bd7d2d39b3b3e.jpg 480w, https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu70286569983e3e8203d16b8e44059fad_150603_0e7024ad7d7a2f15d00b8606c1d52328.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-07c.jpg&#34; width=&#34;1113&#34; height=&#34;508&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-07d.jpg&#34; data-size=&#34;1428x828&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu3ebf0193911db17c2ec09b4f543ea771_59695_3b94dc6be85317e2baa0a77200760e8c.jpg 480w, https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu3ebf0193911db17c2ec09b4f543ea771_59695_9cbd8fd3151832226045216890acfef5.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-07d.jpg&#34; width=&#34;1428&#34; height=&#34;828&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-07e.jpg&#34; data-size=&#34;1428x828&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hueeec182459c80104b542b342c7138076_111142_d96e318f09745a7a60f135351cc85f87.jpg 480w, https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hueeec182459c80104b542b342c7138076_111142_41884863e8fe25bfaf1f538da20ef6bd.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-07e.jpg&#34; width=&#34;1428&#34; height=&#34;828&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-07f.jpg&#34; data-size=&#34;968x1344&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu7eb4a9ecec460d986e1f3bb76fef9abe_114999_05892c198d7cc7a466d53822e988c42c.jpg 480w, https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu7eb4a9ecec460d986e1f3bb76fef9abe_114999_1ef4a1f58c884334ceefc6a159696198.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-07f.jpg&#34; width=&#34;968&#34; height=&#34;1344&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Don&amp;rsquo;t forget, you can still publish and install scripts to the NuGet feed just like you can with modules, using cmdlets like &lt;code&gt;Publish-Script&lt;/code&gt;, &lt;code&gt;Find-Script&lt;/code&gt; and &lt;code&gt;Install-Script&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;installing-modules-or-scripts-from-the-feed&#34;&gt;Installing modules or scripts from the feed&lt;/h2&gt;
&lt;p&gt;Now let&amp;rsquo;s demonstrate installing a PowerShell module from our new NuGet feed. Again you can do this from your desktop or on the ProGet server itself.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;If you&amp;rsquo;re trying this from a different system compared to the last section, registry the package source and repository again as shown in the section &lt;a class=&#34;link&#34; href=&#34;#registering-the-feed-on-a-system-and-publishing-a-test-module&#34; &gt;Registering the feed on a system and publishing a test module&lt;/a&gt;. It is possible to omit the the &lt;code&gt;-ScriptPublishLocation&lt;/code&gt; and &lt;code&gt;-PublishLocation&lt;/code&gt; parameters if you do not intend to publish modules or scripts from the system(s).&lt;/li&gt;
&lt;li&gt;Install all of the &lt;code&gt;Az*&lt;/code&gt; modules. We need to make sure we explicitly specify our new NuGet feed using the &lt;code&gt;-Repository&lt;/code&gt; parameter and the credential too using &lt;code&gt;-Credential&lt;/code&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;$Modules = Find-Module -Name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Az*&amp;#34;&lt;/span&gt; -Repository &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MyPrivateRepo&amp;#34;&lt;/span&gt; -Credential $Cred
$Modules | Install-Module -Repository &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MyPrivateRepo&amp;#34;&lt;/span&gt; -Credential $Cred
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;Forgot what credential to use? It&amp;rsquo;s the one we set from the section &lt;a class=&#34;link&#34; href=&#34;#create-user-for-downloading-modules-or-scripts&#34; &gt;Create user for downloading modules/scripts&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-08.jpg&#34; data-size=&#34;1346x1344&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu3ebf0193911db17c2ec09b4f543ea771_303407_97a73d2b581a4fdbda6e7d20a0e6393b.jpg 480w, https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu3ebf0193911db17c2ec09b4f543ea771_303407_32927051b90e5c74b86915026cc9937e.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-08.jpg&#34; width=&#34;1346&#34; height=&#34;1344&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s more or less it. You just pulled a bunch of PowerShell modules from your self-hosted NuGet feed which is hosted using your own TLS certificate and protected with basic authentication via the &lt;code&gt;-Credential&lt;/code&gt; parameter.&lt;/p&gt;
&lt;h2 id=&#34;basic-authentication&#34;&gt;Basic authentication&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;ve mentioned this a few times throughout the post but not discussed it.&lt;/p&gt;
&lt;p&gt;The authentication method when using the &lt;code&gt;-Credential&lt;/code&gt; parameter used here is &lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/Basic_access_authentication&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;HTTP basic authentication&lt;/a&gt;. If you have configured your ProGet instance to be using only HTTP and have protected the feeds using a built-in security identity as discussed in section &lt;a class=&#34;link&#34; href=&#34;#create-user-for-downloading-modules-or-scripts&#34; &gt;Create user for downloading modules or scripts&lt;/a&gt;, then your credentials will be sent across the wire merely encoded with base64.. &lt;strong&gt;this is not encryption&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve demonstrated this below; I configured the package source and repository locally on my machine (repository name is &lt;strong&gt;insecure&lt;/strong&gt;). I have registered them using the HTTP endpoint of ProGet, not HTTPS. You can see the credentials in cleartext in packet tracing tools like Wireshark because they&amp;rsquo;re generally helpful and do the decoding for you in the GUI.&lt;/p&gt;
&lt;p&gt;Encrypting the traffic with TLS certificates is for sure the way to go. Even if the traffic is only traversing internally. Your code, and therefore the packages on your NuGet feed, should never contain sensitive information. Therefore in theory all you are protecting is the intellectual property of the code. However, let&amp;rsquo;s be real, a lot of us at the very least sometimes store things like IP addresses and stuff in our code. With that in mind, if you had a script named &amp;ldquo;Get-SecretFromCyberArk&amp;rdquo; on your NuGet feed, which contained even the most trivial information like the IP addresses of your CyberArk infrastructure, that is still an easy win of information gathering for a malicious actor. Just mooching around your network. They would have picked up the username and password of the user account, logged in to ProGet and able to view all your packages.&lt;/p&gt;
&lt;p&gt;Using TLS does not provide total security, as you are still at the mercy of a simple username and password where those credentials are stored in the ProGet database. However, there is no reason why you should not be using HTTPS.&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-09a.jpg&#34; data-size=&#34;1366x1040&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu00755f6eed2be73effa0a7f9860f493a_388652_a1c8736dfabd8b4dc72f1ebc6f5429b9.jpg 480w, https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu00755f6eed2be73effa0a7f9860f493a_388652_7bca5b2a2c49061e6e85560ea42da210.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-09a.jpg&#34; width=&#34;1366&#34; height=&#34;1040&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-09b.jpg&#34; data-size=&#34;1367x1032&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu20dd6580e23920edc1850ff795af6c42_324897_907d0f40d406e7bf7b19906e95bd96ca.jpg 480w, https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/_hu20dd6580e23920edc1850ff795af6c42_324897_a9b6bb20056711a02745ebc1ac67c40c.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/hosting-and-protecting-your-own-nuget-feed-with-proget/images/Hosting-and-Protecting-Your-Own-NuGet-Feed-with-ProGet-09b.jpg&#34; width=&#34;1367&#34; height=&#34;1032&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;endpoint-dependency-requirements&#34;&gt;Endpoint dependency requirements&lt;/h2&gt;
&lt;p&gt;In order for other users to start using your new NuGet feed, you need to satisfy some prerequisites. I strongly recommend you:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For all systems you intend to use the repository from, have the latest available &lt;a class=&#34;link&#34; href=&#34;https://www.powershellgallery.com/packages/PackageManagement&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PackageManagement&lt;/a&gt; and &lt;a class=&#34;link&#34; href=&#34;https://www.powershellgallery.com/packages/PowerShellGet&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PowerShellGet&lt;/a&gt; modules installed.&lt;/li&gt;
&lt;li&gt;If not already, upgrade the systems using the NuGet feed to be using PowerShell 5.1 (&lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/powershell/scripting/windows-powershell/wmf/setup/install-configure?view=powershell-7.1&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Windows Management Framework 5.1&lt;/a&gt;) as it will make your life &lt;em&gt;a lot&lt;/em&gt; easier.&lt;/li&gt;
&lt;li&gt;After the last two items are resolved, you then need to register the package source and repository on all of the endpoints you want to leverage the repository from. We did this in section &lt;a class=&#34;link&#34; href=&#34;#registering-the-feed-on-a-system-and-publishing-a-test-module&#34; &gt;Registering the feed on a system and publishing a test module&lt;/a&gt;. Don&amp;rsquo;t forget that the security context of which you register the package source and repository from, is the only context in which the repositories are available. If you want to access the registered repository from another security context on the same system, you will have to re-register them in that context.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Some things which I didn&amp;rsquo;t get to touch on are LDAP authentication integration and extensions within ProGet.&lt;/p&gt;
&lt;p&gt;Authenticating using Active Directory would for sure be a better and more manageable solution in terms of handling the credential when using the &lt;code&gt;-Credential&lt;/code&gt; parameter. ProGet even provides support for gMSA accounts. You can find out more here &lt;a class=&#34;link&#34; href=&#34;https://docs.inedo.com/docs/various/ldap/ldap-active-directory&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Using LDAP/AD Integration&lt;/a&gt;. And even better, there is support for &lt;a class=&#34;link&#34; href=&#34;https://docs.inedo.com/docs/various/saml/overview&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SAML authentication with AD&lt;/a&gt; and &lt;a class=&#34;link&#34; href=&#34;https://docs.inedo.com/docs/various/saml/azure-ad&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Azure AD&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I also wanted to highlight is that it is possible to store your packages in cloud storage using ProGet&amp;rsquo;s &lt;a class=&#34;link&#34; href=&#34;https://docs.inedo.com/docs/proget/advanced/cloud-storage&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Cloud Package Stores&lt;/a&gt; and extension for Azure. The would certainly reduce your on-premises storage requirements and allow greater room scalability and flexibility by using an Azure Storage Account.&lt;/p&gt;
&lt;p&gt;I like to use a featured image in my blog which is relevant at the time in my life while I was writing the post. For this post I started around halloween and got both lazy and busy. Here I am, 12 days before Christmas using a picture of the pumpkins my fianc√© and I carved on our front porch. It&amp;rsquo;s purely because of COVID-19.. I do nothing with my spare time other than stay home. Nothing to take pictures of!&lt;/p&gt;
&lt;p&gt;I hope you found this information useful. If there&amp;rsquo;s any room for improvements, let me know in the comments below. If it helped you in any way, still let me know - that helps me keep going. Check out the additional resources below for further reading.&lt;/p&gt;
&lt;h2 id=&#34;additional-resources&#34;&gt;Additional resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/nuget/what-is-nuget&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;What is NuGet and what does it do?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/powershell/scripting/gallery/how-to/getting-support/bootstrapping-nuget?view=powershell-7.1&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Bootstrap the NuGet provider and NuGet.exe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://adamtheautomator.com/nuget-iis-windows-server/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;NuGet and IIS on Windows Server: The Ultimate Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/nuget/hosting-packages/overview&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hosting your own NuGet feeds&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Getting Your Powershell Code Into Production Using Github Actions</title>
        <link>https://adamcook.io/p/getting-your-powershell-code-into-production-using-github-actions/</link>
        <pubDate>Sat, 17 Oct 2020 00:00:00 +0100</pubDate>
        
        <guid>https://adamcook.io/p/getting-your-powershell-code-into-production-using-github-actions/</guid>
        <description>&lt;img src="https://adamcook.io/p/getting-your-powershell-code-into-production-using-github-actions/images/Getting-Your-PowerShell-Code-Into-Production-Using-GitHub-Actions-00.jpg" alt="Featured image of post Getting Your Powershell Code Into Production Using Github Actions" /&gt;&lt;p&gt;Earlier in the week I presented at a &lt;a class=&#34;link&#34; href=&#34;https://winadmins.io&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;WinAdmins&lt;/a&gt; virtual user group session. At the bottom of this post you can watch the recording.&lt;/p&gt;
&lt;p&gt;The session covered the below topics:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Introduction to CI/CD pipeline, i.e. what it means with practical explanations&lt;/li&gt;
&lt;li&gt;A walk through on the YAML structure/syntax of GitHub Actions&lt;/li&gt;
&lt;li&gt;Demonstrate on how to use Actions by uploading content to Azure Blob storage&lt;/li&gt;
&lt;li&gt;Demonstrate a self hosted runner&lt;/li&gt;
&lt;li&gt;Demonstrate how to deploy a PowerShell module to: the PowerShell Gallery, create a new GitHub release, a shared folder within my home lab (which failed because I messed with the runner&amp;rsquo;s service log-on credential) and to a self hosted NuGet feed (which also failed, thanks demo gods)&lt;/li&gt;
&lt;/ul&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe loading=&#34;lazy&#34; src=&#34;https://www.youtube.com/embed/RDQkqxrJUeU&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

</description>
        </item>
        <item>
        <title>Deploying Hugo Websites in Azure for Pennies or Free on GitHub Pages</title>
        <link>https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/</link>
        <pubDate>Mon, 05 Oct 2020 21:04:10 +0100</pubDate>
        
        <guid>https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/</guid>
        <description>&lt;img src="https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/cover.jpg" alt="Featured image of post Deploying Hugo Websites in Azure for Pennies or Free on GitHub Pages" /&gt;&lt;p&gt;I recently migrated my WordPress blogging platform to generating static content with Hugo. I no longer pay for hosting. I exclusively use GitHub Pages. I am now blogging at no extra cost other than domain renewal!&lt;/p&gt;
&lt;p&gt;In the process not only did I learn about Hugo, but I also looked at three ways to deploy / host my Hugo-made website.&lt;/p&gt;
&lt;p&gt;In this post I want to share with you what Hugo is, why I like it and those three ways that I learned on how to deploy a Hugo website - with Azure Static Web Apps (preview), Azure Blob storage and GitHub Pages.&lt;/p&gt;
&lt;p&gt;For Azure Static Web Apps and Blob storage, I will be using Cloudflare. I am also assuming you will be using your own domain name. It is not a big deal if you do not want to, just ignore details focused on defining custom domains and creating CNAME records.&lt;/p&gt;
&lt;p&gt;There will also be some assumptions that you are somewhat familiar with using GitHub Actions. If you are looking for an introduction to using GitHub Actions, check out my &lt;a class=&#34;link&#34; href=&#34;https://adamcook.io/p/getting-your-powershell-code-into-production-using-github-actions/&#34; &gt;WinAdmins virtual user group event session&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#what-is-this-hugo-thing&#34; &gt;What is this Hugo thing?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#prerequisites&#34; &gt;Prerequisites&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#azure-static-web-apps&#34; &gt;Azure Static Web Apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#azure-blob-storage&#34; &gt;Azure Blob storage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#github-pages&#34; &gt;GitHub Pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#closing-comments&#34; &gt;Closing comments&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;what-is-this-hugo-thing&#34;&gt;What is this Hugo thing?&lt;/h2&gt;
&lt;p&gt;Hugo is a static site generator.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;continues to stare blankly at the screen&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Yeah, I did too.&lt;/p&gt;
&lt;p&gt;With static site generators (like Hugo), you forego caring about databases and any kind of code. Instead, your HTML pages are generated either each time a user visits your website, or in Hugo&amp;rsquo;s case, the HTML pages are generated each time you create or update content.&lt;/p&gt;
&lt;p&gt;Instead of writing your pages and blog posts in HTML files or in a feature-rich WYSIWYG editor, on some bloated content management system like WordPress, you write them in markdown (at least you do with Hugo). Then you invoke the process to generate the HTML files, using your new markdown content as source. The generated HTML files land in a very particular directory (&lt;code&gt;public&lt;/code&gt;). After that, all you need to do is get that directory on a web hosting platform as your web root.&lt;/p&gt;
&lt;p&gt;When it comes to styling, themes are mostly plug and play, too. Fancy a new theme? No problem. &lt;a class=&#34;link&#34; href=&#34;https://themes.gohugo.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Download one&lt;/a&gt;, drop it in the &lt;code&gt;/themes&lt;/code&gt; directory amd update &lt;code&gt;config.toml&lt;/code&gt; a little.&lt;/p&gt;
&lt;p&gt;With static websites, no runtime is needed to run your website. Not only does this open up your hosting opportunities, performance is also another great benefit. You do not need a hosting package that sit on nginx or Apache, running PHP or whatever. For example, you can host on &lt;a class=&#34;link&#34; href=&#34;https://azure.microsoft.com/en-gb/services/storage/Blobs/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Azure Blob storage&lt;/a&gt; or &lt;a class=&#34;link&#34; href=&#34;https://pages.github.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub Pages&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;GitHub Pages is free. It also lets you use your own domain and offers free SSL certificates via LetsEncrypt. Azure Blob Storage isn&amp;rsquo;t quite free but it costs pennies. It is ¬£0.0144 per GB (in UK South) of storage and the first 5GB of bandwidth from this zone is free. You can do this on many more platforms too, such as Amazon S3, Netlify, Heroku, GitLab Pages, Google Cloud Storage and more.&lt;/p&gt;
&lt;p&gt;I am all-for ditching WordPress. Over the last few years I have grown more comfortable with Git and working on Azure and GitHub. If you relate to that or are enticed by any of the benefits, I highly recommend you at least give it a go! I would be more than happy to help, too, just get hold of me.&lt;/p&gt;
&lt;p&gt;Here are some resources I used to learn Hugo:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=qtIqKaDlqXo&amp;amp;list=PLLAZ4kZ9dFpOnyRlyS-liKL5ReHDcj4G3&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hugo - Static Site Generator | Tutorial&lt;/a&gt; YouTube series&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/getting-started/quick-start/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hugo Quick Start&lt;/a&gt; official documentation&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;Before we get started, I am going to assume some things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You have an Azure subscription&lt;/li&gt;
&lt;li&gt;You have a GitHub account and repository&lt;/li&gt;
&lt;li&gt;The repository contains either only your static site content, or the whole Hugo directory with your latest generated content in the &lt;code&gt;public&lt;/code&gt; directory&lt;/li&gt;
&lt;li&gt;You get by with Git enough to be able to do things like committing/pushing&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;azure-static-web-apps&#34;&gt;Azure Static Web Apps&lt;/h2&gt;
&lt;p&gt;Let us start with deploying Hugo to an Azure Static Web App. &lt;a class=&#34;link&#34; href=&#34;https://techcommunity.microsoft.com/t5/apps-on-azure/introducing-app-service-static-web-apps/ba-p/1394451&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Earlier this year Microsoft announced Azure Static Web Apps&lt;/a&gt; and it&amp;rsquo;s currently in preview. While it&amp;rsquo;s in preview, this resource is free!&lt;/p&gt;
&lt;p&gt;It boasts &amp;ldquo;deep GitHub integration&amp;rdquo;, which is true. When you create the resource and associate a GitHub repository with it, it creates a GitHub Actions workflow YAML file in your repository. It also stores a secret in the repository. The secret is used by the workflow to authenticate to Azure. This workflow, when triggered by pushing to the master branch, ships everything in the &lt;code&gt;public&lt;/code&gt; directory up to the Azure Static Web App for you.&lt;/p&gt;
&lt;p&gt;The good thing about using Azure Static Web Apps is that you essentially get Azure Blob storage and Azure Functions bundled in to one resource. This enables you to leverage the speed and flexibility of static site generators, while still being able to implement some dynamic abilities in to your website by rolling your own API via Azure Functions.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Log in to the &lt;a class=&#34;link&#34; href=&#34;https://portal.azure.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Azure portal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Create a new Static Web App resource&lt;/li&gt;
&lt;li&gt;Fill out the typical information ie resource group, name and region&lt;/li&gt;
&lt;li&gt;Sign in to GitHub&lt;/li&gt;
&lt;li&gt;Choose your organisation / user, repository and branch&lt;/li&gt;
&lt;li&gt;For the build details, ensure you choose &lt;code&gt;Hugo&lt;/code&gt; and that you have the &amp;ldquo;App artifact location&amp;rdquo; set to &lt;code&gt;public&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Finalise the resource creation via &lt;code&gt;Review + create&lt;/code&gt; and if validation succeeds, click &lt;code&gt;Create&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-01.jpg&#34; data-size=&#34;1355x782&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-01_huef68e5499686639eded21e238ca19ac4_60604_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-01_huef68e5499686639eded21e238ca19ac4_60604_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-01.jpg&#34; width=&#34;1355&#34; height=&#34;782&#34; loading=&#34;lazy&#34;
				alt=&#34;Static Web App resource creation in Azure Portal&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Static Web App resource creation in Azure Portal&lt;/figcaption&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-02.jpg&#34; data-size=&#34;1920x1336&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-02_hu7c695f106d7069e463451d2ad9980f62_140124_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-02_hu7c695f106d7069e463451d2ad9980f62_140124_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-02.jpg&#34; width=&#34;1920&#34; height=&#34;1336&#34; loading=&#34;lazy&#34;
				alt=&#34;Static Web App resource creation in Azure Portal&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Static Web App resource creation in Azure Portal&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Once the Static Web App resource is provisioned you will notice it created the GitHub Actions workflow YAML file in your repository. We can see from looking in the workflow file that it is using the &lt;a class=&#34;link&#34; href=&#34;https://github.com/Azure/static-web-apps-deploy&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Azure/static-web-apps-deploy&lt;/a&gt; action. &lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/azure/static-web-apps/github-actions-workflow&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Here&amp;rsquo;s the link&lt;/a&gt; to the docs for said action.&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-03.jpg&#34; data-size=&#34;1461x759&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-03_hu4bc9b7cca5ad322bfd27609a7035dcab_68362_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-03_hu4bc9b7cca5ad322bfd27609a7035dcab_68362_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-03.jpg&#34; width=&#34;1461&#34; height=&#34;759&#34; loading=&#34;lazy&#34;
				alt=&#34;Creation of GitHub Actions workflow file by Azure&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Creation of GitHub Actions workflow file by Azure&lt;/figcaption&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-04.jpg&#34; data-size=&#34;1149x1040&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-04_hucccb004310e54a0a52abdb29283eac54_68189_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-04_hucccb004310e54a0a52abdb29283eac54_68189_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-04.jpg&#34; width=&#34;1149&#34; height=&#34;1040&#34; loading=&#34;lazy&#34;
				alt=&#34;Static Web Apps Deploy actions workflow file&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Static Web Apps Deploy actions workflow file&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;At this point, you will be able to see your static website live available from a HTTPS endpoint.&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-05.jpg&#34; data-size=&#34;1347x796&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-05_hu07251bb2a0a18783554b85726ad821a5_72359_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-05_hu07251bb2a0a18783554b85726ad821a5_72359_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-05.jpg&#34; width=&#34;1347&#34; height=&#34;796&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-06.jpg&#34; data-size=&#34;1347x796&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-06_hu036db5a0fd2626900c29f94d277788a1_43289_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-06_hu036db5a0fd2626900c29f94d277788a1_43289_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-06.jpg&#34; width=&#34;1347&#34; height=&#34;796&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;To use your own domain, go to your DNS provider set a CNAME record for &lt;code&gt;www&lt;/code&gt;, or any subdomain you want, to your &lt;code&gt;azurestaticapps.net&lt;/code&gt; URL as shown in your portal.&lt;/li&gt;
&lt;li&gt;After that, configure the static web app resource to point to your domain.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-07.jpg&#34; data-size=&#34;1347x796&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-07_hu36c7c823f442b2dfc21dc0999ad1e7c7_72721_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-07_hu36c7c823f442b2dfc21dc0999ad1e7c7_72721_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-07.jpg&#34; width=&#34;1347&#34; height=&#34;796&#34; loading=&#34;lazy&#34;
				alt=&#34;Creating a CNAME record in Cloudflare&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Creating a CNAME record in Cloudflare&lt;/figcaption&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-08.jpg&#34; data-size=&#34;1347x796&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-08_huf01b0a15de4e9a5a6ddfe266846e1f03_75865_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-08_huf01b0a15de4e9a5a6ddfe266846e1f03_75865_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-08.jpg&#34; width=&#34;1347&#34; height=&#34;796&#34; loading=&#34;lazy&#34;
				alt=&#34;Add custom domain to the static web app resource&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Add custom domain to the static web app resource&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Now your Hugo generated static website is deployed in Azure using Static Web Apps!&lt;/p&gt;
&lt;h2 id=&#34;azure-blob-storage&#34;&gt;Azure Blob storage&lt;/h2&gt;
&lt;p&gt;Moving on to hosting your Hugo website on Azure Blob storage instead.&lt;/p&gt;
&lt;p&gt;Now&amp;hellip; Azure Blob storage does not do everything Azure Static Web Apps does. There is a reasonable amount of configuration to do yourself. For example, the Blob storage account is not configured to be a static website by default. There is also no bundled Azure Functions resource to integrate your own API. If you want the same CI/CD experience as with Azure Static Web Apps, you must also roll your own workflow with GitHub Actions (or similar). But that is OK! Because I will share with you my GitHub Actions workflow!&lt;/p&gt;
&lt;p&gt;Why bother using it then? I guess while Static Web Apps are in preview, even though Microsoft will give you 30 days notice, they could start charging you an unpredictable rate to use it. Whereas Blob storage is a mature generally available service, its pricing model is known and it is very cost effective. Maybe you also have your own reasons to prefer Blob storage.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Log in to the &lt;a class=&#34;link&#34; href=&#34;https://portal.azure.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Azure portal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Create a new Azure Storage account&lt;/li&gt;
&lt;li&gt;Fill out the necessary information and click the usual &lt;code&gt;Review + create&lt;/code&gt; and &lt;code&gt;Create&lt;/code&gt; after validation&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-09.jpg&#34; data-size=&#34;1347x796&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-09_hu8e02045dd7fb5b90e83e8f249857e484_62652_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-09_hu8e02045dd7fb5b90e83e8f249857e484_62652_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-09.jpg&#34; width=&#34;1347&#34; height=&#34;796&#34; loading=&#34;lazy&#34;
				alt=&#34;Storage account creation in Azure Portal&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Storage account creation in Azure Portal&lt;/figcaption&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-10.jpg&#34; data-size=&#34;1347x1038&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-10_hu79c8dd91c5acc0a3b7025b8d45ccf7fe_97251_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-10_hu79c8dd91c5acc0a3b7025b8d45ccf7fe_97251_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-10.jpg&#34; width=&#34;1347&#34; height=&#34;1038&#34; loading=&#34;lazy&#34;
				alt=&#34;Storage account creation in Azure Portal&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Storage account creation in Azure Portal&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;Within the &amp;ldquo;Static website&amp;rdquo; blade, enable the storage account to be a static website. Also define your index and error documents to be&lt;code&gt;index.html&lt;/code&gt; and &lt;code&gt;404.html&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Within the &amp;ldquo;Containers&amp;rdquo; blade, select the &lt;code&gt;$web&lt;/code&gt; container and from the top menu change its access level via the &amp;ldquo;Change access level&amp;rdquo; menu item. Set its access policy to &lt;code&gt;Container&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Within the &amp;ldquo;Custom domain&amp;rdquo; blade, enter your custom domain and copy the domain which ends with &lt;code&gt;z33.web.core.windows.net&lt;/code&gt;. This will be used used to configure your CNAME record. Before clicking Save for your new custom domain, you will need to create a CNAME record with your DNS provider.&lt;/li&gt;
&lt;li&gt;Head over to &lt;a class=&#34;link&#34; href=&#34;https://cloudfoare.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Cloudflare&lt;/a&gt; and configure a CNAME record pointing to the &lt;code&gt;z33.web.core.windows.net&lt;/code&gt; domain gathered from the last step.&lt;/li&gt;
&lt;li&gt;Wait a little bit (a couple of minutes?), then back in the &amp;ldquo;Custom domain&amp;rdquo; blade of the Azure portal, click Save and the domain should validate OK.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-11.jpg&#34; data-size=&#34;1263x767&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-11_hu090a302355deb929678accc689402a5f_78521_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-11_hu090a302355deb929678accc689402a5f_78521_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-11.jpg&#34; width=&#34;1263&#34; height=&#34;767&#34; loading=&#34;lazy&#34;
				alt=&#34;Enable the storage account to be a static website&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Enable the storage account to be a static website&lt;/figcaption&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-12.jpg&#34; data-size=&#34;1263x767&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-12_hu2d7ff0fa065962dec3854ffea804ecf3_63859_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-12_hu2d7ff0fa065962dec3854ffea804ecf3_63859_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-12.jpg&#34; width=&#34;1263&#34; height=&#34;767&#34; loading=&#34;lazy&#34;
				alt=&#34;Change the $web container access policy to Container&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Change the $web container access policy to Container&lt;/figcaption&gt;
		
	&lt;/figure&gt;
&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-14.jpg&#34; data-size=&#34;1263x767&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-14_hu090a302355deb929678accc689402a5f_89995_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-14_hu090a302355deb929678accc689402a5f_89995_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-14.jpg&#34; width=&#34;1263&#34; height=&#34;767&#34; loading=&#34;lazy&#34;
				alt=&#34;Enter your custom domain&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Enter your custom domain&lt;/figcaption&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-15.jpg&#34; data-size=&#34;1444x857&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-15_hu980c2ad6e5b7f99e41bdc9c42a04417c_81683_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-15_hu980c2ad6e5b7f99e41bdc9c42a04417c_81683_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-15.jpg&#34; width=&#34;1444&#34; height=&#34;857&#34; loading=&#34;lazy&#34;
				alt=&#34;Creating a CNAME record in Cloudflare&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Creating a CNAME record in Cloudflare&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;At this point, all there is left to do is to upload some content to your new Blob storage &lt;code&gt;$web&lt;/code&gt; container.&lt;/p&gt;
&lt;p&gt;As a mess-around, create a file named &lt;code&gt;index.html&lt;/code&gt; locally with some simple HTML in it which we&amp;rsquo;ll use for testing shortly. Install &lt;a class=&#34;link&#34; href=&#34;https://azure.microsoft.com/en-us/features/storage-explorer/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Azure Storage Explorer&lt;/a&gt; and sign in with your Azure AD account with the subscription that holds your new storage account.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;Hello world&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Upload &lt;code&gt;index.html&lt;/code&gt; to the &lt;code&gt;$web&lt;/code&gt; container and check it out! It&amp;rsquo;s worth pointing out that the &lt;a class=&#34;link&#34; href=&#34;https://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-azurestorage&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Azure Storage Visual Studio Code extension&lt;/a&gt; lets you modify files directly in your Blob container.&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-16.gif&#34; data-size=&#34;1736x769&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-16_hua7f857b9f70ef40cf1a2b25db3d8bc35_560377_480x0_resize_box.gif 480w, https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-16_hua7f857b9f70ef40cf1a2b25db3d8bc35_560377_1024x0_resize_box.gif 1024w&#34;
				src=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-16.gif&#34; width=&#34;1736&#34; height=&#34;769&#34; loading=&#34;lazy&#34;
				alt=&#34;Click me to see animation&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Click me to see animation&lt;/figcaption&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-17.jpg&#34; data-size=&#34;1051x552&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-17_hue8f39cb830b111f5676f74261c177ba9_21130_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-17_hue8f39cb830b111f5676f74261c177ba9_21130_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-17.jpg&#34; width=&#34;1051&#34; height=&#34;552&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;What we really want to do is to get the similar CI/CD pipeline going on like we had with Static Web Apps.&lt;/p&gt;
&lt;ol start=&#34;9&#34;&gt;
&lt;li&gt;Within the &amp;ldquo;Shared access signature&amp;rdquo; blade of the storage account, generate a SAS connection string with the same permissions as below screenshot. Set the start/expiration date to suit your needs.&lt;/li&gt;
&lt;li&gt;Make note of the &lt;code&gt;Connection string&lt;/code&gt; at the bottom.&lt;/li&gt;
&lt;li&gt;From the Settings of your GitHub repository, create a secret named &lt;code&gt;AZURE_STORAGE_BLOB_SAS_CONNECTIONSTRING&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-18.jpg&#34; data-size=&#34;1344x1315&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-18_hu81fb38a9e4eb0d857fedfe6ad8a6b63e_144502_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-18_hu81fb38a9e4eb0d857fedfe6ad8a6b63e_144502_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-18.jpg&#34; width=&#34;1344&#34; height=&#34;1315&#34; loading=&#34;lazy&#34;
				alt=&#34;Create SAS and connection string&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Create SAS and connection string&lt;/figcaption&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-19.jpg&#34; data-size=&#34;1424x892&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-19_hu7eb12ce693e09550046076b69eeec561_69124_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-19_hu7eb12ce693e09550046076b69eeec561_69124_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-19.jpg&#34; width=&#34;1424&#34; height=&#34;892&#34; loading=&#34;lazy&#34;
				alt=&#34;Create secret in your GitHub repository&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Create secret in your GitHub repository&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;ol start=&#34;12&#34;&gt;
&lt;li&gt;Create a file in your repository named &lt;code&gt;azure-blob-storage.yml&lt;/code&gt; (or whatever you want, it really doesn&amp;rsquo;t matter, must be &lt;code&gt;.yml&lt;/code&gt; though) in &lt;code&gt;.github\workflows&lt;/code&gt; directory (that does matter, it must live in there). Use the below to populate to populate its contents.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Azure Storage Blob Container CI/CD&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;on&lt;/span&gt;:
  &lt;span style=&#34;color:#f92672&#34;&gt;push&lt;/span&gt;: 
    &lt;span style=&#34;color:#f92672&#34;&gt;branches&lt;/span&gt;:
      - &lt;span style=&#34;color:#ae81ff&#34;&gt;master&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;jobs&lt;/span&gt;:
  &lt;span style=&#34;color:#f92672&#34;&gt;deploy&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;runs-on&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ubuntu-latest&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:
      - &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions/checkout@v2&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:
          &lt;span style=&#34;color:#f92672&#34;&gt;submodules&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
      
      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Get Hugo&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;peaceiris/actions-hugo@v2&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:
          &lt;span style=&#34;color:#f92672&#34;&gt;hugo-version&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;0.76.3&amp;#39;&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;extended&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;

      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Build&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;hugo&lt;/span&gt;

      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Azure Blob Upload&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;bacongobbler/azure-blob-storage-upload@v1.1.1&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:
          &lt;span style=&#34;color:#f92672&#34;&gt;connection_string&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${{ secrets.AZURE_STORAGE_BLOB_SAS_CONNECTIONSTRING }}&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;source_dir&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;public&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;container_name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;$web&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;sync&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;13&#34;&gt;
&lt;li&gt;Commit and push to your master branch.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Watch the status of the GitHub action at &lt;code&gt;https://github.com/YOUR_USERNAME/YOUR_REPO/actions&lt;/code&gt;. If it ran successfully without any errors, you will see your Hugo website live at your domain!&lt;/p&gt;
&lt;p&gt;If you want to make any more changes to your website, that&amp;rsquo;s OK! With the above workflow in your repo, every time you commit to master, the workflow will be triggered and it will upload everything that gets created in the &lt;code&gt;public&lt;/code&gt; directory within the runner to your &lt;code&gt;$web&lt;/code&gt; container.&lt;/p&gt;
&lt;h2 id=&#34;github-pages&#34;&gt;GitHub Pages&lt;/h2&gt;
&lt;p&gt;Last but definitely not least is &lt;a class=&#34;link&#34; href=&#34;https://pages.github.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub Pages&lt;/a&gt;. I think this is probably my favourite because it is &lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/en/free-pro-team@latest/github/working-with-github-pages/creating-a-github-pages-site&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;the simplest to create&lt;/a&gt; and absolutely free.&lt;/p&gt;
&lt;p&gt;It is worth pointing out some &lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/en/free-pro-team@latest/github/working-with-github-pages/about-github-pages#usage-limits&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;usage limits associated with GitHub Pages&lt;/a&gt;: soft bandwidth limit of 100GB p/month and repositories should ideally not be larger than 1GB.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/hosting-and-deployment/hosting-on-github/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hugo also has some excellent docs&lt;/a&gt; on deploying to GitHub Pages. They suggest a reasonable idea where we have two repositories for our static website, instead of one. One contains your Hugo sources, and another - which is added as a Git submodule - holds our Hugo generated HTML content. The former would be a repository named whatever you want, for example &lt;code&gt;&amp;lt;username&amp;gt;.github.io-hugo&lt;/code&gt;, whereas the latter would be named &lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Instead of that, we are going to keep focused on using GitHub Actions. This will enable to create a pipeline for Hugo to grab content from repository, and use it to publish to another. In other words, we will still have two repositories however we will not create a submodule for the &lt;code&gt;public&lt;/code&gt; directory.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create your repository named &lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Go to the Settings of your repository&lt;/li&gt;
&lt;li&gt;Enable GitHub Pages by choosing your branch (&lt;code&gt;master&lt;/code&gt;) and folder (&lt;code&gt;/&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Within the same section from the previous step, optionally enter your custom domain&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you do enter a custom domain, check out this documentation on &lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/en/free-pro-team@latest/github/working-with-github-pages/managing-a-custom-domain-for-your-github-pages-site&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Managing a customer domain for your GitHub Pages site&lt;/a&gt;.&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;Check the box to &lt;code&gt;Enforce HTTPS&lt;/code&gt; however note that this really does take ~24 hours to generate the certificate.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-20.jpg&#34; data-size=&#34;1276x356&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-20_hu2fc4b8bb8c4d2bfd479f0e8a6b1991be_28663_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-20_hu2fc4b8bb8c4d2bfd479f0e8a6b1991be_28663_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-20.jpg&#34; width=&#34;1276&#34; height=&#34;356&#34; loading=&#34;lazy&#34;
				alt=&#34;GitHub repository settings&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;GitHub repository settings&lt;/figcaption&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-21.jpg&#34; data-size=&#34;1424x892&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-21_hubf36c5012ab5c09dbe2db0bf298f396d_73874_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-21_hubf36c5012ab5c09dbe2db0bf298f396d_73874_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-21.jpg&#34; width=&#34;1424&#34; height=&#34;892&#34; loading=&#34;lazy&#34;
				alt=&#34;Configure GitHub repository for GitHub Pages&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Configure GitHub repository for GitHub Pages&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;Go to your &lt;a class=&#34;link&#34; href=&#34;https://github.com/settings/tokens&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub account&amp;rsquo;s developer settings&lt;/a&gt; and &lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/en/free-pro-team@latest/github/authenticating-to-github/creating-a-personal-access-token&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;create a Personal access token&lt;/a&gt;. Make note of the generated token for use in a couple of steps.&lt;/li&gt;
&lt;li&gt;Create another repository that will contain our Hugo sources, named something like &lt;code&gt;&amp;lt;username&amp;gt;.github.io-hugo&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Go to the Settings of your newly created repository (with -hugo in the name) and &lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/en/free-pro-team@latest/actions/reference/encrypted-secrets#creating-encrypted-secrets-for-a-repository&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;create a new secret&lt;/a&gt; named something like &lt;code&gt;&amp;lt;username&amp;gt;githubiohugo&lt;/code&gt;. Its value will be the personal access token we created moments ago.&lt;/li&gt;
&lt;li&gt;Clone your &lt;code&gt;&amp;lt;username&amp;gt;.github.io-hugo&lt;/code&gt; repository to your computer and copy all of your Hugo content in to it, excluding the &lt;code&gt;public&lt;/code&gt; directory&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;PS C:\git&amp;gt; git clone https://github.com/USERNAME/USERNAME.github.io-hugo.git
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;10&#34;&gt;
&lt;li&gt;Create &lt;code&gt;publish.yml&lt;/code&gt; in &lt;code&gt;.github/workflows&lt;/code&gt; and put the below content inside it, adjusting the necessary values that read &lt;code&gt;&amp;lt;CHANGEME&amp;gt;&lt;/code&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Publish site&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;on&lt;/span&gt;: 
  &lt;span style=&#34;color:#f92672&#34;&gt;push&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;branch&lt;/span&gt;:
      - &lt;span style=&#34;color:#ae81ff&#34;&gt;master&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;jobs&lt;/span&gt;:
  &lt;span style=&#34;color:#f92672&#34;&gt;publish&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;runs-on&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ubuntu-latest&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:
      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Git checkout&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions/checkout@v2&lt;/span&gt;

      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Update theme&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;git submodule update --init --recursive&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# Optional if you have the theme added as submodule, you can pull it and use the most updated version&lt;/span&gt;

      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Setup hugo&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;peaceiris/actions-hugo@v2&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:
          &lt;span style=&#34;color:#f92672&#34;&gt;hugo-version&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.75.1&amp;#34;&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;extended&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;

      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Build&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;hugo&lt;/span&gt;

      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Deploy&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;peaceiris/actions-gh-pages@v3&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:
          &lt;span style=&#34;color:#f92672&#34;&gt;personal_token&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${{ secrets.&amp;lt;CHANGEME&amp;gt; }}&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# The name of the secret you created in step 8&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;external_repository&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;&amp;lt;CHANGEME&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# The name of the GitHub Pages repository, e.g. &amp;lt;username&amp;gt;/&amp;lt;username&amp;gt;.github.io&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;publish_dir&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;./public&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;user_name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;&amp;lt;CHANGEME&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# The git username used for publishing commits to external_repository&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;user_email&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;&amp;lt;CHANGEME&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# The git email address used for publishing commits to external_repository&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;publish_branch&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;master&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;cname&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;&amp;lt;CHANGEME&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# If you configured your own domain, you may want to populate this with it, e.g. mine is adamcook.io.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://ruddra.com/hugo-deploy-static-page-using-github-actions/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Thank you to Ruddra for inspiration of this YAML!&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;11&#34;&gt;
&lt;li&gt;At this point, before we commit and push up to GitHub, issue &lt;code&gt;hugo server&lt;/code&gt; within the &lt;code&gt;C:\git\USERNAME.github.io-hugo&lt;/code&gt; directory and check out how things look locally by browsing to &lt;a class=&#34;link&#34; href=&#34;http://localhost:1313&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://localhost:1313&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;If all looks good, commit and push. The GitHub Actions workflow will take care of the rest of:
&lt;ol&gt;
&lt;li&gt;Invoking Hugo to generate content in &lt;code&gt;public&lt;/code&gt; within the runner&lt;/li&gt;
&lt;li&gt;Publish said content to our GitHub Pages &lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt; repository&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;closing-comments&#34;&gt;Closing comments&lt;/h2&gt;
&lt;p&gt;I hope you found this helpful!&lt;/p&gt;
&lt;p&gt;If you have any questions or feedback, drop a comment below, ping me on Twitter or find me in the &lt;a class=&#34;link&#34; href=&#34;https://winadmins.io&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;WinAdmins Discord&lt;/a&gt; (my handle is @acc)!&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Starting to Automate Animated Content for Virtual Events</title>
        <link>https://adamcook.io/p/starting-to-automate-animated-content-for-virtual-events/</link>
        <pubDate>Sun, 12 Jul 2020 00:00:00 +0100</pubDate>
        
        <guid>https://adamcook.io/p/starting-to-automate-animated-content-for-virtual-events/</guid>
        <description>&lt;img src="https://adamcook.io/p/starting-to-automate-animated-content-for-virtual-events/images/cover.jpg" alt="Featured image of post Starting to Automate Animated Content for Virtual Events" /&gt;&lt;p&gt;I recently took ownership of becoming the organiser for my local PowerShell user group - &lt;a class=&#34;link&#34; href=&#34;https://pssouth.co.uk&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PowerShell Southampton&lt;/a&gt;. With everything going on in the world re the pandemic, I realised I won&amp;rsquo;t be arranging in-person meetups any time soon.&lt;/p&gt;
&lt;p&gt;I got stuck in and learnt ways I could produce a virtual event: looked at the tech available and weighed up the features, pros/cons etc with how I wanted it to look and what I wanted the user experience to be for all involved (organiser, speaker and audience).&lt;/p&gt;
&lt;p&gt;The research was short-lived. I quickly landed on using OBS Studio and pushing the stream to YouTube. OBS Studio seems like the de facto choice for screen recording and streaming. After some hours tinkering, reading and doing my owns streams to &lt;a class=&#34;link&#34; href=&#34;https://twitch.tv/codaamok&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Twitch&lt;/a&gt; (archived to my &lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/channel/UCjv4o4ToaauMNKP4wfIhP0A&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;YouTube channel&lt;/a&gt;), I was more than happy with what it offered.&lt;/p&gt;
&lt;p&gt;Here is some material I used to help me learn streaming: a bunch of posts by &lt;a class=&#34;link&#34; href=&#34;https://blog.netnerds.net/category/livestreaming/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Chrissy LeMaire&lt;/a&gt; and a small list of resources stored on the &lt;a class=&#34;link&#34; href=&#34;https://github.com/powershelllive/LiveStreamQuickStart/blob/master/README.md&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PowerShellLive repoitory&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The first event is this Wednesday and I got seriously carried away this weekend with styling some &amp;ldquo;starting soon&amp;rdquo; or &amp;ldquo;be right back&amp;rdquo; animations. Below is what I&amp;rsquo;ve ended up with and I&amp;rsquo;ll quickly walkthrough how to use it if you wanted to do something similar.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe loading=&#34;lazy&#34; src=&#34;https://www.youtube.com/embed/zubibdBBTVU&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;As you can see in both scenes there is only 1 single browse source. This immediately makes my OBS setup super simple and easily to recreate if I ever need to.&lt;/p&gt;
&lt;p&gt;There&amp;rsquo;s just two resources needed to get rolling with this, and &lt;a class=&#34;link&#34; href=&#34;https://gist.github.com/codaamok/b0c1f6b203de03c18ed91268c31520b4&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;they&amp;rsquo;re both in a Gist&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;index.php&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;New-PSSouthamptonVirtualSession.ps1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The browser source in OBS points to &lt;code&gt;http://127.0.0.1/pssouthampton/index.php?message=We&#39;ll be right back, sorry for the interruption!&lt;/code&gt;. Pass a difference value to the message parameter in the query string of the URL to change the scrolling text.&lt;/p&gt;
&lt;p&gt;Unfortunately, this does depend on XAMPP (or similar) for at least a local web service and PHP. I was fixed on the idea of reading from a .json file within the HTML which contained properties such as session title, speaker name, Twitter handle, Twitter image path. I tried many ways of doing this with JavaScript but no dice, in the end I gave up and accepted the dependency.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;index.php&lt;/code&gt; hugely depends on the browser&amp;rsquo;s size (or OBS&amp;rsquo;s canvas size) being 1920x1080. You&amp;rsquo;ll also notice that if you opened &lt;code&gt;index.php&lt;/code&gt; in a browser, the positioning of some items might look different. I assume that&amp;rsquo;s either because the display scaling of my 4k display set to 175%, or the browser engine in OBS is different in some way.&lt;/p&gt;
&lt;p&gt;Accompanying that is a PowerShell script &lt;code&gt;New-PSSouthamptonVirtualSession.ps1&lt;/code&gt;. This is the only thing I intend to use before each new event. I pass parameters for session title, speaker&amp;rsquo;s name and Twitter handle, and it does the rest:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Updates/creates properties.json with said properties, which &lt;code&gt;index.php&lt;/code&gt; reads from&lt;/li&gt;
&lt;li&gt;Downloads the speaker&amp;rsquo;s Twitter profile and specifies its filename&lt;/li&gt;
&lt;li&gt;Starts XAMPP&amp;rsquo;s Apache if not already running&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This workflow makes life very easy moving forward: no need to fiddle with OBS sources and positioning them, or manipulating images in some editor. At most I&amp;rsquo;ll likely only need to fiddle with the session title&amp;rsquo;s text size and positioning in the CSS of &lt;code&gt;index.php&lt;/code&gt; if it gets particularly lengthy.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s a quick demo of using the &lt;code&gt;New-PSSouthamptonVirtualSession.ps1&lt;/code&gt; and how easily it changes &lt;code&gt;index.php&lt;/code&gt;:&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe loading=&#34;lazy&#34; src=&#34;https://www.youtube.com/embed/fuGn8oPYBzE&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

</description>
        </item>
        <item>
        <title>Creating Dynamic Azure ARM Templates</title>
        <link>https://adamcook.io/p/creating-dynamic-azure-arm-templates/</link>
        <pubDate>Sun, 05 Jul 2020 00:00:00 +0100</pubDate>
        
        <guid>https://adamcook.io/p/creating-dynamic-azure-arm-templates/</guid>
        <description>&lt;img src="https://adamcook.io/p/creating-dynamic-azure-arm-templates/images/cover.jpg" alt="Featured image of post Creating Dynamic Azure ARM Templates" /&gt;&lt;p&gt;In this post I&amp;rsquo;ll demonstrate how you can dynamically create resources or set properties for resources in your Azure ARM templates.&lt;/p&gt;
&lt;p&gt;For example, you might have a template which accepts an array. For each element in that array, you want to create resources, or set properties for a resource.&lt;/p&gt;
&lt;p&gt;The first objective will demonstrate how to create a dynamic number of properties associated with a resource. The second object will show you how to dynamically create a number of resources. The examples will revolve around creating virtual networks and subnets.&lt;/p&gt;
&lt;h2 id=&#34;arm-template-functions&#34;&gt;ARM template functions&lt;/h2&gt;
&lt;p&gt;There&amp;rsquo;s a bunch of &lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/azure/azure-resource-manager/templates/template-functions&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ARM template functions&lt;/a&gt; available that you do all kinds of things within your templates: logical operators and conditional actions, string manipulation, array conversions or iteration, arithmetic. All kinds of things.&lt;/p&gt;
&lt;p&gt;Using functions within ARM templates make the json files more than just declarative build documents. They enable you to get creative and implement some programmable logic in to your templates. This can help with making your templates being more versatile.&lt;/p&gt;
&lt;p&gt;For this demo I&amp;rsquo;ll focus on the functions &lt;code&gt;[length()]&lt;/code&gt;, &lt;code&gt;[concat()]&lt;/code&gt; and &lt;code&gt;[copyIndex()]&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;objective-1&#34;&gt;Objective 1&lt;/h2&gt;
&lt;p&gt;Take the scenario where your current template contains a single virtual network resource and you hardcode the virtual network&amp;rsquo;s address space properties and all the subnets too.&lt;/p&gt;
&lt;p&gt;Maybe you decide to create some logic in your scripts where you dynamically create x many subnets. To do this, we are going to dynamically add x many properties to the &lt;code&gt;Microsoft.Network/VirtualNetworks&lt;/code&gt; resource.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s start with the below example using those hardcoded properties and subnets.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-JSON&#34; data-lang=&#34;JSON&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;...&lt;/span&gt;
{
	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;vnet01&amp;#34;&lt;/span&gt;,
	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Microsoft.Network/VirtualNetworks&amp;#34;&lt;/span&gt;,
	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;apiVersion&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2019-09-01&amp;#34;&lt;/span&gt;,
	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;location&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;uksouth&amp;#34;&lt;/span&gt;,
	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;properties&amp;#34;&lt;/span&gt;: {
		&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;addressSpace&amp;#34;&lt;/span&gt;: {
			&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;addressPrefixes&amp;#34;&lt;/span&gt;: [
				&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;192.168.0.0/16&amp;#34;&lt;/span&gt;
			]
		},
		&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;subnets&amp;#34;&lt;/span&gt;: [
			{
				&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;subnet-1&amp;#34;&lt;/span&gt;,
				&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;properties&amp;#34;&lt;/span&gt;: {
					&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;addressPrefix&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;192.168.1.0/24&amp;#34;&lt;/span&gt;
				}
			},
			{
				&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;subnet-2&amp;#34;&lt;/span&gt;,
				&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;properties&amp;#34;&lt;/span&gt;: {
					&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;addressPrefix&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;192.168.2.0/24&amp;#34;&lt;/span&gt;
				}
			},
			{
				&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;subnet-3&amp;#34;&lt;/span&gt;,
				&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;properties&amp;#34;&lt;/span&gt;: {
					&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;addressPrefix&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;192.168.3.0/24&amp;#34;&lt;/span&gt;
				}
			}
		]
	}
}
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Our objective is to dynamically create as many subnets as many there are elements in the parameter value named &lt;code&gt;subnets&lt;/code&gt;, which is an array of just address prefixes, e.g. &lt;code&gt;192.168.1.0/24&lt;/code&gt;, &lt;code&gt;192.168.2.0/24&lt;/code&gt; and &lt;code&gt;192.168.3.0/24&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For the &lt;code&gt;properties&lt;/code&gt; object we&amp;rsquo;re going to heavily modify the &lt;code&gt;subnets&lt;/code&gt; array and replace it with the &lt;code&gt;copy&lt;/code&gt; element. This element enables us to create a dynamic number of resources or properties. The &lt;code&gt;copy&lt;/code&gt; element is effectively what allows us to create a loop within our template. It accepts an array of three objects: &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;count&lt;/code&gt; and &lt;code&gt;input&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;name&lt;/code&gt;: the name of our loop. We use this name to reference an iterable.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;count&lt;/code&gt;:  the number of times we want to iterate over our loop.&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;code&gt;input&lt;/code&gt;: this is where we specify values for our resource&amp;rsquo;s properties.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;An example of the &lt;code&gt;copy&lt;/code&gt; element looks like the below.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-JSON&#34; data-lang=&#34;JSON&#34;&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;...&lt;/span&gt;
{
	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;vnet01&amp;#34;&lt;/span&gt;,
	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Microsoft.Network/VirtualNetworks&amp;#34;&lt;/span&gt;,
	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;apiVersion&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2019-09-01&amp;#34;&lt;/span&gt;,
	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;location&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;uksouth&amp;#34;&lt;/span&gt;,
	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;properties&amp;#34;&lt;/span&gt;: {
		&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;addressSpace&amp;#34;&lt;/span&gt;: {
			&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;addressPrefixes&amp;#34;&lt;/span&gt;: [
				&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;192.168.0.0/16&amp;#34;&lt;/span&gt;
			]
		},
		&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;copy&amp;#34;&lt;/span&gt;: [
			{
				&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;subnets&amp;#34;&lt;/span&gt;,
				&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;count&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,
				&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;input&amp;#34;&lt;/span&gt;: {
					&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[concat(&amp;#39;subnet-&amp;#39;, copyIndex(&amp;#39;subnets&amp;#39;, 1))]&amp;#34;&lt;/span&gt;,
					&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;properties&amp;#34;&lt;/span&gt;: {
						&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;addressPrefix&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[concat(&amp;#39;192.168.&amp;#39;, copyIndex(&amp;#39;subnets&amp;#39;, 1), &amp;#39;0/24&amp;#39;)&amp;#34;&lt;/span&gt;
					}
				}
			}
		]
	}
}
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The above simply creates 3 subnet with far fewer lines. You&amp;rsquo;ll notice two functions I haven&amp;rsquo;t explained yet: &lt;code&gt;[concat()]&lt;/code&gt; and &lt;code&gt;[copyIndex()]&lt;/code&gt;. The Microsoft docs do a good job on explaining these, but&amp;hellip;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[concat()]&lt;/code&gt; allows you to concatenate arrays or strings. It accepts at a minimum of 1 argument and any number of additional arguments. You can see this is used to define a unique name for each subnet.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[copyIndex()]&lt;/code&gt; allows you to access the position/index of the current iterable in the loop. We pass two parameters: the name of the loop &amp;ldquo;subnets&amp;rdquo; and an offset. Using the offset is what enables us to start with creating subnet names from &amp;ldquo;subnets-1&amp;rdquo; rather than &amp;ldquo;subnets-0&amp;rdquo;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You notice I use both &lt;code&gt;[concat()]&lt;/code&gt; and &lt;code&gt;[copyIndex()]&lt;/code&gt; for the &lt;code&gt;addressPrefix&lt;/code&gt; property. This enables me to bump the subnet by 1 and correlate the subnet name with the 3rd subnet octet.&lt;/p&gt;
&lt;p&gt;There&amp;rsquo;s definitely room for improvement here. The &lt;code&gt;count&lt;/code&gt; object of the &lt;code&gt;copy&lt;/code&gt; element is hardcoded at the value of 3. What we could do is leverage a parameter of our json value, which contains an array of strings for all the subnets we want in our virtual network.&lt;/p&gt;
&lt;p&gt;The below is what an ideal could look like that creates subnets based on all the items in a given array:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-JSON&#34; data-lang=&#34;JSON&#34;&gt;{
	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;$schema&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;contentVersion&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.0.0.0&amp;#34;&lt;/span&gt;,
	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;parameters&amp;#34;&lt;/span&gt;: {
		&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;subnetAddressSpaces&amp;#34;&lt;/span&gt;: {
			&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;array&amp;#34;&lt;/span&gt;,
			&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;defaultValue&amp;#34;&lt;/span&gt;: [
				&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;192.168.1.0/24&amp;#34;&lt;/span&gt;,
				&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;192.168.2.0/24&amp;#34;&lt;/span&gt;,
				&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;192.168.3.0/24&amp;#34;&lt;/span&gt;
			]
		}
	},
	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;variables&amp;#34;&lt;/span&gt;: {},
	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;resources&amp;#34;&lt;/span&gt;: [
		{
			&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;vnet01&amp;#34;&lt;/span&gt;,
			&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Microsoft.Network/VirtualNetworks&amp;#34;&lt;/span&gt;,
			&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;apiVersion&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2019-09-01&amp;#34;&lt;/span&gt;,
			&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;location&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;uksouth&amp;#34;&lt;/span&gt;,
			&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;properties&amp;#34;&lt;/span&gt;: {
				&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;addressSpace&amp;#34;&lt;/span&gt;: {
					&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;addressPrefixes&amp;#34;&lt;/span&gt;: [
						&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;192.168.0.0/16&amp;#34;&lt;/span&gt;
					]
				},
				&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;copy&amp;#34;&lt;/span&gt;: [
					{
						&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;subnets&amp;#34;&lt;/span&gt;,
						&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;count&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[length(parameters(&amp;#39;subnetAddressSpaces&amp;#39;))]&amp;#34;&lt;/span&gt;,
						&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;input&amp;#34;&lt;/span&gt;: {
							&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[concat(&amp;#39;subnet-&amp;#39;, copyIndex(&amp;#39;subnets&amp;#39;, 1))]&amp;#34;&lt;/span&gt;,
							&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;properties&amp;#34;&lt;/span&gt;: {
								&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;addressPrefix&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[parameters(&amp;#39;subnetAddressSpaces&amp;#39;)[copyIndex(&amp;#39;subnets&amp;#39;)]]&amp;#34;&lt;/span&gt;
							}
						}
					}
				]
			}
		}
	]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In the above you can see I&amp;rsquo;ve included what the parameter definition this time, and defining the array of subset address spaces by specifying &lt;code&gt;defaultValue&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;What I&amp;rsquo;m doing differently here is using two different functions &lt;code&gt;[length()]&lt;/code&gt; and &lt;code&gt;[parameters()]&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[length()]&lt;/code&gt; is what enables us to gather the number of elements within an array. In this case the value will be 3. This function can also be used to get the number of characters in a string or number of root-level properties in a given object.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[parameters()]&lt;/code&gt; is hopefully obvious, but if not it&amp;rsquo;s how we can access the value of a parameter by passing one of the template&amp;rsquo;s parameter names.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;What the above in mind, you can see for the &lt;code&gt;count&lt;/code&gt; object we now have a means to loop for x many iterations for y many elements in the &lt;code&gt;subnetAddressSpaces&lt;/code&gt; array. You&amp;rsquo;ll also notice, we&amp;rsquo;re no longer concatenating a string to create our subnets&#39; address space. Instead we&amp;rsquo;re directly accessing the value in the array by referencing the index position of the returned by &lt;code&gt;[copyIndex()]&lt;/code&gt;. In other words, we&amp;rsquo;re grabbing the current value of the iterable in the loop.&lt;/p&gt;
&lt;p&gt;Hopefully now you get the sense that this whole combination of the &lt;code&gt;copy&lt;/code&gt; element, with functions &lt;code&gt;[length()]&lt;/code&gt; and &lt;code&gt;[copyIndex()]&lt;/code&gt; is pretty much a for in-range loop interpreted by Azure within our json.&lt;/p&gt;
&lt;h2 id=&#34;objective-2&#34;&gt;Objective 2&lt;/h2&gt;
&lt;p&gt;As for the second objective (dynamically creating resources, instead of dynamically setting properties of a resource&amp;rsquo;s properties&amp;hellip; wait, what?!), there&amp;rsquo;s hardly any difference, except there&amp;rsquo;s no need to use the &lt;code&gt;input&lt;/code&gt; object within the &lt;code&gt;copy&lt;/code&gt; element.&lt;/p&gt;
&lt;p&gt;Below I&amp;rsquo;ll share a complete working example of the template and a short PowerShell snippet to create the deployment.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-JSON&#34; data-lang=&#34;JSON&#34;&gt;{
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;$schema&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;contentVersion&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.0.0.0&amp;#34;&lt;/span&gt;,
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;parameters&amp;#34;&lt;/span&gt;: {
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;virtualNetworkAddressSpaces&amp;#34;&lt;/span&gt;: {
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;array&amp;#34;&lt;/span&gt;
        }
    },
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;variables&amp;#34;&lt;/span&gt;: {},
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;resources&amp;#34;&lt;/span&gt;: [
        {
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[concat(&amp;#39;vnet-&amp;#39;, copyIndex(&amp;#39;vnetloop&amp;#39;, 1))]&amp;#34;&lt;/span&gt;,
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Microsoft.Network/VirtualNetworks&amp;#34;&lt;/span&gt;,
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;apiVersion&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2019-09-01&amp;#34;&lt;/span&gt;,
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;location&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;uksouth&amp;#34;&lt;/span&gt;,
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;dependsOn&amp;#34;&lt;/span&gt;: [],
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;tags&amp;#34;&lt;/span&gt;: {},
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;copy&amp;#34;&lt;/span&gt;: {
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;vnetloop&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;count&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[length(parameters(&amp;#39;virtualNetworkAddressSpaces&amp;#39;))]&amp;#34;&lt;/span&gt;
            },
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;properties&amp;#34;&lt;/span&gt;: {
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;addressSpace&amp;#34;&lt;/span&gt;: {
                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;addressPrefixes&amp;#34;&lt;/span&gt;: [
                        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[parameters(&amp;#39;virtualNetworkAddressSpaces&amp;#39;)[copyIndex(&amp;#39;vnetloop&amp;#39;)]]&amp;#34;&lt;/span&gt;
                    ]
                },
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;subnets&amp;#34;&lt;/span&gt;: [
                    {
                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;subnet0&amp;#34;&lt;/span&gt;,
                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;properties&amp;#34;&lt;/span&gt;: {
                            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;addressPrefix&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[parameters(&amp;#39;virtualNetworkAddressSpaces&amp;#39;)[copyIndex(&amp;#39;vnetloop&amp;#39;)]]&amp;#34;&lt;/span&gt;
                        }
                    }
                ]
            }
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;$TemplateParameters = @{
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;virtualNetworkAddressSpaces&amp;#34;&lt;/span&gt; = @(
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;192.168.1.0/24&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;192.168.2.0/24&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;192.168.3.0/24&amp;#34;&lt;/span&gt;
    )
}

New-AzResourceGroupDeployment -Name &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mytestdeployment&amp;#34;&lt;/span&gt; -ResourceGroupName &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rg-mytest&amp;#34;&lt;/span&gt; -TemplateFile &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.\vnet-template-2.json&amp;#34;&lt;/span&gt; -TemplateParameterObject $TemplateParameters
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With the above we&amp;rsquo;re still making use of the [length()] function for the count property of the copy element. This still enables us to loop over the number of elements within the given array. You&amp;rsquo;ll also notice we&amp;rsquo;re just creating 1 subnet for each virtual network. Each subnet&amp;rsquo;s width is the entire width virtual network&amp;rsquo;s address space.&lt;/p&gt;
&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;p&gt;I know these examples are really short. You&amp;rsquo;re really unlikely to want to &lt;em&gt;just&lt;/em&gt; dynamically create subnets or virtual networks, but hopefully this is offers you insightful examples to get you a working syntax for whatever it is you&amp;rsquo;re trying to do!&lt;/p&gt;
&lt;p&gt;The below Microsoft doc links may be helpful for you, if not ping me and I&amp;rsquo;ll be happy to help!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/azure/azure-resource-manager/templates/template-functions&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ARM Template Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/azure/azure-resource-manager/templates/copy-properties&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Property iteration in ARM templates&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>ConfigMgr WSUS woes, WSUSCtrl.log &#34;Cannot open database &#34;SUSDB&#34; requested by the login. The login failed.~~Login failed for user &#39;DOMAIN\SERVER$&#39;&#34;</title>
        <link>https://adamcook.io/p/configmgr-wsus-woes-wsusctrl.log-cannot-open-database-susdb-requested-by-the-login.-the-login-failed.~~login-failed-for-user-domain%5Cserver/</link>
        <pubDate>Thu, 12 Dec 2019 00:00:00 +0100</pubDate>
        
        <guid>https://adamcook.io/p/configmgr-wsus-woes-wsusctrl.log-cannot-open-database-susdb-requested-by-the-login.-the-login-failed.~~login-failed-for-user-domain%5Cserver/</guid>
        <description>&lt;img src="https://adamcook.io/p/configmgr-wsus-woes-wsusctrl.log-cannot-open-database-susdb-requested-by-the-login.-the-login-failed.~~login-failed-for-user-domain%5Cserver/images/cover.jpg" alt="Featured image of post ConfigMgr WSUS woes, WSUSCtrl.log &#34;Cannot open database &#34;SUSDB&#34; requested by the login. The login failed.~~Login failed for user &#39;DOMAIN\SERVER$&#39;&#34;" /&gt;&lt;p&gt;First post as MEMCM rather than SCCM. I think since my last post in July I&amp;rsquo;ve accumulated a dozen unfinished drafts but you know, I&amp;rsquo;ve been having too much fun.. working.&lt;/p&gt;
&lt;p&gt;I recently stood up a remote SUP with its own WSUS role and SQL database. What I didn&amp;rsquo;t realise was, even though it was still syncing updates from the upstream SUP/WSUS server just fine, the status messages for the SMS_WSUS_CONTROL_MANAGER component on the new SUP/WSUS box was coughing up a bunch of errors ever since I installed the roles and configured them:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Failures were reported on WSUS Server &amp;quot;server.domain.com&amp;quot; while trying to make WSUS database connection with SQL Server Exception error code -2146232060.

Possible cause: SQL Server service is not running or cannot be accessed.
Solution: Verify that the SQL Server and SQL Server Agent services are running and can be contacted.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;WSUSCtrl.log on the new remote SUP/WSUS box was thankfully giving me more juice:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;System.Data.SqlClient.SqlException (0x80131904): Cannot open database &amp;quot;SUSDB&amp;quot; requested by the login. The login failed.~~Login failed for user &#39;DOMAIN\SERVER$&#39;.~~  ...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-wsus-woes-wsusctrl.log-cannot-open-database-susdb-requested-by-the-login.-the-login-failed.~~login-failed-for-user-domain%5Cserver/images/image-01.jpg&#34; data-size=&#34;1456x756&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-wsus-woes-wsusctrl.log-cannot-open-database-susdb-requested-by-the-login.-the-login-failed.~~login-failed-for-user-domain%5Cserver/images/image-01_hua16cf076b1bf5c2a1c7c7cd77ece239d_717269_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/configmgr-wsus-woes-wsusctrl.log-cannot-open-database-susdb-requested-by-the-login.-the-login-failed.~~login-failed-for-user-domain%5Cserver/images/image-01_hua16cf076b1bf5c2a1c7c7cd77ece239d_717269_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-wsus-woes-wsusctrl.log-cannot-open-database-susdb-requested-by-the-login.-the-login-failed.~~login-failed-for-user-domain%5Cserver/images/image-01.jpg&#34; width=&#34;1456&#34; height=&#34;756&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;And again in Event Viewer under the Application log:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Log Name:      Application
Source:        MSSQLSERVER
Date:          12/12/2019 11:59:34
Event ID:      18456
Task Category: Logon
Level:         Information
Keywords:      Classic,Audit Failure
User:          SYSTEM
Computer:      SERVER.domain.com
Description:
Login failed for user &#39;DOMAIN\SERVER$&#39;. Reason: Failed to open the explicitly specified database &#39;SUSDB&#39;. [CLIENT: fe80::442f:d8a1:6d2e:757%3]
Event Xml:
&amp;lt;Event xmlns=&amp;quot;http://schemas.microsoft.com/win/2004/08/events/event&amp;quot;&amp;gt;
  &amp;lt;System&amp;gt;
    &amp;lt;Provider Name=&amp;quot;MSSQLSERVER&amp;quot; /&amp;gt;
    &amp;lt;EventID Qualifiers=&amp;quot;49152&amp;quot;&amp;gt;18456&amp;lt;/EventID&amp;gt;
    &amp;lt;Level&amp;gt;0&amp;lt;/Level&amp;gt;
    &amp;lt;Task&amp;gt;4&amp;lt;/Task&amp;gt;
    &amp;lt;Keywords&amp;gt;0x90000000000000&amp;lt;/Keywords&amp;gt;
    &amp;lt;TimeCreated SystemTime=&amp;quot;2019-12-12T11:59:34.450122600Z&amp;quot; /&amp;gt;
    &amp;lt;EventRecordID&amp;gt;10164&amp;lt;/EventRecordID&amp;gt;
    &amp;lt;Channel&amp;gt;Application&amp;lt;/Channel&amp;gt;
    &amp;lt;Computer&amp;gt;SERVER.domain.com&amp;lt;/Computer&amp;gt;
    &amp;lt;Security UserID=&amp;quot;S-1-5-18&amp;quot; /&amp;gt;
  &amp;lt;/System&amp;gt;
  &amp;lt;EventData&amp;gt;
    &amp;lt;Data&amp;gt;DOMAIN\SERVER$&amp;lt;/Data&amp;gt;
    &amp;lt;Data&amp;gt; Reason: Failed to open the explicitly specified database &#39;SUSDB&#39;.&amp;lt;/Data&amp;gt;
    &amp;lt;Data&amp;gt; [CLIENT: 0000::0000:0000:0000:000$0]&amp;lt;/Data&amp;gt;
    &amp;lt;Binary&amp;gt;184800000E000000090000004400430045002D0043004D00300032000000070000006D00610073007400650072000000&amp;lt;/Binary&amp;gt;
  &amp;lt;/EventData&amp;gt;
&amp;lt;/Event&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;Log Name:      Application
Source:        SMS Server
Date:          12/12/2019 11:59:34
Event ID:      7002
Task Category: SMS_WSUS_CONTROL_MANAGER
Level:         Error
Keywords:      Classic
User:          N/A
Computer:      SERVER.DOMAIN.com
Description:
On 12/12/2019 11:59:34, component SMS_WSUS_CONTROL_MANAGER on computer SERVER.DOMAIN.com reported:  Failures were reported on WSUS Server &amp;quot;SERVER.DOMAIN.com&amp;quot; while trying to make WSUS database connection with SQL Server Exception error code -2146232060.

Possible cause: SQL Server service is not running or cannot be accessed.
Solution: Verify that the SQL Server and SQL Server Agent services are running and can be contacted.
Event Xml:
&amp;lt;Event xmlns=&amp;quot;http://schemas.microsoft.com/win/2004/08/events/event&amp;quot;&amp;gt;
  &amp;lt;System&amp;gt;
    &amp;lt;Provider Name=&amp;quot;SMS Server&amp;quot; /&amp;gt;
    &amp;lt;EventID Qualifiers=&amp;quot;49152&amp;quot;&amp;gt;7002&amp;lt;/EventID&amp;gt;
    &amp;lt;Level&amp;gt;2&amp;lt;/Level&amp;gt;
    &amp;lt;Task&amp;gt;78&amp;lt;/Task&amp;gt;
    &amp;lt;Keywords&amp;gt;0x80000000000000&amp;lt;/Keywords&amp;gt;
    &amp;lt;TimeCreated SystemTime=&amp;quot;2019-12-12T11:59:34.450122600Z&amp;quot; /&amp;gt;
    &amp;lt;EventRecordID&amp;gt;10165&amp;lt;/EventRecordID&amp;gt;
    &amp;lt;Channel&amp;gt;Application&amp;lt;/Channel&amp;gt;
    &amp;lt;Computer&amp;gt;SERVER.DOMAIN.com&amp;lt;/Computer&amp;gt;
    &amp;lt;Security /&amp;gt;
  &amp;lt;/System&amp;gt;
  &amp;lt;EventData&amp;gt;
    &amp;lt;Data&amp;gt;SERVER.DOMAIN.com&amp;lt;/Data&amp;gt;
    &amp;lt;Data&amp;gt;-2146232060&amp;lt;/Data&amp;gt;
    &amp;lt;Data&amp;gt;On 12/12/2019 11:59:34, component SMS_WSUS_CONTROL_MANAGER on computer SERVER.DOMAIN.com reported:  &amp;lt;/Data&amp;gt;
  &amp;lt;/EventData&amp;gt;
&amp;lt;/Event&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;solution&#34;&gt;Solution&lt;/h2&gt;
&lt;p&gt;I checked out SQL permissions on the instance and on the SUSDB database and it appeared the local group &amp;ldquo;SERVER\WSUS Administrators&amp;rdquo; (which contains NT AUTHORITY\SYSTEM) is present with necessary permissions (at least when comparing with another SUP/WSUS server).&lt;/p&gt;
&lt;p&gt;On the instance&amp;rsquo;s security logins ( Databases &amp;gt; Security &amp;gt; Logins), I saw NT AUTHORITY\SYSTEM was listed. Out of curiosity, I gave it a mapping to the SUSDB and restarting the SMS_WSUS_CONTROL_MANAGER proved to be successful.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open SQL Server Management Studio&lt;/li&gt;
&lt;li&gt;Connect to the SQL instance&lt;/li&gt;
&lt;li&gt;Expand Databases, Security and then Logins&lt;/li&gt;
&lt;li&gt;Right click on NT AUTHORITY\SYSTEM and choose Properties&lt;/li&gt;
&lt;li&gt;Under User Mappings, select the SUSDB database from the central pane and delegate the &amp;ldquo;public&amp;rdquo; and &amp;ldquo;webService&amp;rdquo; role membership.&lt;/li&gt;
&lt;li&gt;From the ConfigMgr console, open the &lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/configmgr/core/servers/deploy/configure/site-components#BKMK_ServiceMgr&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Configuration Manager Service Manager&lt;/a&gt; and cycle the SUP&amp;rsquo;s SMS_WSUS_CONTROL_MANAGER.&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>ConfigMgr Management Point 500.19 CcmMessaging.log 0x87d00231</title>
        <link>https://adamcook.io/p/configmgr-management-point-500.19-ccmmessaging.log-0x87d00231/</link>
        <pubDate>Mon, 22 Jul 2019 00:00:00 +0100</pubDate>
        
        <guid>https://adamcook.io/p/configmgr-management-point-500.19-ccmmessaging.log-0x87d00231/</guid>
        <description>&lt;img src="https://adamcook.io/p/configmgr-management-point-500.19-ccmmessaging.log-0x87d00231/images/cover.jpg" alt="Featured image of post ConfigMgr Management Point 500.19 CcmMessaging.log 0x87d00231" /&gt;&lt;p&gt;My lab recently started playing up when I noticed clients weren&amp;rsquo;t receiving any new policies.&lt;/p&gt;
&lt;p&gt;TDLR (it&amp;rsquo;s not even that long!): a while ago I moved my SUP/WSUS off host from the site server that also hosted a MP. As a result it seemed to have triggered this known issue: &lt;a class=&#34;link&#34; href=&#34;https://support.microsoft.com/en-gb/help/4468361/management-points-stop-responding-to-http-requests-with-error-500-19&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Management points stop responding to HTTP requests with error 500.19&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;First port of call was &lt;code&gt;CcmMessaging.log&lt;/code&gt; to see it was at least talking to MP OK, and it wasn&amp;rsquo;t:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Successfully queued event on HTTP/HTTPS failure for server &#39;SCCM.acc.local&#39;.
Post to http://SCCM.acc.local/ccm_system_windowsauth/request failed with 0x87d00231.
[CCMHTTP] ERROR: URL=http://SCCM.acc.local/ccm_system/request, Port=80, Options=224, Code=0, Text=CCM_E_BAD_HTTP_STATUS_CODE
[CCMHTTP] ERROR INFO: StatusCode=500 StatusText=Internal Server Error
Raising event: instance of CCM_CcmHttp_Status {ClientID = &amp;quot;GUID:A5FB49C2-955B-43EC-AE78-2BBB289FFD0F&amp;quot;;DateTime = &amp;quot;20190722130543.131000+000&amp;quot;;HostName = &amp;quot;SCCM.acc.local&amp;quot;;HRESULT = &amp;quot;0x87d0027e&amp;quot;;ProcessID = 4496;StatusCode = 500;ThreadID = 1340; };
Successfully queued event on HTTP/HTTPS failure for server &#39;SCCM.acc.local&#39;.
Post to http://SCCM.acc.local/ccm_system/request failed with 0x87d00231.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Poking around server-side in the MP logs gave me a bit of a red herring with this in &lt;code&gt;MP_Status.log&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CMPDBConnection::Init(): IDBInitialize::Initialize() failed with 0x80004005	
=======================================	
MPDB ERROR - CONNECTION PARAMETERS
SQL Server Name     : SCCM.acc.local\SCCM_LOCALHOST
SQL Database Name   : CM_ACC
Integrated Auth     : True
MPDB ERROR - EXTENDED INFORMATION
MPDB Method         : Init()
MPDB Method HRESULT : 0x80004005
Error Description   : Login timeout expired
OLEDB IID           : {0C733A8B-2A1C-11CE-ADE5-00AA0044773D}
ProgID              : Microsoft SQL Server Native Client 11.0
MPDB ERROR - INFORMATION FROM DRIVER
null	
=======================================
Certificate for client GUID:D125CE68-1CAD-4AED-9759-5ECF3842932C is revoked	
Mp Status: Failed ProcessKnownProperties, error 80004005	
MP Status: processing failed for 1 event(s)	
MP StatusForwarder (the event processor) reported an error 80004005
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Opening up in the browser on the server hosting the MP gave me a 500.19 status code when testing MP connectivity with &lt;code&gt;http://&amp;lt;ServerName.FQND&amp;gt;/sms_mp/.sms_aut?mplist&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-management-point-500.19-ccmmessaging.log-0x87d00231/images/configmgr-management-point-500-19-ccmmessaging-log-0x87d00231-01.jpg&#34; data-size=&#34;918x645&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-management-point-500.19-ccmmessaging.log-0x87d00231/images/_hua70a28880ab277bb9ce3b50854d771d4_180749_27adda0cd6e900e3878fb74789d570f5.jpg 480w, https://adamcook.io/p/configmgr-management-point-500.19-ccmmessaging.log-0x87d00231/images/_hua70a28880ab277bb9ce3b50854d771d4_180749_5fed7adc4bb3b71ad7d397d51e7e9ced.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-management-point-500.19-ccmmessaging.log-0x87d00231/images/configmgr-management-point-500-19-ccmmessaging-log-0x87d00231-01.jpg&#34; width=&#34;918&#34; height=&#34;645&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Another place to find more information of HTTP status codes for web requests is the web server&amp;rsquo;s logs! You can find where your MP&amp;rsquo;s logs are stored by:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Opening &lt;code&gt;Internet Information Services (IIS) Manager&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Expand &lt;code&gt;Sites&lt;/code&gt; node&lt;/li&gt;
&lt;li&gt;Expand &lt;code&gt;Default Web Site&lt;/code&gt; node&lt;/li&gt;
&lt;li&gt;Select &lt;code&gt;SMS\_MP&lt;/code&gt; node&lt;/li&gt;
&lt;li&gt;Double click logging and observe the value in the &lt;code&gt;Directory&lt;/code&gt; field&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-management-point-500.19-ccmmessaging.log-0x87d00231/images/configmgr-management-point-500-19-ccmmessaging-log-0x87d00231-02.jpg&#34; data-size=&#34;1280x689&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-management-point-500.19-ccmmessaging.log-0x87d00231/images/_hu7b3dfc494206edd92c079b117760c234_204617_96a85e6aee5265233994a0499aa6a5de.jpg 480w, https://adamcook.io/p/configmgr-management-point-500.19-ccmmessaging.log-0x87d00231/images/_hu7b3dfc494206edd92c079b117760c234_204617_6552e023d2e4aac631c72cbdb728b8b7.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-management-point-500.19-ccmmessaging.log-0x87d00231/images/configmgr-management-point-500-19-ccmmessaging-log-0x87d00231-02.jpg&#34; width=&#34;1280&#34; height=&#34;689&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Log snippet:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
2019-07-22 13:11:58 192.168.175.11 CCM_POST /ccm_system_windowsauth/request - 80 - 192.168.175.16 ccmhttp - 401 2 5 1357 189
2019-07-22 13:12:32 192.168.175.11 PROPFIND /CCM_Client - 80 - 192.168.175.16 ccmsetup - 500 19 126 1357 21
2019-07-22 13:12:32 192.168.175.11 PROPFIND /CCM_Client - 80 - 192.168.175.16 ccmsetup - 500 19 126 1357 53
...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Some slightly reworded Googling thankfully landed me here: &lt;a class=&#34;link&#34; href=&#34;https://support.microsoft.com/en-gb/help/4468361/management-points-stop-responding-to-http-requests-with-error-500-19&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Management points stop responding to HTTP requests with error 500.19&lt;/a&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Locate¬† &lt;code&gt;%windir%\system32\inetsrv\config&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Open the &lt;code&gt;applicationHost.config&lt;/code&gt; file in Notepad.&lt;/li&gt;
&lt;li&gt;Look for an entry that resembles the following:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;scheme name=&amp;quot;xpress&amp;quot; doStaticCompression=&amp;quot;false&amp;quot; doDynamicCompression=&amp;quot;true&amp;quot; dll=&amp;quot;C:\Windows\system32\inetsrv\suscomp.dll&amp;quot; staticCompressionLevel=&amp;quot;10&amp;quot; dynamicCompressionLevel=&amp;quot;0&amp;quot; /&amp;gt;`
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;Remove the XPress compression schema by running the following command from¬†an elevated command prompt:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;%windir%\system32\inetsrv\appcmd.exe set config -section:system.webServer/httpCompression /-[name=&#39;xpress&#39;]
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;Verify that the compression schema is removed from the &lt;strong&gt;applicationHost.config&lt;/strong&gt; file, and then save the file.&lt;/li&gt;
&lt;li&gt;Run the following command from¬†an elevated command prompt:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;iisreset
&lt;/code&gt;&lt;/pre&gt;</description>
        </item>
        <item>
        <title>Get CMUnusedSources</title>
        <link>https://adamcook.io/p/get-cmunusedsources/</link>
        <pubDate>Sun, 07 Jul 2019 00:00:00 +0100</pubDate>
        
        <guid>https://adamcook.io/p/get-cmunusedsources/</guid>
        <description>&lt;p&gt;I recently wrote a PowerShell script that reports on what folders are used or unused by System Center Configuration Manager.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/codaamok/Get-CMUnusedSources&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;You can find it here on GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I demoed the script at the &lt;a class=&#34;link&#34; href=&#34;https://wmug.co.uk/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;London Windows Manager User Group&lt;/a&gt;, you can watch the recording below on YouTube.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe loading=&#34;lazy&#34; src=&#34;https://www.youtube.com/embed/YGwQIUhYJsY&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Among a bunch of technical topics, I also learned a huge amount of valuable soft/personal things too.&lt;/p&gt;
&lt;h2 id=&#34;enough-is-enough&#34;&gt;Enough is enough&lt;/h2&gt;
&lt;p&gt;I started writing in February and since then I have refactored the script and the idea itself many times. It&amp;rsquo;s now start of July and my girlfriend and I want to do fun summer things.&lt;/p&gt;
&lt;p&gt;I first &amp;ldquo;finished&amp;rdquo; it in April but it was only good if you stored your content sources on a local file system to a site server. I realised that a lot of admins store their sources on a remote file server. I tried to &amp;ldquo;drop in&amp;rdquo; accommodations for that but quickly accepted that I was creating fragile flows and hard to read solutions. This is one of the few times I did a &amp;ldquo;sod it, let&amp;rsquo;s start again&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Around end of May I had a working script that worked with local and remote storage but it was slow. Because it iterates over all gathered folders, and for each folder, iterates over all ConfigMgr content objects, this meant in an environment with 10k content objects and 70k folders it took over 10 hours. I did my best to create efficiencies, such as to skip sub folders of folders already marked as &amp;ldquo;Not used&amp;rdquo; but 10 hours really wasn&amp;rsquo;t good.&lt;/p&gt;
&lt;p&gt;I was almost at a cross roads because I thought performance shouldn&amp;rsquo;t matter too much because this would be something that you would run once in a blue moon. Then I had that fear of posting online and being bombarded with &amp;ldquo;you should have done x instead of y&amp;rdquo;. I&amp;rsquo;m still at risk of that now (which I welcome by the way, especially for something I&amp;rsquo;m not aware of). It was that thought which pushed me to strive for better because I knew I could improve, and the improvement would be significant enough.&lt;/p&gt;
&lt;p&gt;Then I discovered runspaces! Sure, I could have used jobs or set a dependency to use the PoshRSJobs module, but I just wanted to learn runspaces, how to use them and not have a dependency on another module. So of course doing that added more time and testing. It was worth it though.&lt;/p&gt;
&lt;p&gt;Throughout the entire time I kept tricking myself in to thinking &amp;ldquo;I&amp;rsquo;m almost done&amp;rdquo;, &amp;ldquo;it&amp;rsquo;ll be done next week&amp;rdquo;, &amp;ldquo;it&amp;rsquo;s pretty much there&amp;rdquo;. Constant ideas and learning new techniques for readability / performance was another time killer.&lt;/p&gt;
&lt;p&gt;I once read that managers hate dealing with sysadmins because when tasked to create something they don&amp;rsquo;t lay the foundations first and get too hung up on the features. I sometimes saw myself as that guy.&lt;/p&gt;
&lt;p&gt;With that said, I also felt like I had a short fuse with it and had a &lt;em&gt;just want to get it done&lt;/em&gt; mindset. While working on this I started reading (and still yet to finish) &lt;a class=&#34;link&#34; href=&#34;https://www.goodreads.com/book/show/629.Zen_and_the_Art_of_Motorcycle_Maintenance&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Zen and the Art of Motorcycle Maintenance&lt;/a&gt;. In the early chapters there was emphasis on people rushing their day-to-day and the work they do. I related to this and was guilty of that at times with this script. So then I decided if I&amp;rsquo;m not taking my time to do it carefully then there&amp;rsquo;s no point doing it at all.&lt;/p&gt;
&lt;p&gt;At this point, summer had started, and for me that means cricket season was on and while working during the week, that meant every Saturday was spent all day playing cricket. I just wanted to spend every free hour I had finishing this but conscious of not wanting to rush it.&lt;/p&gt;
&lt;p&gt;I had to draw a line in the sand and make my primary goal to finish it with what I had. I wanted to spend time with my girlfriend, finish that book, learn something else, fix that broken window motor on my car I&amp;rsquo;ve had for over a year, play a few nights of CS:GO.&lt;/p&gt;
&lt;p&gt;I really enjoyed the brain teasers though. I would be drawing what the flow of some loops looked like in my head while in the shower or driving. Realistically, I know I&amp;rsquo;m never finished. No doubt if someone found an issue with it I&amp;rsquo;ll be curious and want to fix it.&lt;/p&gt;
&lt;p&gt;I think next time I have some idea that I think will consume any amount of time, I should first spend time thinking about what the end product looks like. Then I should be able to know at what point I would want to bring the idea/project to a close.&lt;/p&gt;
&lt;h2 id=&#34;asking-for-help&#34;&gt;Asking for help&lt;/h2&gt;
&lt;p&gt;A buddy &lt;a class=&#34;link&#34; href=&#34;http://www.christopherkibble.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Chris Kibble&lt;/a&gt; shared with me &lt;a class=&#34;link&#34; href=&#34;http://www.catb.org/~esr/faqs/smart-questions.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;How to ask questions the smart way&lt;/a&gt;. Looks like this is a link from the &lt;a class=&#34;link&#34; href=&#34;http://xyproblem.info/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;The XY Problem&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;These two resources are huge and you may not yet appreciate why. I&amp;rsquo;ve been on the Internet for as long as I can remember and have been posting stupid questions for most of my life.&lt;/p&gt;
&lt;p&gt;When I became mindful of the XY problem and how to ask for help from people who are insanely good, I became much more effective. A part of asking for help is about first having a bloody good stab at it yourself. This often pushed me to not necessarily find the answers but to help me think more inquisitively. I found as a result of asking myself more questions, it enabled me to understand problems better and sometimes find the answer.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m in the &lt;a class=&#34;link&#34; href=&#34;https://winadmins.io&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Windows Admins&lt;/a&gt; Discord and some people in there are not only clever but incredibly helpful. Just to say thanks to people who helped me:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cody Mathis (&lt;a class=&#34;link&#34; href=&#34;https://github.com/codymathis123&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;@codymathis123&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Chris Kibble (&lt;a class=&#34;link&#34; href=&#34;https://github.com/ChrisKibble&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;@ChrisKibble&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Chris Dent (&lt;a class=&#34;link&#34; href=&#34;https://github.com/idented-automation&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;@idented-automation&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Kevin Crouch (&lt;a class=&#34;link&#34; href=&#34;httos://github.com/PsychoData&#34; &gt;@PsychoData&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Patrick (the guy who wrote &lt;a class=&#34;link&#34; href=&#34;https://github.com/pseymour/MakeMeAdmin/wiki&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;MakeMeAdmin&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;powershell&#34;&gt;PowerShell&lt;/h2&gt;
&lt;p&gt;So I wrote a PowerShell script and I learnt some PowerShell. Of course. Well here&amp;rsquo;s what I learnt.&lt;/p&gt;
&lt;h2 id=&#34;debugger&#34;&gt;Debugger&lt;/h2&gt;
&lt;p&gt;VSCode is my go-to editor. One of the many reasons why I like it, is because of the debugger with the integrated console. Once I read &lt;a class=&#34;link&#34; href=&#34;https://foxdeploy.com/2019/02/07/life-after-write-debug/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Life after Write-Debug&lt;/a&gt; by Stephen Owen I became much more efficient at troubleshooting my dodgy code.&lt;/p&gt;
&lt;p&gt;My first manager as an IT professional told me what the &lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/Rubber_duck_debugging&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;rubber duck debugging technique was&lt;/a&gt;. So when you discover something like debugging for PowerShell in ISE or VSCode, it&amp;rsquo;s a huge sense of relief. The days of intensely reading line by line or including a bunch of print / Write-Host commands are long gone.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://community.idera.com/database-tools/powershell/powertips/b/tips/posts/debugging-other-powershell-processes&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;You can also debug other running PowerShell processes!!&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;standards-and-formatting&#34;&gt;Standards and formatting&lt;/h2&gt;
&lt;p&gt;For quick scripts with limited audience, I make some effort to format and make it at least somewhat presentable for next the guy. However taking on something fairly big that might be used and read by the Internet, I appreciated the need for not necessarily pretty looking code because that&amp;rsquo;s always subjective but at least adopt a standard.&lt;/p&gt;
&lt;p&gt;Again, kind of tapping in to that fear of posting online and being scrutinized.&lt;/p&gt;
&lt;h2 id=&#34;net&#34;&gt;.NET&lt;/h2&gt;
&lt;p&gt;I had always known you could do .NET stuff within PowerShell and whenever I saw it in conversation it was always in the context of scale or performance. I figured with what I was trying to achieve, this would fall under the scale category. I&amp;rsquo;ve seen environments with tens of thousands of ConfigMgr content objects and hundreds of thousands of folders.&lt;/p&gt;
&lt;p&gt;There&amp;rsquo;s a need here as well to determine when to draw the line. You could spend a long time looking up .NET classes and methods when you could save yourself a lot of time just using PowerShell cmdlets. Sure, there&amp;rsquo;s a performance gain, but as a sysadmin I think readability and time is more valuable. So I won&amp;rsquo;t make a habit of using them at every opportunity, purely because I&amp;rsquo;m not fluent enough. Being mindful of them and how or when to use them is good enough.&lt;/p&gt;
&lt;h2 id=&#34;enumeratedirectories&#34;&gt;EnumerateDirectories()&lt;/h2&gt;
&lt;p&gt;On the topic of .NET, I did really want to use the &lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/dotnet/api/system.io.directory.enumeratedirectories&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;EnumerateDirectories method from the Directory class&lt;/a&gt;. But it falls short where you can&amp;rsquo;t control its on-error preference. No matter what, on error, it&amp;rsquo;s a terminating error. Which sucked because it sounded perfect for what I wanted and crazy fast too.&lt;/p&gt;
&lt;p&gt;In situations where it encountered a folder with access denied, it wouldn&amp;rsquo;t continue.&lt;/p&gt;
&lt;h2 id=&#34;runspaces&#34;&gt;Runspaces&lt;/h2&gt;
&lt;p&gt;As I mentioned already I wanted concurrent processing so I had several options already available like jobs or the PoSHRSJobs module that gives you runspaces but with the familiar syntax as jobs. I opted to use runspaces and spend extra time learning more about how they work for two reasons mainly:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To use something and make a good effort at actually trying to understand it.&lt;/li&gt;
&lt;li&gt;Not set too many dependencies on modules. I had a train of thought that not all ConfigMgr admins are full time admins, no doubt they juggle other stuff too. What if they really wanted to just clean up their storage but wasn&amp;rsquo;t 100% sure how to install a third party module just to get the basics working?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;collections-the--operator&#34;&gt;Collections the += operator&lt;/h2&gt;
&lt;p&gt;I saw &lt;a class=&#34;link&#34; href=&#34;https://twitter.com/AndySvints/status/1130135528815439874&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;this thread on Twitter&lt;/a&gt; and my mind was blown how much quicker it was to not use the += operator when adding new elements to an array.&lt;/p&gt;
&lt;h2 id=&#34;join-path&#34;&gt;Join-Path&lt;/h2&gt;
&lt;p&gt;I guess I saw some quirks of PowerShell along the way but the biggest for me that sticks out in memory was Join-Path. Check out this madness:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;PS C:\&amp;gt; Test-Path &amp;quot;\\fakeserver\fakeshare\fakefolder&amp;quot;
False
PS C:\&amp;gt; Join-Path -Path &amp;quot;\\fakeserver&amp;quot; -ChildPath &amp;quot;fakeshare&amp;quot; | Join-Path -ChildPath &amp;quot;fakefolder&amp;quot;
\\fakeserver\fakeshare\fakefolder
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Join-Path copes well with paths that don&amp;rsquo;t exist. Awesome.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;PS C:\&amp;gt; Test-Path &amp;quot;K:\I\Do\Not\Have\K\Drive\Mapped&amp;quot;
False
PS C:\&amp;gt; Join-Path -Path &amp;quot;K:\&amp;quot; -ChildPath &amp;quot;I\Do\Not\Have\K\Drive\Mapped&amp;quot;
Join-Path : Cannot find drive. A drive with the name &#39;K&#39; does not exist.
At line:1 char:1
+ Join-Path -Path &amp;quot;K:\&amp;quot; -ChildPath &amp;quot;I\Do\Not\Have\K\Drive\Mapped&amp;quot;
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (K:String) [Join-Path], DriveNotFoundException
    + FullyQualifiedErrorId : DriveNotFound,Microsoft.PowerShell.Commands.JoinPathCommand
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;hellip;unless it&amp;rsquo;s a local path on a drive letter that doesn&amp;rsquo;t exist. Worth remembering. You can&amp;rsquo;t really say Join-Path validates path as it joins them, because it doesn&amp;rsquo;t, nor can you say its sole purpose is to verify just &amp;ldquo;syntax&amp;rdquo; or &amp;ldquo;validity&amp;rdquo; of path structure, because it isn&amp;rsquo;t.&lt;/p&gt;
&lt;p&gt;Looks like there&amp;rsquo;s &lt;a class=&#34;link&#34; href=&#34;https://github.com/PowerShell/PowerShell/issues/4386&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;an open issue on this&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;regex&#34;&gt;Regex&lt;/h2&gt;
&lt;p&gt;Early doors I was trying to grab the server, share and remainder share from a string: &lt;code&gt;\\server\share\folder\folder&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://twitter.com/CodyMathis123&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Cody Mathis&lt;/a&gt; threw me a little snippet of regex and from then on my eyes were opened. I&amp;rsquo;m even thinking of going back to a previous project &lt;a class=&#34;link&#34; href=&#34;https://github.com/codaamok/PoSHHyperCloud&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PoSH Hyper Cloud&lt;/a&gt; to use more regex and maybe even jobs! &lt;a class=&#34;link&#34; href=&#34;http://regex101.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;regex101.com&lt;/a&gt; is my go to for testing expressions.&lt;/p&gt;
&lt;h2 id=&#34;enumerations&#34;&gt;Enumerations&lt;/h2&gt;
&lt;p&gt;Patrick Seymour recently wrote Test-FileSystemAccess and I enhanced it a little to return exit codes and determine if elevation is required. Some feedback by Chris Dent taught me about enums! They&amp;rsquo;re awesome. An excellent way to create a relationship between numbers and strings. I used the below resources to implement an enum in to Test-FileSystemAccess:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.pauby.com/post/working-with-enums-in-powershell&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Working with enums in PowerShell&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.pauby.com/post/creating-enums-in-powershell/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Creating enums in PowerShell&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tip! If you want to get the full Parameter Type of a parameter that&amp;rsquo;s an enum, so you can use GetNames:: on it, the below will help:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;(Get-Command Set-ExecutionPolicy).Parameters[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ExecutionPolicy&amp;#39;&lt;/span&gt;] | Select -ExpandProperty ParameterType
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;datatables-and-filtering&#34;&gt;DataTables and filtering&lt;/h2&gt;
&lt;p&gt;I recently tackled an issue with the script where collections of large scale and filtering them was an issue. Chris Kibble once showed me DataTables and I remember a remark about them being quick. He wasn&amp;rsquo;t joking! Checkout the below!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;$winFiles = Get-ChildItem c:\windows -Recurse -ErrorAction SilentlyContinue

$commands = @{
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Where-Object&amp;#39;&lt;/span&gt; = {
        $exeFiles = $winFiles | Where-Object { $_.Extension &lt;span style=&#34;color:#f92672&#34;&gt;-eq&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.exe&amp;#34;&lt;/span&gt; }
    }
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Where-Object (no script block)&amp;#39;&lt;/span&gt; = {
        $exeFiles = $winFiles | Where-Object Extension &lt;span style=&#34;color:#f92672&#34;&gt;-eq&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.exe&amp;#34;&lt;/span&gt;
    }
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.Where&amp;#39;&lt;/span&gt; = {
        $exeFiles = $winFiles.Where{ $_.Extension &lt;span style=&#34;color:#f92672&#34;&gt;-eq&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.exe&amp;#34;&lt;/span&gt; }
    }
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;DataTable&amp;#39;&lt;/span&gt; = {
        $fileTable = New-Object System.Data.DataTable
        $fileTable.TableName = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AllMuhFiles&amp;#34;&lt;/span&gt;

        &lt;span style=&#34;color:#66d9ef&#34;&gt;[void]&lt;/span&gt;$fileTable.Columns.Add(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;FileName&amp;#34;&lt;/span&gt;)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;[void]&lt;/span&gt;$fileTable.Columns.Add(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Parent&amp;#34;&lt;/span&gt;)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;[void]&lt;/span&gt;$fileTable.Columns.Add(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Extension&amp;#34;&lt;/span&gt;)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;[void]&lt;/span&gt;$fileTable.Columns.Add(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;IsInf&amp;#34;&lt;/span&gt;)

        &lt;span style=&#34;color:#66d9ef&#34;&gt;ForEach&lt;/span&gt;($file &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; $winFiles) {
            &lt;span style=&#34;color:#66d9ef&#34;&gt;[void]&lt;/span&gt;$fileTable.Rows.Add($file.Name, $file.Parent, $file.Extension)
        }

        $exeFiles = $fileTable.Select(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Extension like &amp;#39;.exe&amp;#39;&amp;#34;&lt;/span&gt;)
    }
    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;foreach&amp;#39;&lt;/span&gt; = {
        $exefiles = &lt;span style=&#34;color:#66d9ef&#34;&gt;foreach&lt;/span&gt; ($file &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; $winFiles) {
            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ($file.Extension &lt;span style=&#34;color:#f92672&#34;&gt;-eq&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.exe&amp;#39;&lt;/span&gt;) {
                $file
            }
        }
    }
}

$commands.Keys | ForEach-Object {
    $testName = $_
    1..3 | ForEach-Object {
        &lt;span style=&#34;color:#66d9ef&#34;&gt;[PSCustomObject]&lt;/span&gt;@{
            TestName  = $testName
            Attempt   = $_
            ElapsedMS = (Measure-Command -Expression $commands[$testName]).TotalMilliseconds
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Results:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Testing Where-Object
2849.362
2926.2761
2876.9806

Testing .Where
1045.712
1037.4888
1031.191

Testing DataTable select
280.6466
272.8503
272.5341
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I started looking in to DataTables because on large collections (hundreds of thousands sort of size) &lt;code&gt;Where-Object&lt;/code&gt; was slow. While the &lt;code&gt;Where()&lt;/code&gt; method was faster, both were nothing compared to DataTables.&lt;/p&gt;
&lt;p&gt;With that said, if a cmdlet has a -Filter parameter available to let you work directly with a provider, then use that. &amp;ldquo;Keep left&amp;rdquo; or &amp;ldquo;filter left, format right&amp;rdquo; are phrases I learnt and try to keep in mind when filtering.&lt;/p&gt;
&lt;p&gt;I abandoned the use of DataTables in the end as I didn&amp;rsquo;t need it. Even though they need additional set up, as you can see from the previous snippet, the results might be worth it in some cases.&lt;/p&gt;
&lt;p&gt;Resources I used to learn about filtering and the performance impact&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://4sysops.com/archives/where-object-vs-the-where-method-array-filtering-in-powershell/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Explains where-object and where, and the -filter for provider specific stuff&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://stackoverflow.com/questions/50956909/powershell-where-object-vs-where-method&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Explains the object type returned by where-object and where&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.jonathanmedd.net/2017/05/powershell-where-where-or-where.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Talks about &amp;ldquo;keeping left&amp;rdquo; for best performance. -Filter is king if available but only if you don&amp;rsquo;t want all the objects in an array for later consumption&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>ConfigMgr SQL Server Upgrade From 2012 SP4 to 2017 CU13</title>
        <link>https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/</link>
        <pubDate>Wed, 20 Mar 2019 00:00:00 +0100</pubDate>
        
        <guid>https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/</guid>
        <description>&lt;img src="https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/cover.jpg" alt="Featured image of post ConfigMgr SQL Server Upgrade From 2012 SP4 to 2017 CU13" /&gt;&lt;p&gt;Currently my lab&amp;rsquo;s primary site is running on 2012 R2. I recently wanted to try LEDBAT so I could sell it to a customer but it needed to be on 2016 or newer. I could have configured a 2016 &amp;ldquo;source DP&amp;rdquo; using pull distribution points and still get the experience, but then I was curious if IPU while ConfigMgr is installed was possible, &lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/sccm/core/servers/manage/upgrade-on-premises-infrastructure&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;turns out it is&lt;/a&gt;. Then I discovered I had SQL 2012 SP2 installed! So I bumped it to SP4. Then I thought, why not go to 2017?&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve applied service packs to SQL for ConfigMgr before but never a major release upgrade. Turns out, it&amp;rsquo;s straight forward!&lt;/p&gt;
&lt;p&gt;These are the resources I found useful and guided me:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/sql/sql-server/install/hardware-and-software-requirements-for-installing-sql-server?view=sql-server-2017&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hardware and Software Requirements for Installing SQL Server&lt;/a&gt; - Microsoft&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/sql/database-engine/install-windows/supported-version-and-edition-upgrades?view=sql-server-2017%ef%bb%bf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Supported Version and Edition Upgrades&lt;/a&gt; - Microsoft&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/sccm/core/plan-design/configs/support-for-sql-server-versions&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Supported SQL Server versions for Configuration Manager&lt;/a&gt; - Microsoft&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/sccm/core/servers/manage/configuring-reporting&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Configuring reporting in System Center Configuration Manager&lt;/a&gt; - Microsoft&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://sccmentor.com/2016/10/03/upgrading-your-sccm-site-database/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Upgrading your SCCM site database&lt;/a&gt; - Paul Winstanley&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.prajwaldesai.com/sccm-1606-upgrade-sql-server-2014-sql-server-2016/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SCCM 1606 Upgrade SQL Server 2014 To SQL Server 2016&lt;/a&gt; -Prajwal Desai&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://sccm-zone.com/patching-mssql-with-sccm-fee8583eb6b6&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Patching SQL Server with SCCM&lt;/a&gt; - Octavian Cordos&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.anoopcnair.com/complete-guide-sccm-server-migration-part-1-sql-2017/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;The Complete Guide for SCCM Server Migration Part 1 ‚Äì SQL 2017&lt;/a&gt; - Rajul OS&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;We&amp;rsquo;ll migrate custom reports, remove the Report Services Point role, install SSRS 2017, upgrade to SQL Server 2017, reinstall the Report Services Point role, and finally talk about anti-virus exclusions and new CE levels for your ConfigMgr db.&lt;/p&gt;
&lt;p&gt;Please don&amp;rsquo;t hate my SQL instance name. I started the environment off trying out a ConfigMgr database move so at the time I wanted the instance name to be distinctively different!&lt;/p&gt;
&lt;h2 id=&#34;sql-server-reporting-services-upgrade&#34;&gt;SQL Server Reporting Services Upgrade&lt;/h2&gt;
&lt;p&gt;SSRS is now a separate installer and the installation of SQL Server 2017 will remove any bundled SSRS components you have installed.&lt;/p&gt;
&lt;p&gt;So, how do we handle our current reports and ReportServer database?&lt;/p&gt;
&lt;h3 id=&#34;report-migration&#34;&gt;Report migration&lt;/h3&gt;
&lt;p&gt;If you google &amp;ldquo;sql reporting services migration&amp;rdquo; you&amp;rsquo;ll quickly learn many people have had a stab at this. Below are a few I&amp;rsquo;ve put together, though honestly, if you have a handful, just export the .rdl files manually and be done with it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.sqlshack.com/migrating-ssrs-content-powershell/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Craig Porteous&lt;/a&gt; has a great write up talking about various ways to tackle this, strongly encourage you to read the post. Be sure to check out his method of tackling the problem using mostly PowerShell and the &lt;a class=&#34;link&#34; href=&#34;https://dbatools.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;dbatools&lt;/a&gt; module.&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.microsoft.com/en-gb/download/details.aspx?id=29560&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Reporting Services Migration Tool&lt;/a&gt; which is Microsoft&amp;rsquo;s own attempt at being a solution, made back in 2012 and not been touched since. As Craig mentions in his post, it&amp;rsquo;s written in PoSH and by default the target instance must be a SharePoint integrated instance - apparently easily modifiable to point to a regular SQL instance.&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/sql/reporting-services/tools/sample-reporting-services-rs-exe-script-to-copy-content-between-report-servers?view=sql-server-2017&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;RS.exe ssrs_migration.rss script&lt;/a&gt; is another Microsoft attempt, which looks like a more recent attempt.&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://code.google.com/archive/p/reportsync/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ReportSync&lt;/a&gt; which is an open source tool under MIT license, seemingly popular however it&amp;rsquo;s old and unloved&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.systemcenterdudes.com/sccm-reports-manager-tool/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SCCM Report Manager Tool&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;reporting-service-point-role&#34;&gt;Reporting Service Point role&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;After you upgrade SQL Server, and SQL Server Reporting Services that is used as the data source for a reporting services point, you might experience errors when you run or edit reports from the Configuration Manager console. For reporting to work properly from the Configuration Manager console, you must remove the reporting services point site system role for the site and reinstall it. However, after the upgrade you can continue to run and edit reports successfully from an Internet browser.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/sccm/core/servers/manage/configuring-reporting#upgrading-sql-server&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Configuring Reporting - Upgrading SQL Server&lt;/a&gt; - Microsoft&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;With that in mind, you may as well remove the RSP role before you start. There&amp;rsquo;s no harm in doing this after the upgrade, you&amp;rsquo;ll just get a moaning RSP component in console is all because it can&amp;rsquo;t start the SSRS service tied to the RSP that the install for SQL Server 2017 removed.&lt;/p&gt;
&lt;p&gt;Checkout &lt;code&gt;srsrp.log&lt;/code&gt;, &lt;code&gt;srsrpMSI.log&lt;/code&gt;, &lt;code&gt;srsrpsetup.log&lt;/code&gt; and &lt;code&gt;sitecomp.log&lt;/code&gt; if there are any issues with this.&lt;/p&gt;
&lt;h3 id=&#34;installing-ssrs-2017&#34;&gt;Installing SSRS 2017&lt;/h3&gt;
&lt;p&gt;Once you&amp;rsquo;ve decided what you want to do with your custom reports and removed the Reporting Service Point role, we can start installing SSRS 2017. You&amp;rsquo;ll need your SQL Server product key, check out &lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/sql/reporting-services/install-windows/find-reporting-services-product-key-ssrs?view=sql-server-2017&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;How to find the product key for SQL Server 2017 Reporting Services&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-01.jpg&#34; data-size=&#34;695x600&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hue0d0859f42226fe1b546172ee954fac6_78838_0d5315b8d6f19eeab2507615b1bd88e1.jpg 480w, https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hue0d0859f42226fe1b546172ee954fac6_78838_83d81c94d25148850607967c89390781.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-01.jpg&#34; width=&#34;695&#34; height=&#34;600&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-02.jpg&#34; data-size=&#34;695x600&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hue0d0859f42226fe1b546172ee954fac6_53954_ad0ede09f5d51be7692b5a379dc89176.jpg 480w, https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hue0d0859f42226fe1b546172ee954fac6_53954_554ced12ea758ea30dca715db232fa12.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-02.jpg&#34; width=&#34;695&#34; height=&#34;600&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-03.jpg&#34; data-size=&#34;695x600&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hue0d0859f42226fe1b546172ee954fac6_116046_b1f56d4c824f8f05c4c7c9dd222c0555.jpg 480w, https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hue0d0859f42226fe1b546172ee954fac6_116046_4f252661c0709cc393243df3b9db65c6.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-03.jpg&#34; width=&#34;695&#34; height=&#34;600&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;
&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-04.jpg&#34; data-size=&#34;695x600&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hue0d0859f42226fe1b546172ee954fac6_70211_83e6fa8e9c1bd144c8185b6b59dd2304.jpg 480w, https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hue0d0859f42226fe1b546172ee954fac6_70211_7a4194441d3ffc45bdeb19deee545ef5.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-04.jpg&#34; width=&#34;695&#34; height=&#34;600&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-05.jpg&#34; data-size=&#34;695x600&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu254b537a3d8819baba45d97f12dbfd70_78405_16d312c6ed46f6b84a61f75539d510c3.jpg 480w, https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu254b537a3d8819baba45d97f12dbfd70_78405_b05830768cfa54c6bbd574d8f9475263.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-05.jpg&#34; width=&#34;695&#34; height=&#34;600&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-06.jpg&#34; data-size=&#34;695x600&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu254b537a3d8819baba45d97f12dbfd70_52235_97f9fccc1c11a793a835328631afe03f.jpg 480w, https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu254b537a3d8819baba45d97f12dbfd70_52235_df550125ae838fd49048fe89fe4228a6.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-06.jpg&#34; width=&#34;695&#34; height=&#34;600&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;After install for SSRS 2017 you&amp;rsquo;ll have the option in configuration to create a new database or choose an existing one. As your current SSRS instance still exists you must create a new database with a unique name and also create a web service point with a unique name too.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;‚ÑπÔ∏è &lt;strong&gt;Note:&lt;/strong&gt; After entering data in any section ensure you hit &lt;code&gt;Apply&lt;/code&gt; at the bottom.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-07.jpg&#34; data-size=&#34;970x835&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu0a8dec6e5856eaaa4d8b6f2718b857fd_164255_d1edf36faa1b9453c5818a7321b8f5e6.jpg 480w, https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu0a8dec6e5856eaaa4d8b6f2718b857fd_164255_9d23ef90ac359c419db6ee6dd0bdc469.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-07.jpg&#34; width=&#34;970&#34; height=&#34;835&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-08.jpg&#34; data-size=&#34;970x835&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu9fb30ddb1e97c0d54993ed73471dc2da_166900_8f3bd81ba61eafe07aa2476280c6413a.jpg 480w, https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu9fb30ddb1e97c0d54993ed73471dc2da_166900_4bc97f069e8444742ba8e3903120b7b1.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-08.jpg&#34; width=&#34;970&#34; height=&#34;835&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-09.jpg&#34; data-size=&#34;970x835&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu9fb30ddb1e97c0d54993ed73471dc2da_187799_1896fafe9a45eebb4ed517916b3e4fa5.jpg 480w, https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu9fb30ddb1e97c0d54993ed73471dc2da_187799_a9a41cd52e1adfcff3259049fc950796.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-09.jpg&#34; width=&#34;970&#34; height=&#34;835&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-10.jpg&#34; data-size=&#34;970x835&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu96b96c935e825b48f14cc68b85739df2_188813_97091227a8590672bfd56226ba62f676.jpg 480w, https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu96b96c935e825b48f14cc68b85739df2_188813_61c6dd1b2d4fc21023a4c1249359bb41.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-10.jpg&#34; width=&#34;970&#34; height=&#34;835&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-11.jpg&#34; data-size=&#34;970x835&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu96b96c935e825b48f14cc68b85739df2_196934_4a5d5b6883add083a3cb329aa02a19e9.jpg 480w, https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu96b96c935e825b48f14cc68b85739df2_196934_0b1d708d93bda7b47d9b0bb93a7069ee.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-11.jpg&#34; width=&#34;970&#34; height=&#34;835&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-12.jpg&#34; data-size=&#34;970x835&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu96b96c935e825b48f14cc68b85739df2_189364_5efae39afcb69050cca6c7963f2a4c39.jpg 480w, https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu96b96c935e825b48f14cc68b85739df2_189364_3fd46d678f60cad94025da9237c32f1c.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-12.jpg&#34; width=&#34;970&#34; height=&#34;835&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-13.jpg&#34; data-size=&#34;970x835&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu96b96c935e825b48f14cc68b85739df2_201783_7a18cd3fbdd290e4f759e30cf8462cc1.jpg 480w, https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu96b96c935e825b48f14cc68b85739df2_201783_3fc6b54580b0252100ee80519d44c883.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-13.jpg&#34; width=&#34;970&#34; height=&#34;835&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-14.jpg&#34; data-size=&#34;970x835&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu96b96c935e825b48f14cc68b85739df2_205872_32f966fa69c9b716a313c34c9d5dbf70.jpg 480w, https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu96b96c935e825b48f14cc68b85739df2_205872_b6676856ab0aa7fc720de11b1f65cd9b.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-14.jpg&#34; width=&#34;970&#34; height=&#34;835&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-15.jpg&#34; data-size=&#34;970x835&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu96b96c935e825b48f14cc68b85739df2_207524_b8ba64aed7b7f2a1d13bd03897d7e68d.jpg 480w, https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu96b96c935e825b48f14cc68b85739df2_207524_8360c6aca419bbbdd8d442c8e2316746.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-15.jpg&#34; width=&#34;970&#34; height=&#34;835&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-16.jpg&#34; data-size=&#34;970x835&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu9fb30ddb1e97c0d54993ed73471dc2da_204303_c818769c0843deaa545cff0105e8a206.jpg 480w, https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu9fb30ddb1e97c0d54993ed73471dc2da_204303_265d3eabe56d59ed5f30f6867bdff2a1.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-16.jpg&#34; width=&#34;970&#34; height=&#34;835&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-17.jpg&#34; data-size=&#34;970x835&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu9fb30ddb1e97c0d54993ed73471dc2da_157801_bf2f12b911bb22c9ac8c349f7011df2b.jpg 480w, https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu9fb30ddb1e97c0d54993ed73471dc2da_157801_b565f35f31a897e6558d0f613be8524a.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-17.jpg&#34; width=&#34;970&#34; height=&#34;835&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-18.jpg&#34; data-size=&#34;970x835&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu9fb30ddb1e97c0d54993ed73471dc2da_207581_7d27eaf1e8750ec9acaad44fb40c902e.jpg 480w, https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu9fb30ddb1e97c0d54993ed73471dc2da_207581_2b5e7468ce60768589647697a806c9a5.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-18.jpg&#34; width=&#34;970&#34; height=&#34;835&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;sql-server-upgrade&#34;&gt;SQL Server Upgrade&lt;/h2&gt;
&lt;p&gt;Now we can get started upgrading the DB engine.&lt;/p&gt;
&lt;p&gt;Start off by stopping and disabling all ConfigMgr services until we&amp;rsquo;re ready. I disabled mine in case I needed to reboot and didn&amp;rsquo;t want to run the risk of ConfigMgr running on an unsupported SQL backend in fear of the gremlins.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;$Services = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SMS_EXECUTIVE&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SMS_NOTIFICATION_SERVER&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SMS_SITE_BACKUP&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SMS_SITE_COMPONENT_MANAGER&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SMS_SITE_SQL_BACKUP&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SMS_SITE_VSS_WRITER&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CONFIGURATION_MANAGER_UPDATE&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;ForEach&lt;/span&gt; ($Service &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; $Services) { 
    Write-Host &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$($Service)&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;$((Get-Service -Name $Service).StartType)&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
    Stop-Service -Name $Service -Force 
    Set-Service -Name $Service -StartupType Disabled
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;installing-sql-server-2017&#34;&gt;Installing SQL Server 2017&lt;/h3&gt;
&lt;p&gt;Run &lt;code&gt;setup.exe&lt;/code&gt; in the installation media and work your way through the wizard:&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-19.jpg&#34; data-size=&#34;800x600&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu748fdd3920f7109198b1c3b017355ef3_236613_072f21b80d59583c18196bd82b420454.jpg 480w, https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu748fdd3920f7109198b1c3b017355ef3_236613_e17de7890a21fa1c7ba70980f6f0b924.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-19.jpg&#34; width=&#34;800&#34; height=&#34;600&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-20.jpg&#34; data-size=&#34;820x615&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hua461740be7dec8a9e1839bf1ed7d7eed_154309_ebd8af20878b35a8223a3419e4249e08.jpg 480w, https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hua461740be7dec8a9e1839bf1ed7d7eed_154309_4d0f3fcc75e178f748dc50fad0abe288.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-20.jpg&#34; width=&#34;820&#34; height=&#34;615&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-21.jpg&#34; data-size=&#34;820x615&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hua461740be7dec8a9e1839bf1ed7d7eed_166326_d6486a0ea89d48fc7502abd34e4b993b.jpg 480w, https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hua461740be7dec8a9e1839bf1ed7d7eed_166326_884aef60e206a6ecbd88f5f3086dbe0b.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-21.jpg&#34; width=&#34;820&#34; height=&#34;615&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-22.jpg&#34; data-size=&#34;820x615&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hua461740be7dec8a9e1839bf1ed7d7eed_121170_4ad0c1fdacee96c2aa1b754b4668c8c9.jpg 480w, https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hua461740be7dec8a9e1839bf1ed7d7eed_121170_dd7545cbf0f9ca87c7a81cd60a3ac31a.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-22.jpg&#34; width=&#34;820&#34; height=&#34;615&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-23.jpg&#34; data-size=&#34;820x615&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hua461740be7dec8a9e1839bf1ed7d7eed_129539_f52a6c77f925dd25acb0e02378581fe5.jpg 480w, https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hua461740be7dec8a9e1839bf1ed7d7eed_129539_c20dd20185dc354b12e9db89e4e58ee7.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-23.jpg&#34; width=&#34;820&#34; height=&#34;615&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-24.jpg&#34; data-size=&#34;820x615&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hua461740be7dec8a9e1839bf1ed7d7eed_142083_bc379a2199b8185bc2095b36c325c05e.jpg 480w, https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hua461740be7dec8a9e1839bf1ed7d7eed_142083_cd2d81efdd4c9b16a885588b9910328c.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-24.jpg&#34; width=&#34;820&#34; height=&#34;615&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-25.jpg&#34; data-size=&#34;820x615&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu439fd993af529c0fec507668f7f8c9ae_129684_b9854629ab1c328033c557f390d6f5d9.jpg 480w, https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu439fd993af529c0fec507668f7f8c9ae_129684_30300e3e043c7685b203b3e24e11538a.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-25.jpg&#34; width=&#34;820&#34; height=&#34;615&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-26.jpg&#34; data-size=&#34;820x615&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_huac589cb721b09482fa62cf122844837b_148802_ec19b20b6236388d87fa9edef93e5315.jpg 480w, https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_huac589cb721b09482fa62cf122844837b_148802_00c3c6bd1cc555d6c800b03900e6f992.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-26.jpg&#34; width=&#34;820&#34; height=&#34;615&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-27.jpg&#34; data-size=&#34;820x615&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hufc9a19eef668ff067a88236ccbbe4f0b_162509_ba58085cc20cebfe86f1f5b28bc6c847.jpg 480w, https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hufc9a19eef668ff067a88236ccbbe4f0b_162509_a1ff827ab9662eb68d17e8f6c380e117.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-27.jpg&#34; width=&#34;820&#34; height=&#34;615&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-28.jpg&#34; data-size=&#34;820x615&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hua461740be7dec8a9e1839bf1ed7d7eed_146315_9b4d8298805e991c84868f7ea106f6d9.jpg 480w, https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hua461740be7dec8a9e1839bf1ed7d7eed_146315_7b0b0786049721d904f8068243290f5f.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-28.jpg&#34; width=&#34;820&#34; height=&#34;615&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;I want to point out that I ran through this process three times and played hot potato with the &amp;ldquo;&lt;em&gt;Use Microsoft Update to check for updates (recommended)&lt;/em&gt;&amp;rdquo; and I found it did not install any cumulative updates.&lt;/p&gt;
&lt;p&gt;Restart üòÑ&lt;/p&gt;
&lt;p&gt;At this point I&amp;rsquo;m at RTM build number:&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-29.jpg&#34; data-size=&#34;1912x722&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu77bfc6a04f0287b3b6eba66f7a9256e0_330252_9c898ce21095f98012d93c1f9aa2f355.jpg 480w, https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu77bfc6a04f0287b3b6eba66f7a9256e0_330252_fe098e66771b1af68b7adccf0d2e5f40.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-29.jpg&#34; width=&#34;1912&#34; height=&#34;722&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Which at the time of writing this, that is not supported for ConfigMgr. Minimum CU2 is needed for SQL Server 2017:&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/2019-03-20_12-23-22.jpg&#34; data-size=&#34;920x197&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/2019-03-20_12-23-22_hu83f7a27f1571dbe645dfb16989b7bbb3_51095_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/2019-03-20_12-23-22_hu83f7a27f1571dbe645dfb16989b7bbb3_51095_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/2019-03-20_12-23-22.jpg&#34; width=&#34;920&#34; height=&#34;197&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/sccm/core/plan-design/configs/support-for-sql-server-versions&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Supported SQL Server versions for Configuration Manager&lt;/a&gt; - Microsoft&lt;/p&gt;
&lt;p&gt;Run through the CU wizard, for me this was CU 13 which took me to 14.0.3048:&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-30.jpg&#34; data-size=&#34;820x615&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hua461740be7dec8a9e1839bf1ed7d7eed_106621_b3d3229ecfd7c6375e799c21d1b4dbe1.jpg 480w, https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hua461740be7dec8a9e1839bf1ed7d7eed_106621_19c579a41afa847f2e7bf55d7ab6057d.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-30.jpg&#34; width=&#34;820&#34; height=&#34;615&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-31.jpg&#34; data-size=&#34;820x615&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hua461740be7dec8a9e1839bf1ed7d7eed_152304_497719c21a2a30e39ffaf01734eadba3.jpg 480w, https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hua461740be7dec8a9e1839bf1ed7d7eed_152304_7375f8fdd5aa252337a19ddf0bf6cc7e.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-31.jpg&#34; width=&#34;820&#34; height=&#34;615&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-32.jpg&#34; data-size=&#34;820x615&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hua461740be7dec8a9e1839bf1ed7d7eed_100148_b21305fa304d3d04619bd11cfa561389.jpg 480w, https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hua461740be7dec8a9e1839bf1ed7d7eed_100148_dfd3258106ec7f25bec168a85fcd749c.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-32.jpg&#34; width=&#34;820&#34; height=&#34;615&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-33.jpg&#34; data-size=&#34;820x615&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu0c642186e73e4d732c320df70c606581_94228_80d7c62fb236193ac935daeac97c6988.jpg 480w, https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu0c642186e73e4d732c320df70c606581_94228_427e4bd5307068a8cab457f97ce63082.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-33.jpg&#34; width=&#34;820&#34; height=&#34;615&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-34.jpg&#34; data-size=&#34;820x615&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu0c642186e73e4d732c320df70c606581_119634_5b06369e8765f59b706dbc01b5a02d21.jpg 480w, https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu0c642186e73e4d732c320df70c606581_119634_df35b23231e214a9aca23f4a43221d61.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-34.jpg&#34; width=&#34;820&#34; height=&#34;615&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-35.jpg&#34; data-size=&#34;820x615&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_huc250b0f784ee474e91a5f16fa5f16659_127964_9738c63055a79fc0fde808a180df3009.jpg 480w, https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_huc250b0f784ee474e91a5f16fa5f16659_127964_f2eea7d082867176152c1fc0f765c50b.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-35.jpg&#34; width=&#34;820&#34; height=&#34;615&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Restart üòÑ&lt;/p&gt;
&lt;p&gt;Restore the services startup types back to what they were and do one more final reboot to ensure all needed services start normally:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;$Services = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SMS_EXECUTIVE&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SMS_NOTIFICATION_SERVER&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SMS_SITE_BACKUP&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SMS_SITE_COMPONENT_MANAGER&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SMS_SITE_SQL_BACKUP&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SMS_SITE_VSS_WRITER&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CONFIGURATION_MANAGER_UPDATE&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;ForEach&lt;/span&gt; ($Service &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; $Services) {
    &lt;span style=&#34;color:#66d9ef&#34;&gt;If&lt;/span&gt; ((&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SMS_NOTIFICATION_SERVER&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SMS_SITE_BACKUP&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;-contains&lt;/span&gt; $Service) { 
        Set-Service -Name $Service -StartupType Manual 
    } 
    &lt;span style=&#34;color:#66d9ef&#34;&gt;Else&lt;/span&gt; {
        Set-Service -Name $Service -StartupType Automatic
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If there are issues with the site connecting to the database, you will most likely see messages of interest in:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Log file name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;smsprov.log&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Records WMI provider access to the site database.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;smsdbmon.log&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Records database changes.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;statmgr.log&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Records the writing of all status messages to the database.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/sccm/core/plan-design/hierarchy/log-files&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Log files for troubleshooting&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;reinstall-report-services-point-role&#34;&gt;Reinstall Report Services Point role&lt;/h3&gt;
&lt;p&gt;Now you should be good to go by adding back the RSP!&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-36.jpg&#34; data-size=&#34;1912x722&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu8393eb79a45d1c7dd36a5bc81c951bd5_317789_b34ab39e431496d30d98634c9ba350fa.jpg 480w, https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu8393eb79a45d1c7dd36a5bc81c951bd5_317789_9ae16f44a93ede875c5d7df0192076b8.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-36.jpg&#34; width=&#34;1912&#34; height=&#34;722&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-37.jpg&#34; data-size=&#34;1633x843&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hub593c8f8acbcbcd8ad79f6b7924e3f0a_188014_aa47061fb3777805bb46ffb62b6ffca2.jpg 480w, https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hub593c8f8acbcbcd8ad79f6b7924e3f0a_188014_2b13a18fbb48be96da13ad9eb33ef98e.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-37.jpg&#34; width=&#34;1633&#34; height=&#34;843&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-38.jpg&#34; data-size=&#34;863x750&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu740cbe3f7e0ddd994417d791697c1031_133870_0c72c3d7ebdf87c7f884218ba78a46e7.jpg 480w, https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu740cbe3f7e0ddd994417d791697c1031_133870_1a4e0feefcb929374544c5640c07b2e4.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-38.jpg&#34; width=&#34;863&#34; height=&#34;750&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Again, checkout &lt;code&gt;srsrp.log&lt;/code&gt;, &lt;code&gt;srsrpMSI.log&lt;/code&gt;, &lt;code&gt;srsrpsetup.log&lt;/code&gt; and &lt;code&gt;sitecomp.log&lt;/code&gt; if there are any issues with this.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;‚ÑπÔ∏è &lt;strong&gt;Note:&lt;/strong&gt; Reports may take a little while to appear in console, you can monitor the progress of them being generated in &lt;code&gt;srsrp.log&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;post-sql-upgrade-tasks&#34;&gt;Post SQL upgrade tasks&lt;/h2&gt;
&lt;h3 id=&#34;antivirus-exclusions&#34;&gt;Antivirus exclusions&lt;/h3&gt;
&lt;p&gt;Slightly off-topic, but &lt;a class=&#34;link&#34; href=&#34;https://social.technet.microsoft.com/wiki/contents/articles/953.microsoft-anti-virus-exclusion-list.aspx&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;bookmark this link&lt;/a&gt; right now.&lt;/p&gt;
&lt;p&gt;Back on-topic. This is somewhat obvious but can easily be forgotten: update your exclusion rules to reflect new paths for SQL Server + SSRS 2017!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blogs.technet.microsoft.com/systemcenterpfe/2017/05/24/configuration-manager-current-branch-antivirus-update/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Configuration Manager Current Branch Antivirus Exclusions&lt;/a&gt; - Microsoft&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;cardinality-estimation&#34;&gt;Cardinality Estimation&lt;/h3&gt;
&lt;p&gt;I recently saw a tweet by Umair Khan:&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;ConfigMgr Current branch (1810+) guidance for the SQL CE levels with various SQL versions &lt;a href=&#34;https://t.co/0M2lryd3FJ&#34;&gt;https://t.co/0M2lryd3FJ&lt;/a&gt;&lt;a href=&#34;https://twitter.com/hashtag/ConfigMgr?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#ConfigMgr&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/CardinalityEstimation?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#CardinalityEstimation&lt;/a&gt; &lt;a href=&#34;https://twitter.com/hashtag/SQL?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#SQL&lt;/a&gt;&lt;/p&gt;&amp;mdash; ùöÑùöñùöäùöíùöõ ùô∫ùöëùöäùöó [ùöÑùô∫] (@TheFrankUK) &lt;a href=&#34;https://twitter.com/TheFrankUK/status/1090416130496389120?ref_src=twsrc%5Etfw&#34;&gt;January 30, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;/blockquote&gt;
&lt;p&gt;The &lt;a class=&#34;link&#34; href=&#34;https://techcommunity.microsoft.com/t5/configuration-manager-archive/configmgr-current-branch-1810-guidance-for-the-sql-ce-levels/ba-p/339962&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;referenced blog&lt;/a&gt; post taught me what Cardinality Estimation is and what Umair&amp;rsquo;s guidance means. I highly encourage you to read it if you&amp;rsquo;ve just updated from an old SQL version to 2017.&lt;/p&gt;
&lt;p&gt;As a result you may want to update your ConfigMgr DB backend CE level to something like 140. As I upgraded away from 2012, my ConfigMgr DB and new ReportServer2017 DB was CE level was 110.&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-40.jpg&#34; data-size=&#34;1645x828&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu16bf6961ffc72ca0b129db9cdadcc7ca_300404_07ac90257d4fc121d338223317659ad9.jpg 480w, https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/_hu16bf6961ffc72ca0b129db9cdadcc7ca_300404_c2604a3d9cd9c11e1598663133ec51ec.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13/images/configmgr-sql-server-upgrade-from-2012-sp4-to-2017-cu13-40.jpg&#34; width=&#34;1645&#34; height=&#34;828&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;You can read up more on Cardinality Estimation and guidance on how to change your CE level here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/sql/relational-databases/performance/cardinality-estimation-sql-server?view=sql-server-2017&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Cardinality Estimation (SQL Server)&lt;/a&gt; - Microsoft&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;final-comments&#34;&gt;Final comments&lt;/h2&gt;
&lt;p&gt;I started off with SSRS first before SQL Server because I didn&amp;rsquo;t want anyone following this post having removed their SSRS instance with a boat load of custom reports without realising the impact. I figured if I made the needed warnings first then it would be safer for you.&lt;/p&gt;
&lt;p&gt;The added benefits of doing SSRS after SQL upgrade is, I guess, are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the CE level for ReportServer DB would default to latest&lt;/li&gt;
&lt;li&gt;the ability to use the current web URLs and maybe even database name too, if you&amp;rsquo;re brave enough to delete/rename the original&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Upgrading to PHP 7.2 on Ubuntu</title>
        <link>https://adamcook.io/p/upgrading-to-php-7.2-on-ubuntu/</link>
        <pubDate>Sat, 16 Mar 2019 00:00:00 +0100</pubDate>
        
        <guid>https://adamcook.io/p/upgrading-to-php-7.2-on-ubuntu/</guid>
        <description>&lt;p&gt;I run &lt;a class=&#34;link&#34; href=&#34;https://www.librenms.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;LibreNMS&lt;/a&gt; in my homelab on a Ubuntu Server VM and it&amp;rsquo;s awesome.&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/upgrading-to-php-7.2-on-ubuntu/images/upgrading-to-php-7-2-on-ubuntu-01.jpg&#34; data-size=&#34;2560x1297&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/upgrading-to-php-7.2-on-ubuntu/images/upgrading-to-php-7-2-on-ubuntu-01_hu2a8f7f6b3c42b002f1727b2f015d7fee_578248_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/upgrading-to-php-7.2-on-ubuntu/images/upgrading-to-php-7-2-on-ubuntu-01_hu2a8f7f6b3c42b002f1727b2f015d7fee_578248_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/upgrading-to-php-7.2-on-ubuntu/images/upgrading-to-php-7-2-on-ubuntu-01.jpg&#34; width=&#34;2560&#34; height=&#34;1297&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;For a while I&amp;rsquo;ve been getting notifications for needing to bump from PHP 7.0 to 7.2 minimum.&lt;/p&gt;
&lt;p&gt;I &lt;a class=&#34;link&#34; href=&#34;https://ayesh.me/Ubuntu-PHP-7.2&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;mostly followed this post&lt;/a&gt; but I&amp;rsquo;ll detail a step that helped me automate installing and uninstalling all the extra modules which the last two steps seem to miss. I&amp;rsquo;ll also detail a snag I hit with nginx slapping me with 500 after updating to PHP 7.2.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add PPA&lt;/li&gt;
&lt;li&gt;Get current packages/modules&lt;/li&gt;
&lt;li&gt;Install 7.2&lt;/li&gt;
&lt;li&gt;Install additional packages/modules&lt;/li&gt;
&lt;li&gt;Remove old packages/modules&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;add-ppa&#34;&gt;Add PPA&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://launchpad.net/~ondrej/&amp;#43;archive/ubuntu/php&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Yet another PPA&lt;/a&gt;, sorry. However it does look like Ond≈ôej Sur√Ω is a reputable Debian developer:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://twitter.com/oerdnj&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://twitter.com/oerdnj&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://deb.sury.org&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://deb.sury.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/oerdnj&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/oerdnj&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:ondrej/php
sudo apt update
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;[su_note note_color=&amp;quot;#FFFCCC&amp;quot; radius=&amp;ldquo;10&amp;rdquo;]&lt;strong&gt;Important:&lt;/strong&gt; Make sure you read the caveats on the PPA archive webpage, you&amp;rsquo;re recommended to add seperate archives depending whether you&amp;rsquo;re running apache2 or nginx.[/su_note]&lt;/p&gt;
&lt;h2 id=&#34;get-current-packagesmodules&#34;&gt;Get current packages/modules&lt;/h2&gt;
&lt;p&gt;This is helpful to identify what additional PHP packages you currently have installed so you can install the 7.2 equivilant too.&lt;/p&gt;
&lt;p&gt;Worth pointing out I noticed the mcrypt package was no longer a thing in 7.2 however LibreNMS did not moan at all without it. Their &lt;a class=&#34;link&#34; href=&#34;https://docs.librenms.org/Installation/Installation-Ubuntu-1804-Nginx/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;current installation docs&lt;/a&gt; does not install mcrypt package so that tells me it&amp;rsquo;s no longer a depedency.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dpkg -l | grep php
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;install-72&#34;&gt;Install 7.2&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;apt install php7.2 php7.2-common php7.2-cli php7.2-fpm
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;install-additional-packagesmodules&#34;&gt;Install additional packages/modules&lt;/h2&gt;
&lt;p&gt;This bit was where I wanted to flesh it out a bit. I wanted the same modules I had for 7.0 in 7.2.&lt;/p&gt;
&lt;p&gt;I already got the stdout stream of what&amp;rsquo;s installed from &lt;code&gt;dpkg -l | grep php&lt;/code&gt; and I really didn&amp;rsquo;t want to re-write the results to &lt;code&gt;apt install&lt;/code&gt; or any sort of copy and pasting. I wanted to make the effort to manipulate the stdout and this is what I came up with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dpkg -l | grep php | cut -d&#39; &#39; -f3 | grep 7.0 | sed &#39;s/7.0/7.2/g&#39; | awk &#39;{print &amp;quot;apt install &amp;quot; $1 &amp;quot; -y&amp;quot;}&#39; | xargs -0 bash -c
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Grab all that&amp;rsquo;s installed&lt;/li&gt;
&lt;li&gt;Keyword search for results with &amp;ldquo;php&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Seperate each line with a space as delimiter and grab the third field&lt;/li&gt;
&lt;li&gt;Search for only packages with &amp;ldquo;7.0&amp;rdquo; in string&lt;/li&gt;
&lt;li&gt;Substitute strings containing &amp;ldquo;7.0&amp;rdquo; with &amp;ldquo;7.2&amp;rdquo;&lt;/li&gt;
&lt;li&gt;For each result create a custom string that I will then execute as a command using xargs&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;remove-old-packagemodules&#34;&gt;Remove old package/modules&lt;/h2&gt;
&lt;p&gt;More or less the same as the last. I now wanted to remove PHP 7.0.&lt;/p&gt;
&lt;p&gt;With most things, you can achieve the same result using other methods. I made the below for no reason other than laziness. All I had to do was hit UP to get the previous command and tweak it slightly to &lt;code&gt;remove --purge&lt;/code&gt; rather than &lt;code&gt;install&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dpkg -l | grep php | cut -d&#39; &#39; -f3 | grep 7.0 | awk &#39;{print &amp;quot;apt remove --purge &amp;quot; $1 &amp;quot; -y&amp;quot;}&#39; | xargs -0 bash -c
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;the-500-snag&#34;&gt;The 500 snag&lt;/h2&gt;
&lt;p&gt;So after updating, rebooting and running &lt;code&gt;./daily.sh&lt;/code&gt; and &lt;code&gt;./validate.php&lt;/code&gt; all appeared well in the results. However the web server was failing with status code &lt;code&gt;500&lt;/code&gt;. A good place to start, if I&amp;rsquo;ve learnt anything with ConfigMgr over the last 3 years, is always the log &lt;code&gt;/var/log/nginx/error.log&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2019/03/16 13:17:16 [crit] 1103#1103: *1 connect() to unix:/var/run/php/php7.0-fpm.sock failed (2: No such file or directory) while connecting to upstream, client: 192.168.0.129, server: librenms.domain.com, request: &amp;quot;GET / HTTP/1.1&amp;quot;, upstream: &amp;quot;fastcgi://unix:/var/run/php/php7.0-fpm.sock:&amp;quot;, host: &amp;quot;192.168.0.104&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Looked like the web service was still trying to grab a socket file but it didn&amp;rsquo;t exist. I poked around a little in &lt;code&gt;/etc/nginx&lt;/code&gt; and within &lt;code&gt;/etc/nginx/conf.d/librenms.conf&lt;/code&gt; sure enough there was a hardcoded reference using the offended path. I simply updated it to 7.2 instead.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
 location ~ \.php {
  include fastcgi.conf;
  fastcgi_split_path_info ^(.+\.php)(/.+)$;
  fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
 }
...
&lt;/code&gt;&lt;/pre&gt;</description>
        </item>
        <item>
        <title>UpdatesDeployment.log Job Error (0x80004005)</title>
        <link>https://adamcook.io/p/updatesdeployment.log-job-error-0x80004005/</link>
        <pubDate>Fri, 01 Mar 2019 00:00:00 +0100</pubDate>
        
        <guid>https://adamcook.io/p/updatesdeployment.log-job-error-0x80004005/</guid>
        <description>&lt;img src="https://adamcook.io/p/updatesdeployment.log-job-error-0x80004005/images/cover.jpg" alt="Featured image of post UpdatesDeployment.log Job Error (0x80004005)" /&gt;&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/updatesdeployment.log-job-error-0x80004005/images/updatesdeployment-log-job-error-0x80004005-01.jpg&#34; data-size=&#34;302x292&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/updatesdeployment.log-job-error-0x80004005/images/updatesdeployment-log-job-error-0x80004005-01_hu35c53e470c01e96947dedb1b555cc0c4_14877_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/updatesdeployment.log-job-error-0x80004005/images/updatesdeployment-log-job-error-0x80004005-01_hu35c53e470c01e96947dedb1b555cc0c4_14877_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/updatesdeployment.log-job-error-0x80004005/images/updatesdeployment-log-job-error-0x80004005-01.jpg&#34; width=&#34;302&#34; height=&#34;292&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Glorious, 0x80004005.&lt;/p&gt;
&lt;p&gt;No updates showing in Software Center? Is a client reporting in an unknown state in your reports?&lt;/p&gt;
&lt;p&gt;Do you see this in UpdatesDeployment.log when triggering Software Update Deployment Evaluation Cycle?&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Job error (0x80004005) received for assignment ({09985588-0eff-47e1-9f9d-3846efce8c2b}) action	
Updates will not be made available
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Give this a whirl:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;Move-Item -Path &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$env:SystemRoot\System32\GroupPolicy\Machine\Registry.pol&amp;#34;&lt;/span&gt; -Destination &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$env:SystemRoot\System32\GroupPolicy\Machine\Registry.pol.old&amp;#34;&lt;/span&gt;
Invoke-GPUpdate -Force
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Verify a new Registry.pol file is created, then trigger Software Update Deployment Evaluation Cycle and Software Updates Scan Cycle.&lt;/p&gt;
&lt;p&gt;How did I discover? &lt;a class=&#34;link&#34; href=&#34;http://henkhoogendoorn.blogspot.com/2015/09/software-update-error-0x80004005-on.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;This poor soul&lt;/a&gt;. Why am I sharing again? Because when you&amp;rsquo;re given 0x80004005 you may feel at wit&amp;rsquo;s end and struggle for direction - I&amp;rsquo;m just contributing to the Google fu pool.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Blank InstalledOn Property for Get-HotFix and Win32_QuickFixEngineering</title>
        <link>https://adamcook.io/p/blank-installedon-property-for-get-hotfix-and-win32_quickfixengineering/</link>
        <pubDate>Mon, 18 Feb 2019 00:00:00 +0100</pubDate>
        
        <guid>https://adamcook.io/p/blank-installedon-property-for-get-hotfix-and-win32_quickfixengineering/</guid>
        <description>&lt;img src="https://adamcook.io/p/blank-installedon-property-for-get-hotfix-and-win32_quickfixengineering/images/cover.jpg" alt="Featured image of post Blank InstalledOn Property for Get-HotFix and Win32_QuickFixEngineering" /&gt;&lt;p&gt;Want to get Windows Update status on a bunch of machines, only to discover the InstalledOn property is blank for lots of updates when you&amp;rsquo;re using Get-HotFix or querying Win32_QuickFixEngineering class with Get-WmiObject?&lt;/p&gt;
&lt;p&gt;Turns out it&amp;rsquo;s related to PowerShell parsing the date as string to datetime object incorrectly, depending what your system locale is.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;$Updates = Get-HotFix | Select-Object description,hotfixid,installedby,@{l=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;InstalledOn&amp;#34;&lt;/span&gt;;e={&lt;span style=&#34;color:#66d9ef&#34;&gt;[DateTime]&lt;/span&gt;::Parse($_.psbase.properties[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;installedon&amp;#34;&lt;/span&gt;].value,$(&lt;span style=&#34;color:#66d9ef&#34;&gt;[System.Globalization.CultureInfo]&lt;/span&gt;::GetCultureInfo(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;en-US&amp;#34;&lt;/span&gt;)))}}
$Updates | Sort InstalledOn -Descending | Select -First 10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I like the above approach, &lt;a class=&#34;link&#34; href=&#34;https://community.idera.com/database-tools/powershell/ask_the_experts/f/learn_powershell_from_don_jones-24/12409/get-hotfix-and-get-wmiobject-win32_quickfixengineering-missing-installedon-property/21923#21923&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;as posted by user pyro3113&lt;/a&gt;,¬†because the select expression lets you easily query remote systems using Get-HotFix or Get-WmiObject.&lt;/p&gt;
&lt;p&gt;These two solutions use the Microsoft.Update.Session COM object. The Windows Update PowerShell Module creates the COM object on a remote host whereas the post by britv8 shows just enough to get you going executing on local host:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://gallery.technet.microsoft.com/scriptcenter/2d191bcd-3308-4edd-9de2-88dff796b0bc&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Windows Update PowerShell Module&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://community.spiceworks.com/topic/1461956-get-hotfix-installedon-date-missing&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Getting Windows Updates installation history&lt;/a&gt; shared by Spiceworks member britv8&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Interestingly, using the below command in cmd doesn&amp;rsquo;t suffer from this data type parsing issue. It&amp;rsquo;s just spat out as is with no interpretation.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wmic qfe
&lt;/code&gt;&lt;/pre&gt;</description>
        </item>
        <item>
        <title>ConfigMgr Throttling Distribution Point Bandwidth</title>
        <link>https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/</link>
        <pubDate>Sun, 17 Feb 2019 00:00:00 +0100</pubDate>
        
        <guid>https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/</guid>
        <description>&lt;img src="https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/cover.jpg" alt="Featured image of post ConfigMgr Throttling Distribution Point Bandwidth" /&gt;&lt;blockquote&gt;
&lt;p&gt;‚ÑπÔ∏è It looks like as I was writing this Microsoft have just publicly released a former internal document detailing some things that I had claimed to be undocumented (&lt;a class=&#34;link&#34; href=&#34;https://support.microsoft.com/en-us/help/4482728/understand-troubleshoot-content-distribution-in-configuration-manager&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;click here&lt;/a&gt;):
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Deep, deep, DEEP dive into content distribution in &lt;a href=&#34;https://twitter.com/hashtag/SCCM?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#SCCM&lt;/a&gt; by the great &lt;a href=&#34;https://twitter.com/vinay_pamnani?ref_src=twsrc%5Etfw&#34;&gt;@vinay_pamnani&lt;/a&gt;   Internal-only content originally, now free for public use! &lt;a href=&#34;https://t.co/oUPTSzrTmt&#34;&gt;https://t.co/oUPTSzrTmt&lt;/a&gt;&lt;/p&gt;&amp;mdash; Contoto Ltd. (@_contoto) &lt;a href=&#34;https://twitter.com/_contoto/status/1092469116349440003?ref_src=twsrc%5Etfw&#34;&gt;February 4, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In this post I&amp;rsquo;ll cover ways you can control bandwidth for Configuration Manager using the rate limit config available for each distribution point. Outside of rate limits, a modern approach to traffic shaping content distribution to DPs is LEDBAT. &lt;a class=&#34;link&#34; href=&#34;https://deploymentresearch.com/Research/Post/657/LEDBAT-with-ConfigMgr-Pure-Love-By-Daniel-Olsson&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Read this great write up&lt;/a&gt; by &lt;a class=&#34;link&#34; href=&#34;https://deploymentresearch.com/Research/Post/657/LEDBAT-with-ConfigMgr-Pure-Love-By-Daniel-Olsson&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Daniel Olsson&lt;/a&gt; for more LEDBAT info in this use case.&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-01.jpg&#34; data-size=&#34;688x636&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-01_hu0bf41bd5756ea95c2802a66b5baf5007_53945_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-01_hu0bf41bd5756ea95c2802a66b5baf5007_53945_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-01.jpg&#34; width=&#34;688&#34; height=&#34;636&#34; loading=&#34;lazy&#34;
				alt=&#34;Distribution Point rate limits&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Distribution Point rate limits&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;How familiar are you with the difference between the options &amp;ldquo;pulse mode&amp;rdquo; and &amp;ldquo;limited to specified maximum transfer per hour&amp;rdquo;? I wasn&amp;rsquo;t sure up until recently, and like me you may have misunderstood the % you&amp;rsquo;re applying for each hour slot, when you may want pulse mode instead.&lt;/p&gt;
&lt;h2 id=&#34;pulse-mode&#34;&gt;Pulse mode&lt;/h2&gt;
&lt;p&gt;Pulse mode is simple. Pump out x sized data block every y seconds. Unfortunately, the maximum data block size is 256KB - enabling you to set a maximum cap of 2Mbps - so I support &lt;a class=&#34;link&#34; href=&#34;https://configurationmanager.uservoice.com/forums/300492-ideas/suggestions/36773581-increase-block-size-for-pulse-mode-distribution-p&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&amp;lsquo;Increase block size for pulse mode (distribution point rate limit)&#39;&lt;/a&gt;, do you?&lt;/p&gt;
&lt;h2 id=&#34;limited-to-specified-maximum-transfer-per-hour&#34;&gt;Limited to specified maximum transfer per hour&lt;/h2&gt;
&lt;p&gt;As for &amp;ldquo;limited to specified maximum transfer per hour&amp;rdquo;&amp;hellip; Turns out the % you apply for each hour is strictly relevant to how long for Configuration Manager can send using 100% available bandwidth, following by the how long Configuration Manager will not transmit data for, during that hour slot. The &lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/sccm/core/servers/deploy/configure/install-and-configure-distribution-points#bkmk_config-rate&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;documentation&lt;/a&gt; explains this well.&lt;/p&gt;
&lt;p&gt;However it does not explain the behaviour. For example, if you configured it to be 50/50, does this mean it&amp;rsquo;s pumping content flat out for 30 consecutive minutes of the hour and dead quiet for the other 30 conseuctive minutes? Perhaps that&amp;rsquo;s too much detail to care for and simply knowing that the DP will go full-pelt for 50% of the hour is good enough for you. But I was curious.&lt;/p&gt;
&lt;p&gt;In my lab, I set a distribution point&amp;rsquo;s &amp;ldquo;limit to specified maximum transfer per hour&amp;rdquo; to 10%. On the SCCM VM I set a bandwidth maximum limit of 10Mbps, in Hyper-V this is only for outbound traffic but that&amp;rsquo;s OK it&amp;rsquo;s what I&amp;rsquo;m testing. The bandwidth limit is mostly so I can transfer a 12GB package and make it run for long enough to watch what&amp;rsquo;s going on.&lt;/p&gt;
&lt;p&gt;With perfmon I wanted to cover 3600 seconds, and being limited to just 1000 samples, I could only go down to 1 sample every 4 seconds.&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-02.jpg&#34; data-size=&#34;1401x553&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-02_hu75f2d1fa595ae38c3f4f7fe78330a8c9_168011_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-02_hu75f2d1fa595ae38c3f4f7fe78330a8c9_168011_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-02.jpg&#34; width=&#34;1401&#34; height=&#34;553&#34; loading=&#34;lazy&#34;
				alt=&#34;PkgXferMgr.log&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;PkgXferMgr.log&lt;/figcaption&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-03.jpg&#34; data-size=&#34;1401x553&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-03_hudd5017d5b504d060beea5d3cedf9193c_190417_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-03_hudd5017d5b504d060beea5d3cedf9193c_190417_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-03.jpg&#34; width=&#34;1401&#34; height=&#34;553&#34; loading=&#34;lazy&#34;
				alt=&#34;PkgXferMgr.log&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;PkgXferMgr.log&lt;/figcaption&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-04.jpg&#34; data-size=&#34;1669x663&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-04_hu4d744b3ee3a02480a5bb7c9cf1213178_96508_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-04_hu4d744b3ee3a02480a5bb7c9cf1213178_96508_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-04.jpg&#34; width=&#34;1669&#34; height=&#34;663&#34; loading=&#34;lazy&#34;
				alt=&#34;perfmon&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;perfmon&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;After a few minutes of watching perfmon, task manager and resource monitor, it became clear that perfmon&amp;rsquo;s graph is not a true reflection. While it shows the behaviour, but it doesn&amp;rsquo;t show that Configuration Manager was actually pulsing at 10Mbps (or near abouts). The perfmon graph, and the calculations made by
SMS_PACKAGE_TRANSFER_MANAGER seemed to be perfectly time so perfmon could not plot/sample the peak of each pulse.&lt;/p&gt;
&lt;p&gt;I could have covered fewer seconds and sampled every 1 second and maybe caught the pulses in the graph. But the demonstration was to monitor the behaviour for the configured hour slot. So no, I wanted to look at the results for the last hour.&lt;/p&gt;
&lt;p&gt;From the above two log file snippets, I&amp;rsquo;ve learnt that SMS_PACKAGE_TRANSFER_MANAGER:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Determines current available bandwidth capacity&lt;/li&gt;
&lt;li&gt;By knowing the current available bandwidth capacity, calculate when the next pulse will be, while still satisfying the config applied by admin (in my case, 10%)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So it&amp;rsquo;s not black and white like I first thought, e.g. flat out for 10% of the hour and quiet for the remainder. From what I&amp;rsquo;ve learnt I appreciate the current behaviour is probably most ideal; it doesn&amp;rsquo;t create prolonged periods of congestion.&lt;/p&gt;
&lt;p&gt;With the current limitation of pulse mode (256KB block size), using this config could enable you to create a greater average. However, for brief moments of time during the hour you may still saturate bandwidth at either end causing spikes of latency ‚Äì albeit for a second, not even that.&lt;/p&gt;
&lt;h2 id=&#34;no-concurrent-transfers-to-a-distribution-point-while-it-has-any-rate-limit-defined&#34;&gt;No concurrent transfers to a distribution point while it has any rate limit defined&lt;/h2&gt;
&lt;p&gt;Something you may also not be aware of is the behaviour of SMS_DISTRIBUTION_MANAGER when you configure any rate limit.&lt;/p&gt;
&lt;p&gt;The &lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/sccm/core/servers/deploy/configure/install-and-configure-distribution-points#bkmk_config-rate&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;documentation&lt;/a&gt; doesn&amp;rsquo;t yet say this, and I gave feedback, but when you configure any rate limit ‚Äì whether pulse mode or the other ‚Äì only one package will transfer at a time to that distribution point. Anything you had configured in the properties for the Software Distribution Component will be ignored.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s not a huge unknown. If you&amp;rsquo;re experienced then you may have known this already. However I have
(at the time of writing this) three years experience and I had no idea. I only discovered it while learning about the ‚Äúlimited to specified maximum transfer per hour‚Äù discussed in last section from a &lt;a class=&#34;link&#34; href=&#34;https://www.experts-exchange.com/articles/12177/SCCM-2012-How-Rate-Limiting-Pulse-Mode-saved-the-day.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;great write up here&lt;/a&gt; by &lt;a class=&#34;link&#34; href=&#34;https://twitter.com/sccmcanuck&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Chris Nienabar&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;software-distribution-component&#34;&gt;Software Distribution Component&lt;/h2&gt;
&lt;p&gt;This brings me on to the two relevant options in the Software Distribution Component.&lt;/p&gt;
&lt;p&gt;Where are the properties for the Software Distribution Component? Administratrtion &amp;gt; Sites &amp;gt; select your site &amp;gt; Configure Site Components &amp;gt; Software Distribution Components&lt;/p&gt;
&lt;p&gt;The two key options here are &lt;strong&gt;Maximum number of packages&lt;/strong&gt; and &lt;strong&gt;Maximum threads per package&lt;/strong&gt;. This is what &lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/sccm/core/servers/deploy/configure/site-components#software-distribution&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;the documentation&lt;/a&gt; has to say about it:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;On the General tab, specify settings that modify how the site server transfers content to its distribution points. When you increase the values you use for concurrent distribution settings, content distribution can use more network bandwidth.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-05.jpg&#34; data-size=&#34;528x545&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-05_hu4d3a1ede020e46eff141717f3a23ff3a_125751_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-05_hu4d3a1ede020e46eff141717f3a23ff3a_125751_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-05.jpg&#34; width=&#34;528&#34; height=&#34;545&#34; loading=&#34;lazy&#34;
				alt=&#34;Software Distribution Component Properties&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Software Distribution Component Properties&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;I don&amp;rsquo;t want to come across like I&amp;rsquo;m hating on Microsoft&amp;rsquo;s documentation because &lt;a class=&#34;link&#34; href=&#34;https://twitter.com/AaronCzechowski&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;I see this dude&amp;rsquo;s tweets&lt;/a&gt; and I can tell hard work goes in to making things as great as they are. But hopefully I&amp;rsquo;ll have an opportunity here to further explain these two options, probably moreso the second than the first:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Maximum number of packages&lt;/strong&gt;: The number of packages that can be concurrently push.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Maximum threads per packages&lt;/strong&gt;: The number of distribution points that the distribution manager can concurrently push content to.&lt;/p&gt;
&lt;p&gt;The defaults are 3 and 5, so in effect it means you can transfer 3 packages to 5 distribution points concurrently.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>ConfigMgr Hardware Inventory Troubleshooting</title>
        <link>https://adamcook.io/p/configmgr-hardware-inventory-troubleshooting/</link>
        <pubDate>Sun, 28 Oct 2018 00:00:00 +0100</pubDate>
        
        <guid>https://adamcook.io/p/configmgr-hardware-inventory-troubleshooting/</guid>
        <description>&lt;img src="https://adamcook.io/p/configmgr-hardware-inventory-troubleshooting/images/cover.jpg" alt="Featured image of post ConfigMgr Hardware Inventory Troubleshooting" /&gt;&lt;p&gt;I&amp;rsquo;ve recently updated a site to 1806 and was keen to get all clients up to date too. Some machines targeted for the pre-production client were not upgrading. When I looked closer at one client I suspected client health because a hardware inventory had not been submitted in months.&lt;/p&gt;
&lt;p&gt;Little did I know until recently, a lack of recent hardware inventory data could be a result of other things and client health is least likely to be the root cause. Instead of blindly reinstalling or manually upgrading the client, I wanted to try and understand what&amp;rsquo;s going on.&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re concerned about client health look at &lt;a class=&#34;link&#34; href=&#34;https://www.andersrodland.com/configmgr-client-health/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Anders Rodland&amp;rsquo;s ConfigMgr Client Health script&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There are great articles already out there on this topic, here&amp;rsquo;s some I used to help me with this issue:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blogs.technet.microsoft.com/scotts-it-blog/2015/04/23/hardware-inventory-in-depth-part-1/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hardware Inventory ‚Äì In-Depth (Part 1)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.enhansoft.com/blog/updated-troubleshoot-configmgr-hardware-inventory-issues&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Updated ‚Äì Troubleshoot ConfigMgr Hardware Inventory Issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blogs.technet.microsoft.com/sudheesn/2010/05/31/troubleshooting-sccm-part-ii-hardware-inventory/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Troubleshooting SCCM ..Part II (Hardware Inventory)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://thesysadminchannel.com/troubleshooting-hardware-inventory-sccm-full-guide/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Solved: Troubleshooting Hardware Inventory in SCCM | Step By Step Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;From the above I understood the problem could be:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Broken WMI repository on the client&lt;/li&gt;
&lt;li&gt;BITS on the client is failing to POST the data to the MP&lt;/li&gt;
&lt;li&gt;The INVENTORY_DATA_LOADER (?) refusing to handle the MIF because perhaps:
&lt;ul&gt;
&lt;li&gt;bad syntax&lt;/li&gt;
&lt;li&gt;mismatch in versions&lt;/li&gt;
&lt;li&gt;too big as it exceeds the MAX FILE SIZE&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;client-side&#34;&gt;Client side&lt;/h2&gt;
&lt;p&gt;First port of call was InventoryAgent.log on the client. This log file records activity on the client about hardware and software inventory processes and heartbeat discovery. At the start of the cycle you will see the log tell us which action its performing and whether it&amp;rsquo;s a full, delta and resync report.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Action&lt;/th&gt;
&lt;th&gt;Guid&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Hardware inventory&lt;/td&gt;
&lt;td&gt;{00000000-0000-0000-0000-000000000001}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Software inventory&lt;/td&gt;
&lt;td&gt;{00000000-0000-0000-0000-000000000002}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data Discovery Record (DDR)&lt;/td&gt;
&lt;td&gt;{00000000-0000-0000-0000-000000000003}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;File collection&lt;/td&gt;
&lt;td&gt;{00000000-0000-0000-0000-000000000010}&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-hardware-inventory-troubleshooting/images/configmgr-hardware-inventory-troubleshooting-01.jpg&#34; data-size=&#34;1027x527&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-hardware-inventory-troubleshooting/images/configmgr-hardware-inventory-troubleshooting-01_hub25f78b6c8b4fb440eba083135e45982_98737_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/configmgr-hardware-inventory-troubleshooting/images/configmgr-hardware-inventory-troubleshooting-01_hub25f78b6c8b4fb440eba083135e45982_98737_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-hardware-inventory-troubleshooting/images/configmgr-hardware-inventory-troubleshooting-01.jpg&#34; width=&#34;1027&#34; height=&#34;527&#34; loading=&#34;lazy&#34;
				alt=&#34;InventoryAgent.log&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;InventoryAgent.log&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Looking at InventoryAgent.log above you can see:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The hardware inventory action took place by looking at the GUID&lt;/li&gt;
&lt;li&gt;The MajorVersion and MinorVersion; MajorVersion increments with every¬†full¬†or resync¬†report and the MinorVersion increments with every¬†delta report.
&lt;ul&gt;
&lt;li&gt;Full is triggered for the initial report&lt;/li&gt;
&lt;li&gt;Delta is triggered for each hardware inventory after the full&lt;/li&gt;
&lt;li&gt;Resync is triggered when either the client recognises there&amp;rsquo;s a mismatch in report versions when comparing what has previously been executed, or when SMS_INVENTORY_DATA_LOADER compares what the client has sent compared to what&amp;rsquo;s in the site database&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can manually trigger a delta by running the Hardware Inventory Cycle in the Control Panel applet, however consider running the below if you want to force a full report. Also consider using &lt;a class=&#34;link&#34; href=&#34;https://recastsoftware.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Recast&amp;rsquo;s Right Click Tools&lt;/a&gt; which gives you this option from the console.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;Get-CimInstance -Namespace &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;root\ccm\invagt&amp;#34;&lt;/span&gt; -ClassName &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;InventoryActionStatus&amp;#34;&lt;/span&gt; | 
    Where-Object { $_.InventoryActionID &lt;span style=&#34;color:#f92672&#34;&gt;-eq&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{00000000-0000-0000-0000-000000000001}&amp;#34;&lt;/span&gt; } | 
        Remove-CimInstance

$InvokeCimMethodSplat = @{
    ComputerName = $env:COMPUTERNAME
    Namespace = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;root\ccm&amp;#34;&lt;/span&gt;
    Class = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SMS_Client&amp;#34;&lt;/span&gt;
    Arguments = @{
        TriggerSchedule = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{00000000-0000-0000-0000-000000000001}&amp;#34;&lt;/span&gt;
    }
}

Invoke-CimMethod @InvokeCimMethodSplat
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Going back to the problem I was troubleshooting&amp;hellip; I was confident WMI was healthy because I could see various areas of WMI being successfully queried and at the end of the cycle I saw &amp;ldquo;Inventory: Successfully sent report. Destination:mp:MP_HinvEndpoint&amp;hellip;&amp;rdquo;. After seeing that, I figured let&amp;rsquo;s look server side.&lt;/p&gt;
&lt;h2 id=&#34;server-side&#34;&gt;Server side&lt;/h2&gt;
&lt;p&gt;The three key areas server side in this scenario are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SMSINVENTORY_DATA_LOADER - dataldr.log&lt;/li&gt;
&lt;li&gt;Management Point - MP_hinv.log&lt;/li&gt;
&lt;li&gt;IIS -¬†C:\inetpub\logs\LogFiles¬† - This is the default location for IIS logs, if everything else is default, your SCCM IIS logs should be in a sub folder named¬†W3SVC1. You can find out yourself by looking in IIS Manager.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In all three of the above, I could not see any reference of the machine&amp;rsquo;s name, IP or GUID.&lt;/p&gt;
&lt;h2 id=&#34;back-to-the-client&#34;&gt;Back to the client&lt;/h2&gt;
&lt;p&gt;Looking back at the client, I could see a big queue of BITS job with mixed states: suspended, queued, error and transient_error. You can view the current BITS jobs using the below commands:&lt;/p&gt;
&lt;p&gt;CMD&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bitsadmin /list /allusers
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;PowerShell&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;Get-BitsTransfer -AllUsers
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Get more information about the reason why they&amp;rsquo;re failing with:&lt;/p&gt;
&lt;p&gt;CMD&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bitsadmin /info JOBID /verbose
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;PowerShell&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;Get-BitsTransfer -JobId JOBID | Select-Object *
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To reset all BITS jobs&amp;hellip; You will notice most of the jobs are owned by SYSTEM or NETWORK SERVICE, of which commands you run in any other context will not be successful at purging. A workaround could be to create a scheduled task that runs as SYSTEM to run either of the below:&lt;/p&gt;
&lt;p&gt;CMD&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bitsadmin /reset /allusers
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;PowerShell&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;Get-BitsTransfer -AllUsers | Remove-BitsTransfer
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;However, an easier way posted by¬†&lt;a class=&#34;link&#34; href=&#34;http://www.scconfigmgr.com/2014/03/28/how-to-reset-bits-transfer-queue/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Nickolaj Andersen&lt;/a&gt; works well:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;net stop BITS 
ipconfig /flushdns 
&lt;span style=&#34;color:#66d9ef&#34;&gt;ren&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;%ALLUSERSPROFILE%&lt;span style=&#34;color:#e6db74&#34;&gt;\Application Data\Microsoft\Network\Downloader\qmgr0.dat&amp;#34;&lt;/span&gt; qmgr0.dat.old 
&lt;span style=&#34;color:#66d9ef&#34;&gt;ren&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;%ALLUSERSPROFILE%&lt;span style=&#34;color:#e6db74&#34;&gt;\Application Data\Microsoft\Network\Downloader\qmgr1.dat&amp;#34;&lt;/span&gt; qmgr1.dat.old
net start BITS
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For me, my problem was proxy related. I could see error messages referencing timeouts as the issue, I got this by looking at the verbose BITS jobs information.&lt;/p&gt;
&lt;p&gt;After fixing that and clearing all jobs, I triggered another full hardware inventory report and quickly saw the BITS job leave the client with no hang ups.&lt;/p&gt;
&lt;h2 id=&#34;back-to-the-server&#34;&gt;Back to the server&lt;/h2&gt;
&lt;p&gt;Starting off with the IIS logs I saw successful POST from the client, so data uploaded OK.&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-hardware-inventory-troubleshooting/images/configmgr-hardware-inventory-troubleshooting-02.jpg&#34; data-size=&#34;1027x527&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-hardware-inventory-troubleshooting/images/configmgr-hardware-inventory-troubleshooting-02_hu52b2e100e8075b831144081d27c626e5_98611_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/configmgr-hardware-inventory-troubleshooting/images/configmgr-hardware-inventory-troubleshooting-02_hu52b2e100e8075b831144081d27c626e5_98611_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-hardware-inventory-troubleshooting/images/configmgr-hardware-inventory-troubleshooting-02.jpg&#34; width=&#34;1027&#34; height=&#34;527&#34; loading=&#34;lazy&#34;
				alt=&#34;IIS log file&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;IIS log file&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Next, I want see how the management point handles the report. In the below you can see that it successfully receives it in XML form and parses it into a MIF file, ready to then be parsed by the SMS_INVENTORY_DATA_LOADER and submitted in to the site database. Here, I had no issues.&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-hardware-inventory-troubleshooting/images/configmgr-hardware-inventory-troubleshooting-03.jpg&#34; data-size=&#34;1134x310&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-hardware-inventory-troubleshooting/images/configmgr-hardware-inventory-troubleshooting-03_hu84686cd0fa2de9575617ecd542a88a40_97721_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/configmgr-hardware-inventory-troubleshooting/images/configmgr-hardware-inventory-troubleshooting-03_hu84686cd0fa2de9575617ecd542a88a40_97721_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-hardware-inventory-troubleshooting/images/configmgr-hardware-inventory-troubleshooting-03.jpg&#34; width=&#34;1134&#34; height=&#34;310&#34; loading=&#34;lazy&#34;
				alt=&#34;MP_Hinv.log&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;MP_Hinv.log&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;However I had issues with SMS_INVENTORY_DATA_LOADER. Nothing too complicated though, the MIF was just too big than the allowed MIF size. I guess where its a mature server, been in production in a while, accumulated a lot of &amp;ldquo;things&amp;rdquo;, as well as whatever additional hardware classes is configured client settings for hardware inventory. And the fact it&amp;rsquo;s a full report.&lt;/p&gt;
&lt;p&gt;The below suggests my maximum allowed size is 1 byte, this was true just for the purpose of creating this screenshot.&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-hardware-inventory-troubleshooting/images/configmgr-hardware-inventory-troubleshooting-04.jpg&#34; data-size=&#34;1026x523&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-hardware-inventory-troubleshooting/images/configmgr-hardware-inventory-troubleshooting-04_hu05eb4c3f05d5178c137c278912f7f85f_112329_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/configmgr-hardware-inventory-troubleshooting/images/configmgr-hardware-inventory-troubleshooting-04_hu05eb4c3f05d5178c137c278912f7f85f_112329_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-hardware-inventory-troubleshooting/images/configmgr-hardware-inventory-troubleshooting-04.jpg&#34; width=&#34;1026&#34; height=&#34;523&#34; loading=&#34;lazy&#34;
				alt=&#34;dataldr.log&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;dataldr.log&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;On the primary site server I increased¬†&lt;code&gt;HKLM\Software\Microsoft\SMS\Components\SMS_INVENTORY_DATA_LOADER\Max MIF Size&lt;/code&gt;. The decimal value is in bytes so set it to a value at your discretion, your best gauge is see how far over the limit you are by observing the error in dataldr.log and add a little more. Then restart the SMS_INVENTORY_DATA_LOADER component in Configuration Manager Service Manager (Monitoring &amp;gt; Component Status &amp;gt; Right click any component &amp;gt; Start &amp;gt; Configuration Manager Service Manager).&lt;/p&gt;
&lt;p&gt;Then, some time later, the hardware scan timestamp for the device in the console updated and I could see the new data in the device&amp;rsquo;s Resource Manager.&lt;/p&gt;
&lt;p&gt;I felt this was worth writing up because while the links I shared at the start cover most of what I&amp;rsquo;ve written, I wanted to show that BITS is a factor - the other posts don&amp;rsquo;t touch on this - and use it as a note for me in future. You may find you&amp;rsquo;ll only hit one or two of these issues when troubleshooting hardware inventory, unlikely to be all of them in one go like I almost did.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Compare DD-WRT WAN IP to a Host public IP</title>
        <link>https://adamcook.io/p/compare-dd-wrt-wan-ip-to-a-host-public-ip/</link>
        <pubDate>Sat, 27 Oct 2018 00:00:00 +0100</pubDate>
        
        <guid>https://adamcook.io/p/compare-dd-wrt-wan-ip-to-a-host-public-ip/</guid>
        <description>&lt;img src="https://adamcook.io/p/compare-dd-wrt-wan-ip-to-a-host-public-ip/images/cover.jpg" alt="Featured image of post Compare DD-WRT WAN IP to a Host public IP" /&gt;&lt;p&gt;For my home lab on a particular VM that runs Ubuntu Server, I&amp;rsquo;m interested to know the public IP of my LAN&amp;rsquo;s gateway and the VM&amp;rsquo;s gateway (as it&amp;rsquo;s always connected to VPN). Below is a script I wrote to pull the WAN IP from my DD-WRT router and compare that to VM&amp;rsquo;s gateway public IP.&lt;/p&gt;
&lt;p&gt;My copy does other things like start/stop services, configure local applications in my home lab as well as use Pushbullet to notify me if certain conditions are met. This should get you going, hopefully it helps someone.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
x&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;wget &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://192.168.0.1/Status_Internet.live.asp&amp;#34;&lt;/span&gt; --user&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;USERNAME&amp;#34;&lt;/span&gt; --password&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PASSWORD&amp;#34;&lt;/span&gt; -q -O - | sed -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/}/\n/g&amp;#39;&lt;/span&gt; -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/{//g&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
declare -A results
&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; read line; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
        IFS&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;::&amp;#39;&lt;/span&gt; read -ra array &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$line&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
        results&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;array[0]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;array[2]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$x&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;

wanip&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;results[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;wan_ipaddr&amp;#34;&lt;/span&gt;]&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;
vmip&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;wget -q -O - https://checkip.amazonaws.com&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;

echo $0&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;: WAN IP: &amp;#39;&lt;/span&gt;$wanip
echo $0&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;: VM IP: &amp;#39;&lt;/span&gt;$vmip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>ConfigMgr Database Move: Failed to Create/Backup SQL SSB Certificate</title>
        <link>https://adamcook.io/p/configmgr-database-move-failed-to-create/backup-sql-ssb-certificate/</link>
        <pubDate>Mon, 15 Oct 2018 00:00:00 +0100</pubDate>
        
        <guid>https://adamcook.io/p/configmgr-database-move-failed-to-create/backup-sql-ssb-certificate/</guid>
        <description>&lt;img src="https://adamcook.io/p/configmgr-database-move-failed-to-create/backup-sql-ssb-certificate/images/cover.jpg" alt="Featured image of post ConfigMgr Database Move: Failed to Create/Backup SQL SSB Certificate" /&gt;&lt;p&gt;In a recent project I had to move the SQL database for a single primary site hierarchy to a different host in order to go beyond version 1610, because support for Windows Server 2008 R2 had ended from 1702 onward.&lt;/p&gt;
&lt;p&gt;Everything was going smoothly up until it came to modifying the SQL configuration of the site. I was getting slapped by ConfigMgrSetup.log with:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Create_BackupSQLCert : SQL server failed to backup cert. CSiteControlSetup::SetupCertificateForSSB : Failed to create/backup SQL SSB certificate. ERROR: Failed to set up SQL Server certificate for service broker on &amp;ldquo;sccm.contoso.com&amp;rdquo; .&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;After a couple of days researching and help from colleagues, I learnt more about MS SQL and SQL certificates.&lt;/p&gt;
&lt;p&gt;I won&amp;rsquo;t overcomplicate this or try to act like I know every minute detail of SQL so I&amp;rsquo;ll cut to the chase.&lt;/p&gt;
&lt;p&gt;During installation of SQL, I set a domain service account for the agent, database engine and reporting service. After installation, I changed the service account used for these services. Then I attempted the database migration and stumbled across said error. During my test run in a lab env (as it was my first attempt at SCCM db move) I did not encounter this issue, because I did not play hot potato with service accounts.&lt;/p&gt;
&lt;p&gt;According to the links below, internal SQL certificates are generated with a dependency on the database&amp;rsquo;s master key. Changing the domain user to run the service meant that its service key could no longer access or decrypt the database&amp;rsquo;s master key.&lt;/p&gt;
&lt;p&gt;There are methods to recreate the database master keys detailed in the links below, however after initially trying (and failing) to use the stored procedure¬†&lt;strong&gt;spCreateandBackupSQLCert,&lt;/strong&gt; I¬†figured a reinstall of a new SQL instance using the desired service account would do the trick. The penny dropped when I read the below from &lt;a class=&#34;link&#34; href=&#34;https://blogs.technet.microsoft.com/umairkhan/2013/12/12/configmgr-2012-drs-and-sql-service-broker-certificate-issues/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;here&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The history was the SQL server was installed with the system account and then later changed to a domain user account.&lt;/p&gt;
&lt;p&gt;The problem with doing the above is that when Configuration Manager is installed it creates some internal certificates which are dependent on the master key. When the account being used to run the database server changes the new account is no longer able to &amp;lsquo;unlock&amp;rsquo; the master key and consequently can not read the internal certificates which then cause communication between sites to fail.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In case you didn&amp;rsquo;t know, because I didn&amp;rsquo;t, SQL certificates are different to the certificates you may usually deal with in a user&amp;rsquo;s, computer&amp;rsquo;s or service&amp;rsquo;s personal / trusted root store from the Certificates snap in.&lt;/p&gt;
&lt;p&gt;Resources I used to help me understand SQL certificates:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blogs.technet.microsoft.com/umairkhan/2013/12/12/configmgr-2012-drs-and-sql-service-broker-certificate-issues/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blogs.technet.microsoft.com/umairkhan/2013/12/12/configmgr-2012-drs-and-sql-service-broker-certificate-issues/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.sqlservercentral.com/articles/Encryption/108693/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.sqlservercentral.com/articles/Encryption/108693/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/sql/relational-databases/security/encryption/encryption-hierarchy?view=sql-server-2017&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://docs.microsoft.com/en-us/sql/relational-databases/security/encryption/encryption-hierarchy?view=sql-server-2017&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Resources I used to help me with the database move:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blogs.technet.microsoft.com/configurationmgr/2013/04/02/how-to-move-the-configmgr-2012-site-database-to-a-new-sql-server/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blogs.technet.microsoft.com/configurationmgr/2013/04/02/how-to-move-the-configmgr-2012-site-database-to-a-new-sql-server/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://deploymentresearch.com/Research/Post/646/Moving-the-ConfigMgr-Current-Branch-database-to-another-server-as-in-back-to-the-primary-site-server&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://deploymentresearch.com/Research/Post/646/Moving-the-ConfigMgr-Current-Branch-database-to-another-server-as-in-back-to-the-primary-site-server&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
