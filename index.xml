<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Adam Cook</title>
        <link>https://adamcook.io/</link>
        <description>Recent content on Adam Cook</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Mon, 05 Oct 2020 21:04:10 +0100</lastBuildDate><atom:link href="https://adamcook.io/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Deploying Hugo Websites in Azure for Pennies or Free on GitHub Pages</title>
        <link>https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/</link>
        <pubDate>Mon, 05 Oct 2020 21:04:10 +0100</pubDate>
        
        <guid>https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/</guid>
        <description>&lt;img src="https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/cover.jpg" alt="Featured image of post Deploying Hugo Websites in Azure for Pennies or Free on GitHub Pages" /&gt;&lt;p&gt;I recently migrated my WordPress blogging platform to generating static content with Hugo. I no longer pay for hosting. I exclusively use GitHub Pages. I am now blogging at no extra cost other than domain renewal!&lt;/p&gt;
&lt;p&gt;In the process not only did I learn about Hugo, but I also looked at three ways to deploy / host my Hugo-made website.&lt;/p&gt;
&lt;p&gt;In this post I want to share with you what Hugo is, why I like it and those three ways that I learned on how to deploy a Hugo website - with Azure Static Web Apps (preview), Azure Blob storage and GitHub Pages.&lt;/p&gt;
&lt;p&gt;For Azure Static Web Apps and Blob storage, I will be using Cloudflare. I am also assuming you will be using your own domain name. It is not a big deal if you do not want to, just ignore details focused on defining custom domains and creating CNAME records.&lt;/p&gt;
&lt;p&gt;There will also be some assumptions that you are somewhat familiar with using GitHub Actions. If you are looking for an introduction to using GitHub Actions, check out my &lt;a class=&#34;link&#34; href=&#34;https://adamcook.io/p/getting-your-powershell-code-into-production-using-github-actions/&#34; &gt;WinAdmins virtual user group event session&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#what-is-this-hugo-thing&#34; &gt;What is this Hugo thing?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#prerequisites&#34; &gt;Prerequisites&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#azure-static-web-apps&#34; &gt;Azure Static Web Apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#azure-blob-storage&#34; &gt;Azure Blob storage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#github-pages&#34; &gt;GitHub Pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#closing-comments&#34; &gt;Closing comments&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;what-is-this-hugo-thing&#34;&gt;What is this Hugo thing?&lt;/h2&gt;
&lt;p&gt;Hugo is a static site generator.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;continues to stare blankly at the screen&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Yeah, I did too.&lt;/p&gt;
&lt;p&gt;With static site generators (like Hugo), you forego caring about databases and any kind of code. Instead, your HTML pages are generated either each time a user visits your website, or in Hugo&amp;rsquo;s case, the HTML pages are generated each time you create or update content.&lt;/p&gt;
&lt;p&gt;Instead of writing your pages and blog posts in HTML files or in a feature-rich WYSIWYG editor, on some bloated content management system like WordPress, you write them in markdown (at least you do with Hugo). Then you invoke the process to generate the HTML files, using your new markdown content as source. The generated HTML files land in a very particular directory (&lt;code&gt;public&lt;/code&gt;). After that, all you need to do is get that directory on a web hosting platform as your web root.&lt;/p&gt;
&lt;p&gt;When it comes to styling, themes are mostly plug and play, too. Fancy a new theme? No problem. &lt;a class=&#34;link&#34; href=&#34;https://themes.gohugo.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Download one&lt;/a&gt;, drop it in the &lt;code&gt;/themes&lt;/code&gt; directory amd update &lt;code&gt;config.toml&lt;/code&gt; a little.&lt;/p&gt;
&lt;p&gt;With static websites, no runtime is needed to run your website. Not only does this open up your hosting opportunities, performance is also another great benefit. You do not need a hosting package that sit on nginx or Apache, running PHP or whatever. For example, you can host on &lt;a class=&#34;link&#34; href=&#34;https://azure.microsoft.com/en-gb/services/storage/Blobs/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Azure Blob storage&lt;/a&gt; or &lt;a class=&#34;link&#34; href=&#34;https://pages.github.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub Pages&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;GitHub Pages is free. It also lets you use your own domain and offers free SSL certificates via LetsEncrypt. Azure Blob Storage isn&amp;rsquo;t quite free but it costs pennies. It is Â£0.0144 per GB (in UK South) of storage and the first 5GB of bandwidth from this zone is free. You can do this on many more platforms too, such as Amazon S3, Netlify, Heroku, GitLab Pages, Google Cloud Storage and more.&lt;/p&gt;
&lt;p&gt;I am all-for ditching WordPress. Over the last few years I have grown more comfortable with Git and working on Azure and GitHub. If you relate to that or are enticed by any of the benefits, I highly recommend you at least give it a go! I would be more than happy to help, too, just get hold of me.&lt;/p&gt;
&lt;p&gt;Here are some resources I used to learn Hugo:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=qtIqKaDlqXo&amp;amp;list=PLLAZ4kZ9dFpOnyRlyS-liKL5ReHDcj4G3&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hugo - Static Site Generator | Tutorial&lt;/a&gt; YouTube series&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/getting-started/quick-start/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hugo Quick Start&lt;/a&gt; official documentation&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;p&gt;Before we get started, I am going to assume some things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You have an Azure subscription&lt;/li&gt;
&lt;li&gt;You have a GitHub account and repository&lt;/li&gt;
&lt;li&gt;The repository contains either only your static site content, or the whole Hugo directory with your latest generated content in the &lt;code&gt;public&lt;/code&gt; directory&lt;/li&gt;
&lt;li&gt;You get by with Git enough to be able to do things like committing/pushing&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;azure-static-web-apps&#34;&gt;Azure Static Web Apps&lt;/h2&gt;
&lt;p&gt;Let us start with deploying Hugo to an Azure Static Web App. &lt;a class=&#34;link&#34; href=&#34;https://techcommunity.microsoft.com/t5/apps-on-azure/introducing-app-service-static-web-apps/ba-p/1394451&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Earlier this year Microsoft announced Azure Static Web Apps&lt;/a&gt; and it&amp;rsquo;s currently in preview. While it&amp;rsquo;s in preview, this resource is free!&lt;/p&gt;
&lt;p&gt;It boasts &amp;ldquo;deep GitHub integration&amp;rdquo;, which is true. When you create the resource and associate a GitHub repository with it, it creates a GitHub Actions workflow YAML file in your repository. It also stores a secret in the repository. The secret is used by the workflow to authenticate to Azure. This workflow, when triggered by pushing to the master branch, ships everything in the &lt;code&gt;public&lt;/code&gt; directory up to the Azure Static Web App for you.&lt;/p&gt;
&lt;p&gt;The good thing about using Azure Static Web Apps is that you essentially get Azure Blob storage and Azure Functions bundled in to one resource. This enables you to leverage the speed and flexibility of static site generators, while still being able to implement some dynamic abilities in to your website by rolling your own API via Azure Functions.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Log in to the &lt;a class=&#34;link&#34; href=&#34;https://portal.azure.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Azure portal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Create a new Static Web App resource&lt;/li&gt;
&lt;li&gt;Fill out the typical information ie resource group, name and region&lt;/li&gt;
&lt;li&gt;Sign in to GitHub&lt;/li&gt;
&lt;li&gt;Choose your organisation / user, repository and branch&lt;/li&gt;
&lt;li&gt;For the build details, ensure you choose &lt;code&gt;Hugo&lt;/code&gt; and that you have the &amp;ldquo;App artifact location&amp;rdquo; set to &lt;code&gt;public&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Finalise the resource creation via &lt;code&gt;Review + create&lt;/code&gt; and if validation succeeds, click &lt;code&gt;Create&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-01.jpg&#34; data-size=&#34;1355x782&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-01_huef68e5499686639eded21e238ca19ac4_60604_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-01_huef68e5499686639eded21e238ca19ac4_60604_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-01.jpg&#34; width=&#34;1355&#34; height=&#34;782&#34; loading=&#34;lazy&#34;
				alt=&#34;Static Web App resource creation in Azure Portal&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Static Web App resource creation in Azure Portal&lt;/figcaption&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-02.jpg&#34; data-size=&#34;1920x1336&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-02_hu7c695f106d7069e463451d2ad9980f62_140124_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-02_hu7c695f106d7069e463451d2ad9980f62_140124_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-02.jpg&#34; width=&#34;1920&#34; height=&#34;1336&#34; loading=&#34;lazy&#34;
				alt=&#34;Static Web App resource creation in Azure Portal&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Static Web App resource creation in Azure Portal&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Once the Static Web App resource is provisioned you will notice it created the GitHub Actions workflow YAML file in your repository. We can see from looking in the workflow file that it is using the &lt;a class=&#34;link&#34; href=&#34;https://github.com/Azure/static-web-apps-deploy&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Azure/static-web-apps-deploy&lt;/a&gt; action. &lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/azure/static-web-apps/github-actions-workflow&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Here&amp;rsquo;s the link&lt;/a&gt; to the docs for said action.&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-03.jpg&#34; data-size=&#34;1461x759&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-03_hu4bc9b7cca5ad322bfd27609a7035dcab_68362_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-03_hu4bc9b7cca5ad322bfd27609a7035dcab_68362_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-03.jpg&#34; width=&#34;1461&#34; height=&#34;759&#34; loading=&#34;lazy&#34;
				alt=&#34;Creation of GitHub Actions workflow file by Azure&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Creation of GitHub Actions workflow file by Azure&lt;/figcaption&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-04.jpg&#34; data-size=&#34;1149x1040&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-04_hucccb004310e54a0a52abdb29283eac54_68189_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-04_hucccb004310e54a0a52abdb29283eac54_68189_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-04.jpg&#34; width=&#34;1149&#34; height=&#34;1040&#34; loading=&#34;lazy&#34;
				alt=&#34;Static Web Apps Deploy actions workflow file&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Static Web Apps Deploy actions workflow file&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;At this point, you will be able to see your static website live available from a HTTPS endpoint.&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-05.jpg&#34; data-size=&#34;1347x796&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-05_hu07251bb2a0a18783554b85726ad821a5_72359_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-05_hu07251bb2a0a18783554b85726ad821a5_72359_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-05.jpg&#34; width=&#34;1347&#34; height=&#34;796&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-06.jpg&#34; data-size=&#34;1347x796&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-06_hu036db5a0fd2626900c29f94d277788a1_43289_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-06_hu036db5a0fd2626900c29f94d277788a1_43289_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-06.jpg&#34; width=&#34;1347&#34; height=&#34;796&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;To use your own domain, go to your DNS provider set a CNAME record for &lt;code&gt;www&lt;/code&gt;, or any subdomain you want, to your &lt;code&gt;azurestaticapps.net&lt;/code&gt; URL as shown in your portal.&lt;/li&gt;
&lt;li&gt;After that, configure the static web app resource to point to your domain.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-07.jpg&#34; data-size=&#34;1347x796&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-07_hu36c7c823f442b2dfc21dc0999ad1e7c7_72721_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-07_hu36c7c823f442b2dfc21dc0999ad1e7c7_72721_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-07.jpg&#34; width=&#34;1347&#34; height=&#34;796&#34; loading=&#34;lazy&#34;
				alt=&#34;Creating a CNAME record in Cloudflare&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Creating a CNAME record in Cloudflare&lt;/figcaption&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-08.jpg&#34; data-size=&#34;1347x796&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-08_huf01b0a15de4e9a5a6ddfe266846e1f03_75865_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-08_huf01b0a15de4e9a5a6ddfe266846e1f03_75865_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-08.jpg&#34; width=&#34;1347&#34; height=&#34;796&#34; loading=&#34;lazy&#34;
				alt=&#34;Add custom domain to the static web app resource&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Add custom domain to the static web app resource&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Now your Hugo generated static website is deployed in Azure using Static Web Apps!&lt;/p&gt;
&lt;h2 id=&#34;azure-blob-storage&#34;&gt;Azure Blob storage&lt;/h2&gt;
&lt;p&gt;Moving on to hosting your Hugo website on Azure Blob storage instead.&lt;/p&gt;
&lt;p&gt;Now&amp;hellip; Azure Blob storage does not do everything Azure Static Web Apps does. There is a reasonable amount of configuration to do yourself. For example, the Blob storage account is not configured to be a static website by default. There is also no bundled Azure Functions resource to integrate your own API. If you want the same CI/CD experience as with Azure Static Web Apps, you must also roll your own workflow with GitHub Actions (or similar). But that is OK! Because I will share with you my GitHub Actions workflow!&lt;/p&gt;
&lt;p&gt;Why bother using it then? I guess while Static Web Apps are in preview, even though Microsoft will give you 30 days notice, they could start charging you an unpredictable rate to use it. Whereas Blob storage is a mature generally available service, its pricing model is known and it is very cost effective. Maybe you also have your own reasons to prefer Blob storage.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Log in to the &lt;a class=&#34;link&#34; href=&#34;https://portal.azure.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Azure portal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Create a new Azure Storage account&lt;/li&gt;
&lt;li&gt;Fill out the necessary information and click the usual &lt;code&gt;Review + create&lt;/code&gt; and &lt;code&gt;Create&lt;/code&gt; after validation&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-09.jpg&#34; data-size=&#34;1347x796&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-09_hu8e02045dd7fb5b90e83e8f249857e484_62652_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-09_hu8e02045dd7fb5b90e83e8f249857e484_62652_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-09.jpg&#34; width=&#34;1347&#34; height=&#34;796&#34; loading=&#34;lazy&#34;
				alt=&#34;Storage account creation in Azure Portal&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Storage account creation in Azure Portal&lt;/figcaption&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-10.jpg&#34; data-size=&#34;1347x1038&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-10_hu79c8dd91c5acc0a3b7025b8d45ccf7fe_97251_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-10_hu79c8dd91c5acc0a3b7025b8d45ccf7fe_97251_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-10.jpg&#34; width=&#34;1347&#34; height=&#34;1038&#34; loading=&#34;lazy&#34;
				alt=&#34;Storage account creation in Azure Portal&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Storage account creation in Azure Portal&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;Within the &amp;ldquo;Static website&amp;rdquo; blade, enable the storage account to be a static website. Also define your index and error documents to be&lt;code&gt;index.html&lt;/code&gt; and &lt;code&gt;404.html&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Within the &amp;ldquo;Containers&amp;rdquo; blade, select the &lt;code&gt;$web&lt;/code&gt; container and from the top menu change its access level via the &amp;ldquo;Change access level&amp;rdquo; menu item. Set its access policy to &lt;code&gt;Container&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Within the &amp;ldquo;Custom domain&amp;rdquo; blade, enter your custom domain and copy the domain which ends with &lt;code&gt;z33.web.core.windows.net&lt;/code&gt;. This will be used used to configure your CNAME record. Before clicking Save for your new custom domain, you will need to create a CNAME record with your DNS provider.&lt;/li&gt;
&lt;li&gt;Head over to &lt;a class=&#34;link&#34; href=&#34;https://cloudfoare.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Cloudflare&lt;/a&gt; and configure a CNAME record pointing to the &lt;code&gt;z33.web.core.windows.net&lt;/code&gt; domain gathered from the last step.&lt;/li&gt;
&lt;li&gt;Wait a little bit (a couple of minutes?), then back in the &amp;ldquo;Custom domain&amp;rdquo; blade of the Azure portal, click Save and the domain should validate OK.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-11.jpg&#34; data-size=&#34;1263x767&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-11_hu090a302355deb929678accc689402a5f_78521_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-11_hu090a302355deb929678accc689402a5f_78521_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-11.jpg&#34; width=&#34;1263&#34; height=&#34;767&#34; loading=&#34;lazy&#34;
				alt=&#34;Enable the storage account to be a static website&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Enable the storage account to be a static website&lt;/figcaption&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-12.jpg&#34; data-size=&#34;1263x767&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-12_hu2d7ff0fa065962dec3854ffea804ecf3_63859_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-12_hu2d7ff0fa065962dec3854ffea804ecf3_63859_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-12.jpg&#34; width=&#34;1263&#34; height=&#34;767&#34; loading=&#34;lazy&#34;
				alt=&#34;Change the $web container access policy to Container&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Change the $web container access policy to Container&lt;/figcaption&gt;
		
	&lt;/figure&gt;
&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-14.jpg&#34; data-size=&#34;1263x767&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-14_hu090a302355deb929678accc689402a5f_89995_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-14_hu090a302355deb929678accc689402a5f_89995_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-14.jpg&#34; width=&#34;1263&#34; height=&#34;767&#34; loading=&#34;lazy&#34;
				alt=&#34;Enter your custom domain&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Enter your custom domain&lt;/figcaption&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-15.jpg&#34; data-size=&#34;1444x857&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-15_hu980c2ad6e5b7f99e41bdc9c42a04417c_81683_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-15_hu980c2ad6e5b7f99e41bdc9c42a04417c_81683_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-15.jpg&#34; width=&#34;1444&#34; height=&#34;857&#34; loading=&#34;lazy&#34;
				alt=&#34;Creating a CNAME record in Cloudflare&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Creating a CNAME record in Cloudflare&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;At this point, all there is left to do is to upload some content to your new Blob storage &lt;code&gt;$web&lt;/code&gt; container.&lt;/p&gt;
&lt;p&gt;As a mess-around, create a file named &lt;code&gt;index.html&lt;/code&gt; locally with some simple HTML in it which we&amp;rsquo;ll use for testing shortly. Install &lt;a class=&#34;link&#34; href=&#34;https://azure.microsoft.com/en-us/features/storage-explorer/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Azure Storage Explorer&lt;/a&gt; and sign in with your Azure AD account with the subscription that holds your new storage account.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;Hello world&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h1&lt;/span&gt;&amp;gt;
    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Upload &lt;code&gt;index.html&lt;/code&gt; to the &lt;code&gt;$web&lt;/code&gt; container and check it out! It&amp;rsquo;s worth pointing out that the &lt;a class=&#34;link&#34; href=&#34;https://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-azurestorage&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Azure Storage Visual Studio Code extension&lt;/a&gt; lets you modify files directly in your Blob container.&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-16.gif&#34; data-size=&#34;1736x769&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-16_hua7f857b9f70ef40cf1a2b25db3d8bc35_560377_480x0_resize_box.gif 480w, https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-16_hua7f857b9f70ef40cf1a2b25db3d8bc35_560377_1024x0_resize_box.gif 1024w&#34;
				src=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-16.gif&#34; width=&#34;1736&#34; height=&#34;769&#34; loading=&#34;lazy&#34;
				alt=&#34;Click me to see animation&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Click me to see animation&lt;/figcaption&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-17.jpg&#34; data-size=&#34;1051x552&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-17_hue8f39cb830b111f5676f74261c177ba9_21130_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-17_hue8f39cb830b111f5676f74261c177ba9_21130_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-17.jpg&#34; width=&#34;1051&#34; height=&#34;552&#34; loading=&#34;lazy&#34;
				alt=&#34;&amp;nbsp;&#34;&gt;
		&lt;/a&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;What we really want to do is to get the similar CI/CD pipeline going on like we had with Static Web Apps.&lt;/p&gt;
&lt;ol start=&#34;9&#34;&gt;
&lt;li&gt;Within the &amp;ldquo;Shared access signature&amp;rdquo; blade of the storage account, generate a SAS connection string with the same permissions as below screenshot. Set the start/expiration date to suit your needs.&lt;/li&gt;
&lt;li&gt;Make note of the &lt;code&gt;Connection string&lt;/code&gt; at the bottom.&lt;/li&gt;
&lt;li&gt;From the Settings of your GitHub repository, create a secret named &lt;code&gt;AZURE_STORAGE_BLOB_SAS_CONNECTIONSTRING&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-18.jpg&#34; data-size=&#34;1344x1315&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-18_hu81fb38a9e4eb0d857fedfe6ad8a6b63e_144502_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-18_hu81fb38a9e4eb0d857fedfe6ad8a6b63e_144502_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-18.jpg&#34; width=&#34;1344&#34; height=&#34;1315&#34; loading=&#34;lazy&#34;
				alt=&#34;Create SAS and connection string&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Create SAS and connection string&lt;/figcaption&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-19.jpg&#34; data-size=&#34;1424x892&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-19_hu7eb12ce693e09550046076b69eeec561_69124_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-19_hu7eb12ce693e09550046076b69eeec561_69124_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-19.jpg&#34; width=&#34;1424&#34; height=&#34;892&#34; loading=&#34;lazy&#34;
				alt=&#34;Create secret in your GitHub repository&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Create secret in your GitHub repository&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;ol start=&#34;12&#34;&gt;
&lt;li&gt;Create a file in your repository named &lt;code&gt;azure-blob-storage.yml&lt;/code&gt; (or whatever you want, it really doesn&amp;rsquo;t matter, must be &lt;code&gt;.yml&lt;/code&gt; though) in &lt;code&gt;.github\workflows&lt;/code&gt; directory (that does matter, it must live in there). Use the below to populate to populate its contents.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Azure Storage Blob Container CI/CD&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;on&lt;/span&gt;:
  &lt;span style=&#34;color:#f92672&#34;&gt;push&lt;/span&gt;: 
    &lt;span style=&#34;color:#f92672&#34;&gt;branches&lt;/span&gt;:
      - &lt;span style=&#34;color:#ae81ff&#34;&gt;master&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;jobs&lt;/span&gt;:
  &lt;span style=&#34;color:#f92672&#34;&gt;deploy&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;runs-on&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ubuntu-latest&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:
      - &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions/checkout@v2&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:
          &lt;span style=&#34;color:#f92672&#34;&gt;submodules&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
      
      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Get Hugo&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;peaceiris/actions-hugo@v2&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:
          &lt;span style=&#34;color:#f92672&#34;&gt;hugo-version&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;0.76.3&amp;#39;&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;extended&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;

      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Build&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;hugo&lt;/span&gt;

      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Azure Blob Upload&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;bacongobbler/azure-blob-storage-upload@v1.1.1&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:
          &lt;span style=&#34;color:#f92672&#34;&gt;connection_string&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${{ secrets.AZURE_STORAGE_BLOB_SAS_CONNECTIONSTRING }}&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;source_dir&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;public&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;container_name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;$web&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;sync&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;13&#34;&gt;
&lt;li&gt;Commit and push to your master branch.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Watch the status of the GitHub action at &lt;code&gt;https://github.com/YOUR_USERNAME/YOUR_REPO/actions&lt;/code&gt;. If it ran successfully without any errors, you will see your Hugo website live at your domain!&lt;/p&gt;
&lt;p&gt;If you want to make any more changes to your website, that&amp;rsquo;s OK! With the above workflow in your repo, every time you commit to master, the workflow will be triggered and it will upload everything that gets created in the &lt;code&gt;public&lt;/code&gt; directory within the runner to your &lt;code&gt;$web&lt;/code&gt; container.&lt;/p&gt;
&lt;h2 id=&#34;github-pages&#34;&gt;GitHub Pages&lt;/h2&gt;
&lt;p&gt;Last but definitely not least is &lt;a class=&#34;link&#34; href=&#34;https://pages.github.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub Pages&lt;/a&gt;. I think this is probably my favourite because it is &lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/en/free-pro-team@latest/github/working-with-github-pages/creating-a-github-pages-site&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;the simplest to create&lt;/a&gt; and absolutely free.&lt;/p&gt;
&lt;p&gt;It is worth pointing out some &lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/en/free-pro-team@latest/github/working-with-github-pages/about-github-pages#usage-limits&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;usage limits associated with GitHub Pages&lt;/a&gt;: soft bandwidth limit of 100GB p/month and repositories should ideally not be larger than 1GB.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/hosting-and-deployment/hosting-on-github/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hugo also has some excellent docs&lt;/a&gt; on deploying to GitHub Pages. They suggest a reasonable idea where we have two repositories for our static website, instead of one. One contains your Hugo sources, and another - which is added as a Git submodule - holds our Hugo generated HTML content. The former would be a repository named whatever you want, for example &lt;code&gt;&amp;lt;username&amp;gt;.github.io-hugo&lt;/code&gt;, whereas the latter would be named &lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Instead of that, we are going to keep focused on using GitHub Actions. This will enable to create a pipeline for Hugo to grab content from repository, and use it to publish to another. In other words, we will still have two repositories however we will not create a submodule for the &lt;code&gt;public&lt;/code&gt; directory.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create your repository named &lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Go to the Settings of your repository&lt;/li&gt;
&lt;li&gt;Enable GitHub Pages by choosing your branch (&lt;code&gt;master&lt;/code&gt;) and folder (&lt;code&gt;/&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Within the same section from the previous step, optionally enter your custom domain&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you do enter a custom domain, check out this documentation on &lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/en/free-pro-team@latest/github/working-with-github-pages/managing-a-custom-domain-for-your-github-pages-site&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Managing a customer domain for your GitHub Pages site&lt;/a&gt;.&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;Check the box to &lt;code&gt;Enforce HTTPS&lt;/code&gt; however note that this really does take ~24 hours to generate the certificate.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-20.jpg&#34; data-size=&#34;1276x356&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-20_hu2fc4b8bb8c4d2bfd479f0e8a6b1991be_28663_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-20_hu2fc4b8bb8c4d2bfd479f0e8a6b1991be_28663_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-20.jpg&#34; width=&#34;1276&#34; height=&#34;356&#34; loading=&#34;lazy&#34;
				alt=&#34;GitHub repository settings&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;GitHub repository settings&lt;/figcaption&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-21.jpg&#34; data-size=&#34;1424x892&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-21_hubf36c5012ab5c09dbe2db0bf298f396d_73874_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-21_hubf36c5012ab5c09dbe2db0bf298f396d_73874_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/deploying-hugo-websites-in-azure-for-pennies-or-free-on-github-pages/images/staticwebapp-21.jpg&#34; width=&#34;1424&#34; height=&#34;892&#34; loading=&#34;lazy&#34;
				alt=&#34;Configure GitHub repository for GitHub Pages&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Configure GitHub repository for GitHub Pages&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;Go to your &lt;a class=&#34;link&#34; href=&#34;https://github.com/settings/tokens&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub account&amp;rsquo;s developer settings&lt;/a&gt; and &lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/en/free-pro-team@latest/github/authenticating-to-github/creating-a-personal-access-token&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;create a Personal access token&lt;/a&gt;. Make note of the generated token for use in a couple of steps.&lt;/li&gt;
&lt;li&gt;Create another repository that will contain our Hugo sources, named something like &lt;code&gt;&amp;lt;username&amp;gt;.github.io-hugo&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Go to the Settings of your newly created repository (with -hugo in the name) and &lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/en/free-pro-team@latest/actions/reference/encrypted-secrets#creating-encrypted-secrets-for-a-repository&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;create a new secret&lt;/a&gt; named something like &lt;code&gt;&amp;lt;username&amp;gt;githubiohugo&lt;/code&gt;. Its value will be the personal access token we created moments ago.&lt;/li&gt;
&lt;li&gt;Clone your &lt;code&gt;&amp;lt;username&amp;gt;.github.io-hugo&lt;/code&gt; repository to your computer and copy all of your Hugo content in to it, excluding the &lt;code&gt;public&lt;/code&gt; directory&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;PS C:\git&amp;gt; git clone https://github.com/USERNAME/USERNAME.github.io-hugo.git
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;10&#34;&gt;
&lt;li&gt;Create &lt;code&gt;publish.yml&lt;/code&gt; in &lt;code&gt;.github/workflows&lt;/code&gt; and put the below content inside it, adjusting the necessary values that read &lt;code&gt;&amp;lt;CHANGEME&amp;gt;&lt;/code&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Publish site&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;on&lt;/span&gt;: 
  &lt;span style=&#34;color:#f92672&#34;&gt;push&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;branch&lt;/span&gt;:
      - &lt;span style=&#34;color:#ae81ff&#34;&gt;master&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;jobs&lt;/span&gt;:
  &lt;span style=&#34;color:#f92672&#34;&gt;publish&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;runs-on&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ubuntu-latest&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:
      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Git checkout&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions/checkout@v2&lt;/span&gt;

      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Update theme&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;git submodule update --init --recursive # Optional if you have the theme added as submodule, you can pull it and use the most updated version&lt;/span&gt;

      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Setup hugo&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;peaceiris/actions-hugo@v2&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:
          &lt;span style=&#34;color:#f92672&#34;&gt;hugo-version&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.75.1&amp;#34;&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;extended&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;

      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Build&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;hugo&lt;/span&gt;

      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Deploy&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;peaceiris/actions-gh-pages@v3&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:
          &lt;span style=&#34;color:#f92672&#34;&gt;personal_token&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${{ secrets.&amp;lt;CHANGEME&amp;gt; }} # The name of the secret you created in step 8&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;external_repository&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;&amp;lt;CHANGEME&amp;gt; # The name of the GitHub Pages repository, e.g. &amp;lt;username&amp;gt;/&amp;lt;username&amp;gt;.github.io&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;publish_dir&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;./public&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;user_name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;&amp;lt;CHANGEME&amp;gt; # The git username used for publishing commits to external_repository&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;user_email&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;&amp;lt;CHANGEME&amp;gt; # The git email address used for publishing commits to external_repository&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;publish_branch&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;master&lt;/span&gt;
          &lt;span style=&#34;color:#f92672&#34;&gt;cname&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;&amp;lt;CHANGEME&amp;gt; # If you configured your own domain, you may want to populate this with it, e.g. mine is adamcook.io.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://ruddra.com/hugo-deploy-static-page-using-github-actions/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Thank you to Ruddra for inspiration of this YAML!&lt;/a&gt;&lt;/p&gt;
&lt;ol start=&#34;11&#34;&gt;
&lt;li&gt;At this point, before we commit and push up to GitHub, issue &lt;code&gt;hugo server&lt;/code&gt; within the &lt;code&gt;C:\git\USERNAME.github.io-hugo&lt;/code&gt; directory and check out how things look locally by browsing to &lt;a class=&#34;link&#34; href=&#34;http://localhost:1313&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://localhost:1313&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;If all looks good, commit and push. The GitHub Actions workflow will take care of the rest of:
&lt;ol&gt;
&lt;li&gt;Invoking Hugo to generate content in &lt;code&gt;public&lt;/code&gt; within the runner&lt;/li&gt;
&lt;li&gt;Publish said content to our GitHub Pages &lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt; repository&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;closing-comments&#34;&gt;Closing comments&lt;/h2&gt;
&lt;p&gt;I hope you found this helpful!&lt;/p&gt;
&lt;p&gt;If you have any questions or feedback, drop a comment below, ping me on Twitter or find me in the &lt;a class=&#34;link&#34; href=&#34;https://winadmins.io&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;WinAdmins Discord&lt;/a&gt; (my handle is @acc)!&lt;/p&gt;
</description>
        </item>
        <item>
        <title>ConfigMgr Throttling Distribution Point Bandwidth</title>
        <link>https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/</link>
        <pubDate>Sun, 17 Feb 2019 00:00:00 +0100</pubDate>
        
        <guid>https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/</guid>
        <description>&lt;img src="https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-04.jpg" alt="Featured image of post ConfigMgr Throttling Distribution Point Bandwidth" /&gt;&lt;blockquote&gt;
&lt;p&gt;â¹ï¸ It looks like as I was writing this Microsoft have just publicly released a former internal document detailing some things that I had claimed to be undocumented (&lt;a class=&#34;link&#34; href=&#34;https://support.microsoft.com/en-us/help/4482728/understand-troubleshoot-content-distribution-in-configuration-manager&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;click here&lt;/a&gt;):
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Deep, deep, DEEP dive into content distribution in &lt;a href=&#34;https://twitter.com/hashtag/SCCM?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#SCCM&lt;/a&gt; by the great &lt;a href=&#34;https://twitter.com/vinay_pamnani?ref_src=twsrc%5Etfw&#34;&gt;@vinay_pamnani&lt;/a&gt;   Internal-only content originally, now free for public use! &lt;a href=&#34;https://t.co/oUPTSzrTmt&#34;&gt;https://t.co/oUPTSzrTmt&lt;/a&gt;&lt;/p&gt;&amp;mdash; Matt Toto (@_contoto) &lt;a href=&#34;https://twitter.com/_contoto/status/1092469116349440003?ref_src=twsrc%5Etfw&#34;&gt;February 4, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In this post I&amp;rsquo;ll cover ways you can control bandwidth for Configuration Manager using the rate limit config available for each distribution point. Outside of rate limits, a modern approach to traffic shaping content distribution to DPs is LEDBAT. &lt;a class=&#34;link&#34; href=&#34;https://deploymentresearch.com/Research/Post/657/LEDBAT-with-ConfigMgr-Pure-Love-By-Daniel-Olsson&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Read this great write up&lt;/a&gt; by &lt;a class=&#34;link&#34; href=&#34;https://deploymentresearch.com/Research/Post/657/LEDBAT-with-ConfigMgr-Pure-Love-By-Daniel-Olsson&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Daniel Olsson&lt;/a&gt; for more LEDBAT info in this use case.&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-01.jpg&#34; data-size=&#34;688x636&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-01_hu0bf41bd5756ea95c2802a66b5baf5007_53945_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-01_hu0bf41bd5756ea95c2802a66b5baf5007_53945_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-01.jpg&#34; width=&#34;688&#34; height=&#34;636&#34; loading=&#34;lazy&#34;
				alt=&#34;Distribution Point rate limits&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Distribution Point rate limits&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;How familiar are you with the difference between the options &amp;ldquo;pulse mode&amp;rdquo; and &amp;ldquo;limited to specified maximum transfer per hour&amp;rdquo;? I wasn&amp;rsquo;t sure up until recently, and like me you may have misunderstood the % you&amp;rsquo;re applying for each hour slot, when you may want pulse mode instead.&lt;/p&gt;
&lt;h2 id=&#34;pulse-mode&#34;&gt;Pulse mode&lt;/h2&gt;
&lt;p&gt;Pulse mode is simple. Pump out x sized data block every y seconds. Unfortunately, the maximum data block size is 256KB - enabling you to set a maximum cap of 2Mbps - so I support &lt;a class=&#34;link&#34; href=&#34;https://configurationmanager.uservoice.com/forums/300492-ideas/suggestions/36773581-increase-block-size-for-pulse-mode-distribution-p&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&amp;lsquo;Increase block size for pulse mode (distribution point rate limit)&#39;&lt;/a&gt;, do you?&lt;/p&gt;
&lt;h2 id=&#34;limited-to-specified-maximum-transfer-per-hour&#34;&gt;Limited to specified maximum transfer per hour&lt;/h2&gt;
&lt;p&gt;As for &amp;ldquo;limited to specified maximum transfer per hour&amp;rdquo;&amp;hellip; Turns out the % you apply for each hour is strictly relevant to how long for Configuration Manager can send using 100% available bandwidth, following by the how long Configuration Manager will not transmit data for, during that hour slot. The &lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/sccm/core/servers/deploy/configure/install-and-configure-distribution-points#bkmk_config-rate&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;documentation&lt;/a&gt; explains this well.&lt;/p&gt;
&lt;p&gt;However it does not explain the behaviour. For example, if you configured it to be 50/50, does this mean it&amp;rsquo;s pumping content flat out for 30 consecutive minutes of the hour and dead quiet for the other 30 conseuctive minutes? Perhaps that&amp;rsquo;s too much detail to care for and simply knowing that the DP will go full-pelt for 50% of the hour is good enough for you. But I was curious.&lt;/p&gt;
&lt;p&gt;In my lab, I set a distribution point&amp;rsquo;s &amp;ldquo;limit to specified maximum transfer per hour&amp;rdquo; to 10%. On the SCCM VM I set a bandwidth maximum limit of 10Mbps, in Hyper-V this is only for outbound traffic but that&amp;rsquo;s OK it&amp;rsquo;s what I&amp;rsquo;m testing. The bandwidth limit is mostly so I can transfer a 12GB package and make it run for long enough to watch what&amp;rsquo;s going on.&lt;/p&gt;
&lt;p&gt;With perfmon I wanted to cover 3600 seconds, and being limited to just 1000 samples, I could only go down to 1 sample every 4 seconds.&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-02.jpg&#34; data-size=&#34;1401x553&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-02_hu75f2d1fa595ae38c3f4f7fe78330a8c9_168011_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-02_hu75f2d1fa595ae38c3f4f7fe78330a8c9_168011_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-02.jpg&#34; width=&#34;1401&#34; height=&#34;553&#34; loading=&#34;lazy&#34;
				alt=&#34;PkgXferMgr.log&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;PkgXferMgr.log&lt;/figcaption&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-03.jpg&#34; data-size=&#34;1401x553&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-03_hudd5017d5b504d060beea5d3cedf9193c_190417_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-03_hudd5017d5b504d060beea5d3cedf9193c_190417_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-03.jpg&#34; width=&#34;1401&#34; height=&#34;553&#34; loading=&#34;lazy&#34;
				alt=&#34;PkgXferMgr.log&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;PkgXferMgr.log&lt;/figcaption&gt;
		
	&lt;/figure&gt; &lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-04.jpg&#34; data-size=&#34;1669x663&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-04_hu4d744b3ee3a02480a5bb7c9cf1213178_96508_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-04_hu4d744b3ee3a02480a5bb7c9cf1213178_96508_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-04.jpg&#34; width=&#34;1669&#34; height=&#34;663&#34; loading=&#34;lazy&#34;
				alt=&#34;perfmon&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;perfmon&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;After a few minutes of watching perfmon, task manager and resource monitor, it became clear that perfmon&amp;rsquo;s graph is not a true reflection. While it shows the behaviour, but it doesn&amp;rsquo;t show that Configuration Manager was actually pulsing at 10Mbps (or near abouts). The perfmon graph, and the calculations made by
SMS_PACKAGE_TRANSFER_MANAGER seemed to be perfectly time so perfmon could not plot/sample the peak of each pulse.&lt;/p&gt;
&lt;p&gt;I could have covered fewer seconds and sampled every 1 second and maybe caught the pulses in the graph. But the demonstration was to monitor the behaviour for the configured hour slot. So no, I wanted to look at the results for the last hour.&lt;/p&gt;
&lt;p&gt;From the above two log file snippets, I&amp;rsquo;ve learnt that SMS_PACKAGE_TRANSFER_MANAGER:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Determines current available bandwidth capacity&lt;/li&gt;
&lt;li&gt;By knowing the current available bandwidth capacity, calculate when the next pulse will be, while still satisfying the config applied by admin (in my case, 10%)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So it&amp;rsquo;s not black and white like I first thought, e.g. flat out for 10% of the hour and quiet for the remainder. From what I&amp;rsquo;ve learnt I appreciate the current behaviour is probably most ideal; it doesn&amp;rsquo;t create prolonged periods of congestion.&lt;/p&gt;
&lt;p&gt;With the current limitation of pulse mode (256KB block size), using this config could enable you to create a greater average. However, for brief moments of time during the hour you may still saturate bandwidth at either end causing spikes of latency â albeit for a second, not even that.&lt;/p&gt;
&lt;h2 id=&#34;no-concurrent-transfers-to-a-distribution-point-while-it-has-any-rate-limit-defined&#34;&gt;No concurrent transfers to a distribution point while it has any rate limit defined&lt;/h2&gt;
&lt;p&gt;Something you may also not be aware of is the behaviour of SMS_DISTRIBUTION_MANAGER when you configure any rate limit.&lt;/p&gt;
&lt;p&gt;The &lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/sccm/core/servers/deploy/configure/install-and-configure-distribution-points#bkmk_config-rate&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;documentation&lt;/a&gt; doesn&amp;rsquo;t yet say this, and I gave feedback, but when you configure any rate limit â whether pulse mode or the other â only one package will transfer at a time to that distribution point. Anything you had configured in the properties for the Software Distribution Component will be ignored.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s not a huge unknown. If you&amp;rsquo;re experienced then you may have known this already. However I have
(at the time of writing this) three years experience and I had no idea. I only discovered it while learning about the âlimited to specified maximum transfer per hourâ discussed in last section from a &lt;a class=&#34;link&#34; href=&#34;https://www.experts-exchange.com/articles/12177/SCCM-2012-How-Rate-Limiting-Pulse-Mode-saved-the-day.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;great write up here&lt;/a&gt; by &lt;a class=&#34;link&#34; href=&#34;https://twitter.com/sccmcanuck&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Chris Nienabar&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;software-distribution-component&#34;&gt;Software Distribution Component&lt;/h2&gt;
&lt;p&gt;This brings me on to the two relevant options in the Software Distribution Component.&lt;/p&gt;
&lt;p&gt;Where are the properties for the Software Distribution Component? Administratrtion &amp;gt; Sites &amp;gt; select your site &amp;gt; Configure Site Components &amp;gt; Software Distribution Components&lt;/p&gt;
&lt;p&gt;The two key options here are &lt;strong&gt;Maximum number of packages&lt;/strong&gt; and &lt;strong&gt;Maximum threads per package&lt;/strong&gt;. This is what &lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/en-us/sccm/core/servers/deploy/configure/site-components#software-distribution&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;the documentation&lt;/a&gt; has to say about it:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;On the General tab, specify settings that modify how the site server transfers content to its distribution points. When you increase the values you use for concurrent distribution settings, content distribution can use more network bandwidth.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-05.jpg&#34; data-size=&#34;528x545&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-05_hu4d3a1ede020e46eff141717f3a23ff3a_125751_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-05_hu4d3a1ede020e46eff141717f3a23ff3a_125751_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-throttling-distribution-point-bandwidth/images/configmgr-throttling-distribution-point-bandwidth-05.jpg&#34; width=&#34;528&#34; height=&#34;545&#34; loading=&#34;lazy&#34;
				alt=&#34;Software Distribution Component Properties&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Software Distribution Component Properties&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;I don&amp;rsquo;t want to come across like I&amp;rsquo;m hating on Microsoft&amp;rsquo;s documentation because &lt;a class=&#34;link&#34; href=&#34;https://twitter.com/AaronCzechowski&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;I see this dude&amp;rsquo;s tweets&lt;/a&gt; and I can tell hard work goes in to making things as great as they are. But hopefully I&amp;rsquo;ll have an opportunity here to further explain these two options, probably moreso the second than the first:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Maximum number of packages&lt;/strong&gt;: The number of packages that can be concurrently push.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Maximum threads per packages&lt;/strong&gt;: The number of distribution points that the distribution manager can concurrently push content to.&lt;/p&gt;
&lt;p&gt;The defaults are 3 and 5, so in effect it means you can transfer 3 packages to 5 distribution points concurrently.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>ConfigMgr Hardware Inventory Troubleshooting</title>
        <link>https://adamcook.io/p/configmgr-hardware-inventory-troubleshooting/</link>
        <pubDate>Sun, 28 Oct 2018 00:00:00 +0100</pubDate>
        
        <guid>https://adamcook.io/p/configmgr-hardware-inventory-troubleshooting/</guid>
        <description>&lt;img src="https://adamcook.io/p/configmgr-hardware-inventory-troubleshooting/images/configmgr-hardware-inventory-troubleshooting-01.jpg" alt="Featured image of post ConfigMgr Hardware Inventory Troubleshooting" /&gt;&lt;p&gt;I&amp;rsquo;ve recently updated a site to 1806 and was keen to get all clients up to date too. Some machines targeted for the pre-production client were not upgrading. When I looked closer at one client I suspected client health because a hardware inventory had not been submitted in months.&lt;/p&gt;
&lt;p&gt;Little did I know until recently, a lack of recent hardware inventory data could be a result of other things and client health is least likely to be the root cause. Instead of blindly reinstalling or manually upgrading the client, I wanted to try and understand what&amp;rsquo;s going on.&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re concerned about client health look at &lt;a class=&#34;link&#34; href=&#34;https://www.andersrodland.com/configmgr-client-health/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Anders Rodland&amp;rsquo;s ConfigMgr Client Health script&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There are great articles already out there on this topic, here&amp;rsquo;s some I used to help me with this issue:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blogs.technet.microsoft.com/scotts-it-blog/2015/04/23/hardware-inventory-in-depth-part-1/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hardware Inventory â In-Depth (Part 1)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.enhansoft.com/blog/updated-troubleshoot-configmgr-hardware-inventory-issues&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Updated â Troubleshoot ConfigMgr Hardware Inventory Issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blogs.technet.microsoft.com/sudheesn/2010/05/31/troubleshooting-sccm-part-ii-hardware-inventory/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Troubleshooting SCCM ..Part II (Hardware Inventory)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://thesysadminchannel.com/troubleshooting-hardware-inventory-sccm-full-guide/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Solved: Troubleshooting Hardware Inventory in SCCM | Step By Step Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;From the above I understood the problem could be:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Broken WMI repository on the client&lt;/li&gt;
&lt;li&gt;BITS on the client is failing to POST the data to the MP&lt;/li&gt;
&lt;li&gt;The INVENTORY_DATA_LOADER (?) refusing to handle the MIF because perhaps:
&lt;ul&gt;
&lt;li&gt;bad syntax&lt;/li&gt;
&lt;li&gt;mismatch in versions&lt;/li&gt;
&lt;li&gt;too big as it exceeds the MAX FILE SIZE&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;client-side&#34;&gt;Client side&lt;/h2&gt;
&lt;p&gt;First port of call was InventoryAgent.log on the client. This log file records activity on the client about hardware and software inventory processes and heartbeat discovery. At the start of the cycle you will see the log tell us which action its performing and whether it&amp;rsquo;s a full, delta and resync report.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Action&lt;/th&gt;
&lt;th&gt;Guid&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Hardware inventory&lt;/td&gt;
&lt;td&gt;{00000000-0000-0000-0000-000000000001}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Software inventory&lt;/td&gt;
&lt;td&gt;{00000000-0000-0000-0000-000000000002}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Data Discovery Record (DDR)&lt;/td&gt;
&lt;td&gt;{00000000-0000-0000-0000-000000000003}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;File collection&lt;/td&gt;
&lt;td&gt;{00000000-0000-0000-0000-000000000010}&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-hardware-inventory-troubleshooting/images/configmgr-hardware-inventory-troubleshooting-01.jpg&#34; data-size=&#34;1027x527&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-hardware-inventory-troubleshooting/images/configmgr-hardware-inventory-troubleshooting-01_hub25f78b6c8b4fb440eba083135e45982_98737_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/configmgr-hardware-inventory-troubleshooting/images/configmgr-hardware-inventory-troubleshooting-01_hub25f78b6c8b4fb440eba083135e45982_98737_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-hardware-inventory-troubleshooting/images/configmgr-hardware-inventory-troubleshooting-01.jpg&#34; width=&#34;1027&#34; height=&#34;527&#34; loading=&#34;lazy&#34;
				alt=&#34;InventoryAgent.log&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;InventoryAgent.log&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Looking at InventoryAgent.log above you can see:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The hardware inventory action took place by looking at the GUID&lt;/li&gt;
&lt;li&gt;The MajorVersion and MinorVersion; MajorVersion increments with everyÂ fullÂ or resyncÂ report and the MinorVersion increments with everyÂ delta report.
&lt;ul&gt;
&lt;li&gt;Full is triggered for the initial report&lt;/li&gt;
&lt;li&gt;Delta is triggered for each hardware inventory after the full&lt;/li&gt;
&lt;li&gt;Resync is triggered when either the client recognises there&amp;rsquo;s a mismatch in report versions when comparing what has previously been executed, or when SMS_INVENTORY_DATA_LOADER compares what the client has sent compared to what&amp;rsquo;s in the site database&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can manually trigger a delta by running the Hardware Inventory Cycle in the Control Panel applet, however consider running the below if you want to force a full report. Also consider using &lt;a class=&#34;link&#34; href=&#34;https://recastsoftware.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Recast&amp;rsquo;s Right Click Tools&lt;/a&gt; which gives you this option from the console.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;Get-CimInstance -Namespace &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;root\ccm\invagt&amp;#34;&lt;/span&gt; -ClassName &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;InventoryActionStatus&amp;#34;&lt;/span&gt; | 
    Where-Object { $_.InventoryActionID &lt;span style=&#34;color:#f92672&#34;&gt;-eq&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{00000000-0000-0000-0000-000000000001}&amp;#34;&lt;/span&gt; } | 
        Remove-CimInstance

$InvokeCimMethodSplat = @{
    ComputerName = $env:COMPUTERNAME
    Namespace = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;root\ccm&amp;#34;&lt;/span&gt;
    Class = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SMS_Client&amp;#34;&lt;/span&gt;
    Arguments = @{
        TriggerSchedule = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{00000000-0000-0000-0000-000000000001}&amp;#34;&lt;/span&gt;
    }
}

Invoke-CimMethod @InvokeCimMethodSplat
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Going back to the problem I was troubleshooting&amp;hellip; I was confident WMI was healthy because I could see various areas of WMI being successfully queried and at the end of the cycle I saw &amp;ldquo;Inventory: Successfully sent report. Destination:mp:MP_HinvEndpoint&amp;hellip;&amp;rdquo;. After seeing that, I figured let&amp;rsquo;s look server side.&lt;/p&gt;
&lt;h2 id=&#34;server-side&#34;&gt;Server side&lt;/h2&gt;
&lt;p&gt;The three key areas server side in this scenario are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SMSINVENTORY_DATA_LOADER - dataldr.log&lt;/li&gt;
&lt;li&gt;Management Point - MP_hinv.log&lt;/li&gt;
&lt;li&gt;IIS -Â C:\inetpub\logs\LogFilesÂ  - This is the default location for IIS logs, if everything else is default, your SCCM IIS logs should be in a sub folder namedÂ W3SVC1. You can find out yourself by looking in IIS Manager.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In all three of the above, I could not see any reference of the machine&amp;rsquo;s name, IP or GUID.&lt;/p&gt;
&lt;h2 id=&#34;back-to-the-client&#34;&gt;Back to the client&lt;/h2&gt;
&lt;p&gt;Looking back at the client, I could see a big queue of BITS job with mixed states: suspended, queued, error and transient_error. You can view the current BITS jobs using the below commands:&lt;/p&gt;
&lt;p&gt;CMD&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bitsadmin /list /allusers
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;PowerShell&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;Get-BitsTransfer -AllUsers
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Get more information about the reason why they&amp;rsquo;re failing with:&lt;/p&gt;
&lt;p&gt;CMD&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bitsadmin /info JOBID /verbose
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;PowerShell&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;Get-BitsTransfer -JobId JOBID | Select-Object *
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To reset all BITS jobs&amp;hellip; You will notice most of the jobs are owned by SYSTEM or NETWORK SERVICE, of which commands you run in any other context will not be successful at purging. A workaround could be to create a scheduled task that runs as SYSTEM to run either of the below:&lt;/p&gt;
&lt;p&gt;CMD&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bitsadmin /reset /allusers
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;PowerShell&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;Get-BitsTransfer -AllUsers | Remove-BitsTransfer
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;However, an easier way posted byÂ &lt;a class=&#34;link&#34; href=&#34;http://www.scconfigmgr.com/2014/03/28/how-to-reset-bits-transfer-queue/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Nickolaj Andersen&lt;/a&gt; works well:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;net stop BITS 
ipconfig /flushdns 
&lt;span style=&#34;color:#66d9ef&#34;&gt;ren&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;%ALLUSERSPROFILE%&lt;span style=&#34;color:#e6db74&#34;&gt;\Application Data\Microsoft\Network\Downloader\qmgr0.dat&amp;#34;&lt;/span&gt; qmgr0.dat.old 
&lt;span style=&#34;color:#66d9ef&#34;&gt;ren&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;%ALLUSERSPROFILE%&lt;span style=&#34;color:#e6db74&#34;&gt;\Application Data\Microsoft\Network\Downloader\qmgr1.dat&amp;#34;&lt;/span&gt; qmgr1.dat.old
net start BITS
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For me, my problem was proxy related. I could see error messages referencing timeouts as the issue, I got this by looking at the verbose BITS jobs information.&lt;/p&gt;
&lt;p&gt;After fixing that and clearing all jobs, I triggered another full hardware inventory report and quickly saw the BITS job leave the client with no hang ups.&lt;/p&gt;
&lt;h2 id=&#34;back-to-the-server&#34;&gt;Back to the server&lt;/h2&gt;
&lt;p&gt;Starting off with the IIS logs I saw successful POST from the client, so data uploaded OK.&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-hardware-inventory-troubleshooting/images/configmgr-hardware-inventory-troubleshooting-02.jpg&#34; data-size=&#34;1027x527&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-hardware-inventory-troubleshooting/images/configmgr-hardware-inventory-troubleshooting-02_hu52b2e100e8075b831144081d27c626e5_98611_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/configmgr-hardware-inventory-troubleshooting/images/configmgr-hardware-inventory-troubleshooting-02_hu52b2e100e8075b831144081d27c626e5_98611_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-hardware-inventory-troubleshooting/images/configmgr-hardware-inventory-troubleshooting-02.jpg&#34; width=&#34;1027&#34; height=&#34;527&#34; loading=&#34;lazy&#34;
				alt=&#34;IIS log file&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;IIS log file&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Next, I want see how the management point handles the report. In the below you can see that it successfully receives it in XML form and parses it into a MIF file, ready to then be parsed by the SMS_INVENTORY_DATA_LOADER and submitted in to the site database. Here, I had no issues.&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-hardware-inventory-troubleshooting/images/configmgr-hardware-inventory-troubleshooting-03.jpg&#34; data-size=&#34;1134x310&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-hardware-inventory-troubleshooting/images/configmgr-hardware-inventory-troubleshooting-03_hu84686cd0fa2de9575617ecd542a88a40_97721_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/configmgr-hardware-inventory-troubleshooting/images/configmgr-hardware-inventory-troubleshooting-03_hu84686cd0fa2de9575617ecd542a88a40_97721_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-hardware-inventory-troubleshooting/images/configmgr-hardware-inventory-troubleshooting-03.jpg&#34; width=&#34;1134&#34; height=&#34;310&#34; loading=&#34;lazy&#34;
				alt=&#34;MP_Hinv.log&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;MP_Hinv.log&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;However I had issues with SMS_INVENTORY_DATA_LOADER. Nothing too complicated though, the MIF was just too big than the allowed MIF size. I guess where its a mature server, been in production in a while, accumulated a lot of &amp;ldquo;things&amp;rdquo;, as well as whatever additional hardware classes is configured client settings for hardware inventory. And the fact it&amp;rsquo;s a full report.&lt;/p&gt;
&lt;p&gt;The below suggests my maximum allowed size is 1 byte, this was true just for the purpose of creating this screenshot.&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
		&lt;a href=&#34;https://adamcook.io/p/configmgr-hardware-inventory-troubleshooting/images/configmgr-hardware-inventory-troubleshooting-04.jpg&#34; data-size=&#34;1026x523&#34;&gt;
			&lt;img srcset=&#34;https://adamcook.io/p/configmgr-hardware-inventory-troubleshooting/images/configmgr-hardware-inventory-troubleshooting-04_hu05eb4c3f05d5178c137c278912f7f85f_112329_480x0_resize_q75_box.jpg 480w, https://adamcook.io/p/configmgr-hardware-inventory-troubleshooting/images/configmgr-hardware-inventory-troubleshooting-04_hu05eb4c3f05d5178c137c278912f7f85f_112329_1024x0_resize_q75_box.jpg 1024w&#34;
				src=&#34;https://adamcook.io/p/configmgr-hardware-inventory-troubleshooting/images/configmgr-hardware-inventory-troubleshooting-04.jpg&#34; width=&#34;1026&#34; height=&#34;523&#34; loading=&#34;lazy&#34;
				alt=&#34;dataldr.log&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;dataldr.log&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;On the primary site server I increasedÂ &lt;code&gt;HKLM\Software\Microsoft\SMS\Components\SMS_INVENTORY_DATA_LOADER\Max MIF Size&lt;/code&gt;. The decimal value is in bytes so set it to a value at your discretion, your best gauge is see how far over the limit you are by observing the error in dataldr.log and add a little more. Then restart the SMS_INVENTORY_DATA_LOADER component in Configuration Manager Service Manager (Monitoring &amp;gt; Component Status &amp;gt; Right click any component &amp;gt; Start &amp;gt; Configuration Manager Service Manager).&lt;/p&gt;
&lt;p&gt;Then, some time later, the hardware scan timestamp for the device in the console updated and I could see the new data in the device&amp;rsquo;s Resource Manager.&lt;/p&gt;
&lt;p&gt;I felt this was worth writing up because while the links I shared at the start cover most of what I&amp;rsquo;ve written, I wanted to show that BITS is a factor - the other posts don&amp;rsquo;t touch on this - and use it as a note for me in future. You may find you&amp;rsquo;ll only hit one or two of these issues when troubleshooting hardware inventory, unlikely to be all of them in one go like I almost did.&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
